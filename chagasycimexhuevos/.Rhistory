a <- available.packages()
head(rownames(a), 3)
install.packages("slidify")
install.packages(c("ggplot2", "devtools"))
install.packages("slidify")
source("http://bioconductor.org/bioLite.R")
biocLite()
library(ggplot2)
search()
"2015-03-23"+30
a<-as.Date("2015-03-23")
a+40
+90
a+90
a+100
-7
a+93
x<-c(0,1,2,NA, FALSE)
x
is.na(x[3])
requiredPackages <- c("XML"
,"doParallel", "lubridate","PBSmapping","plyr","inline","Rcpp"
)
packages <- requiredPackages[!(requiredPackages %in% rownames(installed.packages()))]
if(length(packages) > 0) {
install.packages(packages)
}
fa<-1100+200+26150+2000+2865
fa
2*32315
fees<-((1958+370+168+250)*2)+150
fees
fees+health+rent
fees<-((1958+370+168+250)*2)+150
health<-1570*2
rent<-4326*2
fees+health+rent
tuition(21088*2)
fa<-(1100+200+26150+2000+2865)*2
fa
*
tuition<-(21088*2)
fees<-((1958+370+168+250)*2)+150
health<-1570*2
rent<-4326*2
expense<-fees+health+rent
expenses
expense
expense+tuition
y<-expense+tuition
fa-y
tuition
health+fees
fees
?binom.test
bisampsize<-function(m){
((1.96/m)^2)*0.25
}
bisampsize(0.5)
bisampsize<-function(m){
((1.96/m)^2)*0.25
}
bisampsize(0.25)
bisampsize<-function(m){
((1.96/m)^2)*0.25
}
bisampsize(0.20)
1/12
3/12
binom.power
library(binom)
install.packages(binom)
install.packages("binom")
version
x4 <- sample(1:10, 5, replace=T)
x4
tray1<-sample(1:4, 4)
tray1`
r
)
q
;
''
'
""
)
asdf
104r
+
)
""
'
''
''
sample(1:4, 4)
sample(1:4, 4)
tray1<-
sample(1:4,4)
tray2<-sample(1:4,4)
tray3<-sample(1:4,4)
tray4<-sample(1:4,4)
tray1
tray2
tray3
tray4
quiz<-81.5*15
mid<-84*30
quiz+mid
quiz<-81.5*.15
mid<-84*.30
quiz+mid
100-37.4
quiz<-81.5*.15
mid<-84*.25
hw1<-6*.1
quiz+mid+hw1
.8*50
rnorm(4,4)
sample(1:4,4)
sample(1:4,4)
sample(1:4,4)
sample(1:4,4)
library(lubridate) #para extracting dates
library(reshape2) #para make the wide data into long data
library(matrixStats)
library(ggplot2)
library(plyr)  #para rbind.fill function
library(geeM)
library(MASS)
library(lmtest)
library(pscl)
library(survival)
library(doBy)
library(missMDA)
library(Rmisc) #summarySE command
library(lme4)#linear mixed effects
library(nlme)
library(stargazer)
setwd("c:\\Users\\tradylan\\Documents\\Laboratory\\chagasycimexhuevos")
FFdataPC <- read.csv("FertilityFecundityDataPC.csv")
pceggmod3c <- glm.nb(egg_total~infected+PC1+PC2+PC3+factor(trial),
data=FFdataPC, offset(log(lifespan)))
pilots<-which(FFdataPC$trial==0)
repones<-which(FFdataPC$trial==1)
reptwos<-which(FFdataPC$trial==2)
upcad<-data.frame(FFdataPC$avmaxtemp,FFdataPC$avmintemp,FFdataPC$avmaxhum,FFdataPC$avminhum)
names(upcad)
pcoutinda<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[pilots], scale=TRUE)
pcoutinda<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[pilots,], scale=TRUE)
pcoutinda
pcoutinda$x
length(pilots)
dim(pcoutinda$x)
pcoutinda<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[pilots,], scale=TRUE)
pcoutindb<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[repones,], scale=TRUE)
pcoutindc<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[reptwos,], scale=TRUE)
pcia <- pcoutinda$x
pcib <- pcoutndb$x
pcic <- pcoutindc$x
pcib <- pcoutindb$x
pcic <- pcoutindc$x
uprincea<-data.frame(pcia)
uprinceb<-data.frame(pcib)
uprincec<-data.frame(pcic)
uprincea$idnum<-pilots
uprincea$idnum
pilots
uprincea$idnum<-pilots
uprinceb$idnum<-repones
uprincec$idnum<-reptwos
#Columns need to be renamed to be difirrent from non-hatch components
names(uprincea)<-c("UPC1", "UPC2", "UPC3", "UPC4", "idnum")
names(uprinceb)<-c("UPC1", "UPC2", "UPC3", "UPC4", "idnum")
names(uprincec)<-c("UPC1", "UPC2", "UPC3", "UPC4", "idnum")
# Merge the data sets
single1<-merge(FFdataPC, uprincea, by="idnum")
single2a<-merge(single1, uprinceb, by="idnum")
single2b<-merge(single2a, uprincec, by="idnum")
View(single2b)
single2a
single1<-merge(FFdataPC, uprincea, by="idnum")
single1
View(single1)
?merge
single1<-merge(FFdataPC, uprincea, by="idnum",all.y= TRUE)
single2a<-merge(single1, uprinceb, by="idnum", all.y= TRUE)
single2b<-merge(single2a, uprincec, by="idnum", all.y= TRUE)
View(single2b)
?match
?merge
single1<-merge(FFdataPC, uprincea, by="idnum",all.y= TRUE)
?match
which(FFdataPC$idnum==uprinceb$idnum[1])
which(FFdataPC$idnum==uprinceb$idnum[2])
which(FFdataPC$idnum==uprinceb$idnum[length(uprinceb$idnum)])
names(single1)
single1<-merge(FFdataPC, uprincea, by="idnum",all.y= TRUE)
for(i in 1:length(uprinceb)) {
same<-which(FFdataPC$idnum==uprinceb$idnum[i])
FFdataPC$UPC1[same]<-uprinceb$UPC1[i]
FFdataPC$UPC2[same]<-uprinceb$UPC2[i]
FFdataPC$UPC3[same]<-uprinceb$UPC3[i]
FFdataPC$UPC4[same]<-uprinceb$UPC4[i]
}
FFdataPC$UPC1
single1<-merge(FFdataPC, uprincea, by="idnum",all.y= TRUE)
for(i in 1:length(uprinceb)) {
same<-which(single1$idnum==uprinceb$idnum[i])
single1$UPC1[same]<-uprinceb$UPC1[i]
single1$UPC2[same]<-uprinceb$UPC2[i]
single1$UPC3[same]<-uprinceb$UPC3[i]
single1$UPC4[same]<-uprinceb$UPC4[i]
}
single1$UPC1
View(single1)
dim(single1)
dim(FFdataPC)
single1<-merge(FFdataPC, uprincea, by="idnum",all.x= TRUE)
dim(single1)
for(i in 1:length(uprinceb)) {
same<-which(single1$idnum==uprinceb$idnum[i])
single1$UPC1[same]<-uprinceb$UPC1[i]
single1$UPC2[same]<-uprinceb$UPC2[i]
single1$UPC3[same]<-uprinceb$UPC3[i]
single1$UPC4[same]<-uprinceb$UPC4[i]
}
View(single1)
for(i in 1:length(uprincec)) {
same<-which(single1$idnum==uprincec$idnum[i])
single1$UPC1[same]<-uprincec$UPC1[i]
single1$UPC2[same]<-uprincec$UPC2[i]
single1$UPC3[same]<-uprincec$UPC3[i]
single1$UPC4[same]<-uprincec$UPC4[i]
}
View(single1)
dim(single1)
View(FFdataPC)
pilots<-which(FFdataPC$trial==0)
repones<-which(FFdataPC$trial==1)
reptwos<-which(FFdataPC$trial==2)
pcoutinda<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[pilots,], scale=TRUE)
pcoutindb<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[repones,], scale=TRUE)
pcoutindc<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[reptwos,], scale=TRUE)
pcia <- pcoutinda$x
pcib <- pcoutindb$x
pcic <- pcoutindc$x
#We need to add these componenets to original data set.
uprincea<-data.frame(pcia)
uprinceb<-data.frame(pcib)
uprincec<-data.frame(pcic)
# #attach idnum to merge on.
uprincea$idnum<-pilots
uprinceb$idnum<-repones
uprincec$idnum<-reptwos
pilots
repones
rreptwos
reptwos
single1<-merge(FFdataPC, uprincea, by="idnum",all.x= TRUE)
View(single1)
pilots<-which(FFdataPC$trial==0)
repones<-which(FFdataPC$trial==1)
reptwos<-which(FFdataPC$trial==2)
pcoutinda<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[pilots,], scale=TRUE)
pcoutindb<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[repones,], scale=TRUE)
pcoutindc<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[reptwos,], scale=TRUE)
pcia <- pcoutinda$x
pcib <- pcoutindb$x
pcic <- pcoutindc$x
#We need to add these componenets to original data set.
uprincea<-data.frame(pcia)
uprinceb<-data.frame(pcib)
uprincec<-data.frame(pcic)
# #attach idnum to merge on.
uprincea$idnum<-pilots
uprinceb$idnum<-repones
uprincec$idnum<-reptwos
#Columns need to be renamed to be difirrent from non-hatch components
names(uprincea)<-c("UPC1", "UPC2", "UPC3", "UPC4", "idnum")
names(uprinceb)<-c("UPC1", "UPC2", "UPC3", "UPC4", "idnum")
names(uprincec)<-c("UPC1", "UPC2", "UPC3", "UPC4", "idnum")
# Merge the data sets
single1<-merge(FFdataPC, uprincea, by="idnum",all.x= TRUE)
View(single1)
uprinceb$idnum[i]
uprincec$idnum[i]
single1$idnum[69]
for(i in 1:length(uprinceb)) {
same<-which(single1$idnum==uprinceb$idnum[i])
single1$UPC1[same]<-uprinceb$UPC1[i]
single1$UPC2[same]<-uprinceb$UPC2[i]
single1$UPC3[same]<-uprinceb$UPC3[i]
single1$UPC4[same]<-uprinceb$UPC4[i]
}
View(single1)
length(uprinceb)
uprinceb
for(i in 1:length(uprinceb$idnum)) {
same<-which(single1$idnum==uprinceb$idnum[i])
single1$UPC1[same]<-uprinceb$UPC1[i]
single1$UPC2[same]<-uprinceb$UPC2[i]
single1$UPC3[same]<-uprinceb$UPC3[i]
single1$UPC4[same]<-uprinceb$UPC4[i]
}
for(i in 1:length(uprincec$idnum)) {
same<-which(single1$idnum==uprincec$idnum[i])
single1$UPC1[same]<-uprincec$UPC1[i]
single1$UPC2[same]<-uprincec$UPC2[i]
single1$UPC3[same]<-uprincec$UPC3[i]
single1$UPC4[same]<-uprincec$UPC4[i]
}
View(single1)
FFdataPC[pilot]$idnum
FFdataPC[pilots]$idnum
pilot
pilots<-which(FFdataPC$trial==0)
pilots
pilots<-which(FFdataPC$trial==0)
repones<-which(FFdataPC$trial==1)
reptwos<-which(FFdataPC$trial==2)
pcoutinda<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[pilots,], scale=TRUE)
pcoutindb<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[repones,], scale=TRUE)
pcoutindc<- prcomp(~avmaxtemp+avmintemp+avmaxhum+
avminhum, data=FFdataPC[reptwos,], scale=TRUE)
pcia <- pcoutinda$x
pcib <- pcoutindb$x
pcic <- pcoutindc$x
FFdataPC[pilots]$idnum
FFdataPC$idnum[pilots]
FFdataPC$PC1[pilots]
pcp <-data.frame(FFdataPC$avmaxtemp[pilots],FFdataPC$avmintemp[pilots],
FFdataPC$avmaxhum[pilots], FFdataPC$avminhum[pilots])
pcp <-data.frame(FFdataPC$avmaxtemp[pilots],FFdataPC$avmintemp[pilots],
FFdataPC$avmaxhum[pilots], FFdataPC$avminhum[pilots])
pcro<-  pcp <-data.frame(FFdataPC$avmaxtemp[repones],FFdataPC$avmintemp[repones],
FFdataPC$avmaxhum[repones], FFdataPC$avminhum[repones])
pcrt<-  pcp <-data.frame(FFdataPC$avmaxtemp[reptwos],FFdataPC$avmintemp[reptwos],
FFdataPC$avmaxhum[reptwos], FFdataPC$avminhum[reptwos])
estim_ncpPCA(pcp, ncp.min=0, ncp.max=4, method.cv="loo")
estim_ncpPCA(pcro, ncp.min=0, ncp.max=4, method.cv="loo")
estim_ncpPCA(pcrt, ncp.min=0, ncp.max=4, method.cv="loo")
FFdataPC<-single1
#at first only infection and PC1 were significant
pceggmod3ca <- glm.nb(egg_total~infected+UPC1+UPC2+UPC3,
data=FFdataPC[pilots,], offset(log(lifespan)))#AIC=
##remove pc3, PC still not sign
pceggmod2ca <- glm.nb(egg_total~infected+UPC1+UPC2,
data=FFdataPC[pilots,], offset(log(lifespan))) #AIC=
#remove pc2
pceggmod1ca <- glm.nb(egg_total~infected+UPC1,
data=FFdataPC[pilots,], offset(log(lifespan))) #AIC=
#
pceggmod3cb <- glm.nb(egg_total~infected+UPC1+UPC2+UPC3,
data=FFdataPC[repones,], offset(log(lifespan))) #AIC=
#
pceggmod2cb <- glm.nb(egg_total~infected+UPC1+UPC2,
data=FFdataPC[repones,], offset(log(lifespan)))#AIC=
#
pceggmod1cb <- glm.nb(egg_total~infected+UPC1,
data=FFdataPC[repones,], offset(log(lifespan)))#AIC=
#all variables were significant for this model
pceggmod3cc <- glm.nb(egg_total~infected+UPC1+UPC2+UPC3,
data=FFdataPC[reptwos,], offset(log(lifespan))) #
pceggmod2cc <- glm.nb(egg_total~infected+UPC1+UPC2,
data=FFdataPC[reptwos,], offset(log(lifespan)))#
pceggmod1cc <- glm.nb(egg_total~infected+UPC1,
data=FFdataPC[reptwos,], offset(log(lifespan)))#
dummy_var <- pceggmod3c
Pilot_model <- pceggmod1ca
Rep1_model <- pceggmod1cb
Rep2_model <- pceggmod2cc
Pilot_model_all <- pceggmod3ca
Rep1_model_all <- pceggmod3cb
Rep2_model_all <- pceggmod3cc
stargazer(dummy_var, Pilot_model_all, Rep1_model_all, Rep2_model_all, type="html", out="trialsep_mods.htm",
column.labels=c("Dummy Variable", "Pilot","Rep 1", "Rep 2")
)
