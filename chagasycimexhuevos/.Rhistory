legend("topright", c("All Bugs","infected","controls"),
col=c("black","red", "steelblue"), pch=c(1,1,1))
#dev.off()
#a quick check seeing if alivetotweek is the sum of the other two.
#test<-aliveinfweek+aliveconweek
#testing<-data.frame(test, alivetotweek, aliveinfweek, aliveconweek)
#lets get a better view by looking at (percents)
which(cimfert$infected==1)
peraltotweek<-alivetotweek/(length(cimfert$ID))
peralinfweek <-aliveinfweek/(length(which(cimfert$infected==1)))
peralconweek <-aliveconweek/(length(which(cimfert$infected==0)))
#pdf("graphs/PerAlvInsctsByWeek.pdf")
plot(peraltotweek, col="black", xlab="Proportion Alive", ylab="Week",
main="Proportion Alive in Infected and Controls by Week")
points(peralconweek, col="steelblue")
points(peralinfweek, col="red")
legend("topright", c("All Bugs","infected","controls"),
col=c("black","red", "steelblue"), pch=c(1,1,1))
#dev.off()
#lets do something similar to see the number of egg events
eggetotweek <- c(1:length(unique(Compile$week))*NA)
eggeinfweek <- c(1:length(unique(Compile$week))*NA)
eggeconweek <- c(1:length(unique(Compile$week))*NA)
for (i in 1:length(unique(Compile$week))){
week<-which(Compile$week==i)
eggetotweek[i]<-sum(Compile$eggevent[week], na.rm=TRUE)
inf<-intersect(week, infected)
con<-intersect(week, controlled)
eggeinfweek[i]<-sum(Compile$eggevent[inf], na.rm=TRUE)
eggeconweek[i]<-sum(Compile$eggevent[con], na.rm=TRUE)
}
plot(eggetotweek)
points(eggeinfweek, col="red")
points(eggeconweek, col="steelblue")
legend("topright", c("infected","controls"),
col=c("red", "steelblue"), pch=c(1,1))
#lets get a better view by looking at percents
peregeinfweek<-eggeinfweek/length(infect)
peregeconweek<-eggeconweek/length(controls)
plot(peregeinfweek, type="o", col="red", xlab="Week", ylab="Proportion of Insects that Laid Eggs",
main="Proportion Insects that Laid in Infected and Controls by Week")
lines(peregeconweek, col="steelblue", type="o")
legend("topright", c("infected","controls"),
col=c("red", "steelblue"), pch=c(1,1))
#now we need to see proportion of alive insects
proeggeinfweek<-eggeinfweek/aliveinfweek
proeggeconweek<-eggeconweek/aliveconweek
##see if we can add Confidence Intervals below
#pdf("PerAlvInsctsLaidEggsbyWeek")
plot(proeggeinfweek, type="o", col="red", xlab="Week", ylab="Proportion of Alive Insects that Laid Eggs",
main="Proportion of Alive Insects that Laid in Infected and Controls by Week")
lines(proeggeconweek, col="steelblue")
legend("bottomleft", c("infected","controls"),
col=c("red", "steelblue"), pch=c(1,1))
# dev.off()
#now to do that with the total number of eggs.
eggstotweek <- c(1:length(unique(Compile$week))*NA)
eggsinfweek <- c(1:length(unique(Compile$week))*NA)
eggsconweek <- c(1:length(unique(Compile$week))*NA)
for (i in 1:length(unique(Compile$week))){
week<-which(Compile$week==i)
eggstotweek[i]<-sum(Compile$eggs[week], na.rm=TRUE)
inf<-intersect(week, infected)
con<-intersect(week, controlled)
eggsinfweek[i]<-sum(Compile$eggs[inf], na.rm=TRUE)
eggsconweek[i]<-sum(Compile$eggs[con], na.rm=TRUE)
}
plot(eggstotweek)
points(eggsinfweek, col="red")
points(eggsconweek, col="steelblue")
legend("topright", c("infected","controls"),
col=c("red", "steelblue"), pch=c(1,1))
#lets get a better view by looking at percents
peregsinfweek<-eggsinfweek/length(infect)
peregsconweek<-eggsconweek/length(controls)
plot(peregsinfweek, type="o", col="red", xlab="Week", ylab="Number of Eggs Laid Per Insect",
main="Eggs Laid Per Insect by Week")
lines(peregsconweek, col="steelblue")
legend("topright", c("infected","controls"),
col=c("red", "steelblue"), pch=c(1,1))
#now we need to see proportion of alive insects
proeggsinfweek<-eggsinfweek/aliveinfweek
proeggsconweek<-eggsconweek/aliveconweek
par(mfrow=c(1,1))
#  pdf(graphs/NmbEggsByAlvInsctbyWeekYInfyCont.pdf)
#consider how to add CI's
plot(proeggsinfweek, type="o", col="red", xlab="Week", ylab="Num Eggs Per Alive Insect",
main="Number of Eggs Per Alive Insect by Week and Treatment Group")
lines(proeggsconweek, col="steelblue", type="o")
legend("topright", c("infected","controls"),
col=c("red", "steelblue"), pch=c(1,1))
#  dev.off()
#Now lets observe percentage of insects hatching
plot(Compile$week, Compile$perferc, na.rm=TRUE)
######################################################################
#plot humidity and temperature over time
Compile$avhum <- as.numeric(Compile$avhum)
plot(Compile$date, Compile$avhum,col="dodgerblue", ylim=c(24,60),
main="Temperature and Humidity", ylab="Relative Humidity(%) and Temperature(C)",
xlab="Date")
points(Compile$date, Compile$avtemp, col="tomato")
legend("topleft", c("Humidity", "Temperature"), text.col=c("dodgerblue","tomato"))
#eggs laid by humidity
humeggs<-lm(Compile$eggs ~Compile$avhum)
plot(Compile$avhum, Compile$eggs+rnorm(length(Compile$eggs), 0, 0.5),
main="Eggs by Humidity", ylab="Number of Eggs",
xlab="Humidity(%)")
abline(humeggs)
#summary(humeggs)
#eggs by average hum
egghum<-ggplot(aes( y= eggs, x= avhum, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
egghum<-egghum+ggtitle("Number of Eggs Laid by Average Humidity and Infection Status")
egghum<-egghum+facet_grid(. ~infected)+geom_smooth(method= "lm")
egghum
eghum<-glm(eggs ~infected*avhum, data=Compile)
#eggs by average high hum
egghumavhigh<-ggplot(aes( y= eggs, x= avhumhigh, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
egghumavhigh<-egghumavhigh+ggtitle("Number of Eggs Laid by Average Max Humidity and Infection Status")
egghumavhigh<-egghumavhigh+facet_grid(. ~infected)+geom_smooth(method= "lm")
egghumavhigh
#eggs by average low hum
egghumavlow<-ggplot(aes( y= eggs, x= avhumlow, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
egghumavlow<-egghumavlow+ggtitle("Number of Eggs Laid by Average Low Humidity and Infection Status")
egghumavlow<-egghumavlow+facet_grid(. ~infected)+geom_smooth(method= "lm")
egghumavlow
#eggs by week max high
egghumhigh<-ggplot(aes( y= eggs, x= hummax, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
egghumhigh<-egghumhigh+ggtitle("Number of Eggs Laid by Max Humidity and Infection Status")
egghumhigh<-egghumhigh+facet_grid(. ~infected)+geom_smooth(method= "lm")
egghumhigh
#eggs by week low high
egghumlow<-ggplot(aes( y= eggs, x= hummin, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
egghumlow<-egghumlow+ggtitle("Number of Eggs Laid by Low Humidity and Infection Status")
egghumlow<-egghumlow+facet_grid(. ~infected)+geom_smooth(method= "lm")
egghumlow
#eggs by hum diff
egghumdiff<-ggplot(aes( y= eggs, x= humdiff, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
egghumdiff<-egghumdiff+ggtitle("Number of Eggs Laid by Largest Humidity Difference and Infection Status")
egghumdiff<-egghumdiff+facet_grid(. ~infected)+geom_smooth(method= "lm")
egghumdiff
#lets compare which of these would be best for the model
#each show an interaction between hum and infection status. (maybe tempdiff less so)
mavhum<-glm(eggs~avhum*infected, data=Compile)#13910
mavhumhigh<-glm(eggs~avhumhigh*infected, data=Compile)#13910
mavhumlow<-glm(eggs~avhumlow*infected, data=Compile)#13910
mhummax<-glm(eggs~hummax*infected, data=Compile)#13930#we can kill this
mhummin<-glm(eggs~hummin*infected, data=Compile)#13910
mhumdiff<-glm(eggs~humdiff*infected, data=Compile)#13960 #we can kill this too
avhhumpdiff<-glm(eggs~avhum*+humdiff, data=Compile)#14020 (adding humdiff doesn't help)
avhumlm<-lm(eggs~avhum, data=Compile)
avhumhighlm<-lm(eggs~avhumhigh, data=Compile)
humminlm<-lm(eggs~hummin, data=Compile) #
################################################
#same for temp
#plot temperature by eggs
Compile$avtemp <- as.character(Compile$avtemp)
tempeggs<-lm(Compile$eggs ~Compile$avtemp)
plot(Compile$avtemp, Compile$eggs,
main="Eggs by Temperature", ylab="Number of Eggs",
xlab="Temperature(C)")
#eggs by average temp
eggtemp<-ggplot(aes( y= eggs, x= avtemp, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
eggtemp<-eggtemp+ggtitle("Number of Eggs Laid by Average Temperature and Infection Status")
eggtemp<-eggtemp+facet_grid(. ~infected)+geom_smooth(method= "lm")
eggtemp
#eggs by average high hum
eggtempavhigh<-ggplot(aes( y= eggs, x= avtemphigh, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
eggtempavhigh<-eggtempavhigh+ggtitle("Number of Eggs Laid by Avg High Temp and Infection Status")
eggtempavhigh<-eggtempavhigh+facet_grid(. ~infected)+geom_smooth(method= "lm")
eggtempavhigh
#eggs by average low hum
eggtempavlow<-ggplot(aes( y= eggs, x= avtemplow, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
eggtempavlow<-eggtempavlow+ggtitle("Number of Eggs Laid by Avg Low Temperature and Infection Status")
eggtempavlow<-eggtempavlow+facet_grid(. ~infected)+geom_smooth(method= "lm")
eggtempavlow
#eggs by week max high
eggtemphigh<-ggplot(aes( y= eggs, x= tempmax, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
eggtemphigh<-eggtemphigh+ggtitle("Number of Eggs Laid by Max Temperature and Infection Status")
eggtemphigh<-eggtemphigh+facet_grid(. ~infected)+geom_smooth(method= "lm")
eggtemphigh
#eggs by week low high
eggtemplow<-ggplot(aes( y= eggs, x= tempmin, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
eggtemplow<-egghumlow+ggtitle("Number of Eggs Laid by Low Temperature and Infection Status")
eggtemplow<-egghumlow+facet_grid(. ~infected)+geom_smooth(method= "lm")
eggtemplow
#eggs by temp diff
eggtempdiff<-ggplot(aes( y= eggs, x= tempdiff, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
eggtempdiff<-eggtempdiff+ggtitle("Number of Eggs Laid by Largest Temperature Difference and Infection Status")
eggtempdiff<-eggtempdiff+facet_grid(. ~infected)+geom_smooth(method= "lm")
eggtempdiff
Compile$avtemp <- as.numeric(Compile$avtemp)
eggtem<-ggplot(aes( y= eggs, x= avtemp, na.rm=TRUE),
data=Compile[enona,])+geom_point(data=Compile[enona,])
eggtem<-eggtem+ggtitle("Number of Eggs Laid by Temperature and Infection Status")
eggtem<-eggtem+facet_grid(. ~infected)+geom_smooth(method= "lm")
eggtem
#lets compare to see what would be best for model
#these don't have as important interactions
lmavtemp<-lm(eggs~avtemp, data=Compile) #Rsq=0.017
lmavtemphigh<-lm(eggs~avtemphigh, data=Compile)#Rsq=0.02
lmavtemplow<-lm(eggs~avtemplow, data=Compile)#Rsq=0.010
lmavmin<-lm(eggs~tempmin, data=Compile)#Rsq=0.011
lmtempmax<-lm(eggs~tempmax, data=Compile)#Rsq=0.010
lmtempdiff<-lm(eggs~tempdiff, data=Compile)#Rsq=0.009
mavtemp<-glm(eggs~avtemp+infected, data=Compile) #AIC=13900
mavtemphigh<-glm(eggs~avtemphigh*infected, data=Compile)#AIC=13900
mavtemplow<-glm(eggs~avtemplow*infected, data=Compile)#AIC=13920
mavmin<-glm(eggs~tempmin*infected, data=Compile)
mtempmax<-glm(eggs~tempmax*infected, data=Compile)
mtempdiff<-glm(eggs~tempdiff*infected, data=Compile)
###################
#Now for hatching
#hatch by humidity
humhatch<-lm(Compile$hatch ~Compile$avhum)
plot(Compile$avhum, Compile$hatch,
main="Hatching by Humidity", ylab="Number of Eggs",
xlab="Humidity(%)")
#hatch by average hum
hchhum<-ggplot(aes( y= hatch, x= avhum, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchhum<-hchhum+ggtitle("Number of Eggs Hatched by Humidity and Infection Status")
hchhum<-hchhum+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchhum
#hatch average high hum
hchhumavhigh<-ggplot(aes( y= hatch, x= avhumhigh, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchhumavhigh<-hchhumavhigh+ggtitle("Number of Eggs Hatched by Max Humidity and Infection Status")
hchhumavhigh<-hchhumavhigh+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchhumavhigh
#hatch by average low hum
hchhumavlow<-ggplot(aes( y= hatch, x= avhumlow, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchhumavlow<-hchhumavlow+ggtitle("Number of Eggs Hatched by Average Low Humidity and Infection Status")
hchhumavlow<-hchhumavlow+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchhumavlow
#hatch by week max high
hchhumhigh<-ggplot(aes( y= hatch, x= hummax, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchhumhigh<-hchhumhigh+ggtitle("Number of Eggs Hatched by Max Humidity and Infection Status")
hchhumhigh<-hchhumhigh+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchhumhigh
#hatch by week low high
hchhumlow<-ggplot(aes( y= hatch, x= hummin, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchhumlow<-hchhumlow+ggtitle("Number of Eggs Hatched by Low Humidity and Infection Status")
hchhumlow<-hchhumlow+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchhumlow
#hatch by hum diff
hchhumdiff<-ggplot(aes( y= hatch, x= humdiff, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchhumdiff<-hchhumdiff+ggtitle("Number of Eggs Hatced by Largest Humidity Difference and Infection Status")
hchhumdiff<-hchhumdiff+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchhumdiff
############################
#hatch by temp
temphatch<-lm(Compile$hatch ~Compile$avtemp)
plot(Compile$avtemp, Compile$hatch,
main="Hatching by Temperature", ylab="Number of Eggs",
xlab="Temperature(C)")
#hatch by average temp
hchtemp<-ggplot(aes( y= hatch, x= avtemp, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtemp<-hchtemp+ggtitle("Number of Eggs Hatched by Temp and Infection Status")
hchtemp<-hchtemp+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtemp
#hatch average high temp
hchtempavhigh<-ggplot(aes( y= hatch, x= avtemphigh, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtempavhigh<-hchtempavhigh+ggtitle("Number of Eggs Hatched by Max Temp and Infection Status")
hchtempavhigh<-hchtempavhigh+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtempavhigh
#hatch by average low temp
hchtempavlow<-ggplot(aes( y= hatch, x= avtemplow, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtempavlow<-hchtempavlow+ggtitle("Number of Eggs Hatched by Average Low Temp and Infection Status")
hchtempavlow<-hchtempavlow+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtempavlow
#hatch by week max high
hchtemphigh<-ggplot(aes( y= hatch, x= tempmax, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtemphigh<-hchtemphigh+ggtitle("Number of Eggs Hatched by Max Temp and Infection Status")
hchtemphigh<-hchtemphigh+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtemphigh
#hatch by week min low
hchtemplow<-ggplot(aes( y= hatch, x= tempmin, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtemplow<-hchtemplow+ggtitle("Number of Eggs Hatched by Low Temp and Infection Status")
hchtemplow<-hchtemplow+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtemplow
#hatch by hum diff
hchtempdiff<-ggplot(aes( y= hatch, x= tempdiff, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtempdiff<-hchtempdiff+ggtitle("Number of Eggs Hatced by Largest Temp Difference and Infection Status")
hchtempdiff<-hchtempdiff+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtempdiff
################################
# ##For each time line
# glm(cases~rhs(data$year,2003)+lhs(data$year,2003)+ offset(log(population)), data=data,
#subset=28:36, family=poisson())
# #Now lets make a graph of Eggs by week
# infected<-which(Compile$infected==1)
# controled<-which(Compile$infected==0)
# uniquebugs<-unique(Compile$id)
# plot(Compile$week[infected], Compile$eggs[infected]+rnorm(length(Compile$eggs[infected]), 0.5, 1), col="red")
#
# #Now lets make a graphs o week and date by eggs of infected insects
# infected<-which(Compile$infected==1)
# controled<-which(Compile$infected==0)
# uniquebugs<-unique(Compile$id)
# plot(Compile$week[infected], Compile$eggs[infected], col="red")
# plot(Compile$date[infected], Compile$eggs[infected], col="red")
#Compare infected hatch and by week.
par(mfrow=c(2,4))
#infected
#pdf(file="graphs/EggsandHatchvsWeekboxanddotplots.pdf")
plot(Compile$week[infected], Compile$eggs[infected], main="Infected Eggs Laid by Week",
ylab="Weeks", xlab="Eggs")
boxplot(Compile$eggs[infected] ~c(Compile$week[infected]), main="Infected Eggs Laid by Week",
ylab="Weeks", xlab="Eggs")
plot(Compile$week[infected], Compile$hatch[infected], main="Infected Eggs Hatched by Week",
ylab="Weeks", xlab="Eggs")
boxplot(Compile$hatch[infected] ~Compile$week[infected], main="Infected Eggs Hatched by Week",
ylab="Weeks", xlab="Eggs")
#not infected
plot(Compile$week[controled], Compile$eggs[controled], main="Control Eggs Laid by Week",
ylab="Weeks", xlab="Eggs")
boxplot(Compile$eggs[controled] ~Compile$week[controled], main="Control Eggs Laid by Week",
ylab="Weeks", xlab="Eggs")
plot(Compile$week[controled], Compile$hatch[controled], main="Control Eggs Hatched by Week",
ylab="Weeks", xlab="Eggs")
boxplot(Compile$hatch[controled] ~Compile$week[controled], main="Control Eggs Hatched by Week",
ylab="Weeks", xlab="Eggs")
#dev.off()
#write.csv(Compile,"CompiledFertilityData.csv")
###############################################################################
#==============================================================================
#ahora tenomos muchas graficas, podemos empezar haciendo el modelo
#########################################################
#el ejemplo de Ricardo
#glm(cases~rhs(data$year,2003)+lhs(data$year,2003)+ offset(log(population)), data=data, subset=28:36, family=poisson())
#fake code template
#Bring in Compiled data exported from code above.
Compile<-read.csv("CompiledFertilityData.csv")
#for box plots week was categorical.  This makes a numeric column.
Compile$weeknum<-as.numeric(Compile$week)
#I am also going to make a table with all egg and hatch are no longer NA but 0
Compile$hatchdiff<-Compile$eggs-Compile$hatch
Compile$infectedf<-as.factor(Compile$infected)
Compile$hatchdiff<-as.numeric(Compile$hatchdiff)
hatchbox<-ggplot(aes( x= hatchdiff, fill = infectedf, na.rm=TRUE),
data= Compile[enona,]) +geom_density(alpha=0.5, na.rm=TRUE)#geom_histogram(aes(y="..density.."),position="dodge")
hatchbox<-hatchbox+ggtitle("Relative denisty of differences between hatched and laid eggs by infection status")
hatchbox<-hatchbox+scale_fill_manual(values=c("blue", "red"))
ggsave(g, file="HatchDiffDensity.jpeg", units= "cm", width = 26.4, height= 15.875)
#g<-g+scale_x_continuous(breaks=seq(0, 38, 2))
#g<-g+scale_x_discrete(labels=c("", seq())
hatchbox
#Eggsave(hatchbox, file="HatchDiffDensityByInf.jpeg", units= "cm", width = 26.4, height= 15.875)
CompileNoNA<-Compile
eggna <- which(is.na(CompileNoNA$eggs)==TRUE)
hatchna <- which(is.na(CompileNoNA$hatch)==TRUE)
CompileNoNA$eggs[eggna]<-0
CompileNoNA$hatch[hatchna]<-0
#Make Compile where NA's eggs are removed.
CompileRD<-Compile[-eggna,]
#One final change to the data frames, I would like to make a julian day vector.
#provides numeric value for possible seasonaility analysis from the initial observation.
#careful this is not necessesary
dateRD<-julian.Date(CompileRD$date)
startDate<-julian.Date(CompileRD$start)
mindate<-min(startDate)
CompileRD$juliandate<-dateRD-startDate
#we found that we need to conduct a cox proportional hazaard test for time until first egg
#thus we need to first reverse the binary of egg event.
Compile$reveggevent<-1-Compile$eggevent
#http://socserv.socsci.mcmaster.ca/jfox/Books/Companion/appendix/Appendix-Cox-Regression.pdf
sevent<-Surv(time=CompileRD$weeknum, event=CompileRD$eggevent)
#need to get rid of the "+"
CoxEggLaid<-coxph(sevent~infected+cluster(idnum), data=CompileRD)
#summary(survfit(CoxEggLaid, newdata =))
#because events occur more than once its a mess because "+" are added.
hist(CoxEggLaid)
#The models remove the NA's so lets use CompileRD to make two simple graphs
hist(CompileRD$eggs, breaks=21)
mean(CompileRD$eggs)#3.94
var(CompileRD$eggs) #17.5
#This shows that poisson assumptions are not met.
#earlier(under the poisson models) I took the variance of a mean by week...which gave me a smaller value of course.
#But yes, poisson values are not the same.
#create a factor for mice so that
mice<-unique(Compile$mouse)
mouseidnums<-c(1:length(mice))
mousetable<-data.frame(mice,mouseidnum)
mousetable$mouseidnum<-as.factor(mousetable$mouseidnum)
CompileRD$mouseidnum<-CompileRD$trial*0
for(i in 1:length(mice)){
micenumi<-which(mousetable$mouseidnum==i)
micematch<-which(CompileRD$mouse==mousetable$mice[micenumi])
CompileRD$mouseidnum[micematch]<-i
}
#lets combine the data to remove 0 inflation
#Use the Collapse to break into smaller groups
#function that takes in the desired number of weeks per periood
SummaryCompileRD<-function(segl){
#Create an emty output vector
CompileRD$period<-CompileRD$week*0
#Calculate the appropriate variables: total number of weeks and the number of segments
maxw<-max(Compile$week)
nseg<-maxw/segl
nseg<-ceiling(nseg)
#assign each week into one of the segments. This starts with all the sets and
#adds 1 to the period vector
#then it removes the first segment( or period) and adds another 1 to the remaining segments until
#each week has the corresponding period designation.
for(i in 1:nseg){
adding<-which(CompileRD$week>((segl*i)-segl))
CompileRD$period[adding]<-CompileRD$period[adding]+1
}
#   #this is a test
#   CompileRD$periods<-CompileRD$week*0
#   addingq<-which(CompileRD$week>(0))
#   CompileRD$periods[addingq]<-CompileRD$periods[addingq]+1
#   d<-c(rep(1:3, each=10))
#   tree<-which(d>1)
#   d[tree]<-d[tree]+1
#   d
#create unicode to merge tables later.
CompileRD$periodid<-paste(CompileRD$idnum, CompileRD$period, sep="-")
#redefine functions so na.rm is fed into the function
#be aware that this can introduce 0's, but it is on CompileRD so that
#should only happen for hatch when egg is already 0.
sums<-function(row){
sum(row, na.rm=TRUE)
}
maxs<-function(row){
max(row, na.rm=TRUE)
}
mins<-function(row){
min(row, na.rm=TRUE)
}
means<-function(row){
mean(row, na.rm=TRUE)
}
#These functions perform a function on the desired outputs as it reduces the data from weeks to the desired period.
CompileRDsum<-summaryBy(eggs+hatch+alive~idnum+period+infected+mouse+trial+periodid, FUN=c(sums), data=CompileRD, keep.names = TRUE)
CompileRDmax<-summaryBy(tempmax+tempdiff+hummax+humdiff~periodid, FUN=c(maxs), data=CompileRD, keep.names = TRUE)
CompileRDmin<-summaryBy(tempmin+hummin~periodid, FUN=c(mins), data=CompileRD, keep.names = TRUE)
CompileRDmean<-summaryBy(avtemphigh+avtemplow+avtemp+avhumhigh+avhumlow+avhum
~periodid, FUN=c(means), data=CompileRD, keep.names = TRUE)
a<-merge(CompileRDmax, CompileRDmean, by="periodid")
b<-merge(a, CompileRDmin, by="periodid")
final<-merge(b, CompileRDsum, by="periodid")
final
}
#lets look at 2 and 3
C2week<-SummaryCompileRD(2)
C3week<-SummaryCompileRD(3)
C5week<-SummaryCompileRD(5)
C8week<-SummaryCompileRD(8)
#
fivedead<-which(C5week$alive<5)
#checking code
zeroeight<-which(C8week$eggs==0)
zerotable<-C8week[zeroeight,]
zeroids<-unique(zerotable$idnum)
removedeathday<-function(weektab){
deads<-which(weektab$alive<max(weektab$alive))
tablerd<-weektab[,-deads]
tablerd
}
C2weekRd<-removedeathday(C2week)
#10-2 is one with 0's
tens<-which(Compile$idnum==10)
tentable<-Compile[tens,]
#plot the 0's
plot(1:37,1:37,col=0)
for (i in 1:20){
zer<-which(Compile$idnum==zeroids[i])
lines(Compile$week[zer], Compile$eggs[zer], col=i)
}
plot(1:37,1:37,col=0)
for (i in 21:40){
zer<-which(Compile$idnum==zeroids[i])
lines(Compile$week[zer], Compile$eggs[zer], col=i)
}
plot(1:37,1:37,col=0)
for (i in 41:60){
zer<-which(Compile$idnum==zeroids[i])
lines(Compile$week[zer], Compile$eggs[zer], col=i)
}
plot(1:37,1:37,col=0)
for (i in 61:80){
zer<-which(Compile$idnum==zeroids[i])
lines(Compile$week[zer], Compile$eggs[zer], col=i)
}
plot()
geemp10<-geem(eggs ~infected+weeknum+avtemphigh, id=idnum, data=CompileRD, negative.binomial(theta=2, link="log"), corstr="exchangeable")
plot(geemp10)
summary(geemp10)
source('~/Laboratory/chagasycimexhuevos/Cimex_Fertility_Analysis7_6_2015.R')
