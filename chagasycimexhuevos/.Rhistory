a <- available.packages()
head(rownames(a), 3)
install.packages("slidify")
install.packages(c("ggplot2", "devtools"))
install.packages("slidify")
source("http://bioconductor.org/bioLite.R")
biocLite()
library(ggplot2)
search()
"2015-03-23"+30
a<-as.Date("2015-03-23")
a+40
+90
a+90
a+100
-7
a+93
x<-c(0,1,2,NA, FALSE)
x
is.na(x[3])
requiredPackages <- c("XML"
,"doParallel", "lubridate","PBSmapping","plyr","inline","Rcpp"
)
packages <- requiredPackages[!(requiredPackages %in% rownames(installed.packages()))]
if(length(packages) > 0) {
install.packages(packages)
}
fa<-1100+200+26150+2000+2865
fa
2*32315
fees<-((1958+370+168+250)*2)+150
fees
fees+health+rent
fees<-((1958+370+168+250)*2)+150
health<-1570*2
rent<-4326*2
fees+health+rent
tuition(21088*2)
fa<-(1100+200+26150+2000+2865)*2
fa
*
tuition<-(21088*2)
fees<-((1958+370+168+250)*2)+150
health<-1570*2
rent<-4326*2
expense<-fees+health+rent
expenses
expense
expense+tuition
y<-expense+tuition
fa-y
tuition
health+fees
fees
?binom.test
bisampsize<-function(m){
((1.96/m)^2)*0.25
}
bisampsize(0.5)
bisampsize<-function(m){
((1.96/m)^2)*0.25
}
bisampsize(0.25)
bisampsize<-function(m){
((1.96/m)^2)*0.25
}
bisampsize(0.20)
1/12
3/12
binom.power
library(binom)
install.packages(binom)
install.packages("binom")
version
x4 <- sample(1:10, 5, replace=T)
x4
tray1<-sample(1:4, 4)
tray1`
r
)
q
;
''
'
""
)
asdf
104r
+
)
""
'
''
''
sample(1:4, 4)
sample(1:4, 4)
tray1<-
sample(1:4,4)
tray2<-sample(1:4,4)
tray3<-sample(1:4,4)
tray4<-sample(1:4,4)
tray1
tray2
tray3
tray4
quiz<-81.5*15
mid<-84*30
quiz+mid
quiz<-81.5*.15
mid<-84*.30
quiz+mid
100-37.4
quiz<-81.5*.15
mid<-84*.25
hw1<-6*.1
quiz+mid+hw1
.8*50
rnorm(4,4)
sample(1:4,4)
sample(1:4,4)
sample(1:4,4)
sample(1:4,4)
library(lubridate) #para extracting dates
library(reshape2) #para make the wide data into long data
library(matrixStats)
library(ggplot2)
library(plyr)  #para rbind.fill function
library(geeM)
library(MASS)
library(lmtest)
library(pscl)
library(survival)
library(doBy)
library(missMDA)
library(Rmisc) #summarySE command
library(lme4)#linear mixed effects
library(nlme)
library(stargazer)
# #set directory and bring in files to be analyzed.
# #PC
setwd("c:\\Users\\tradylan\\Documents\\Laboratory\\chagasycimexhuevos")
#MAC
FFdataPC <- read.csv("FertilityFecundityDataPC.csv")
lifespanmod<-glm.nb(egg_total~infected+lifespan, data=FFdataPC )
summary(lifespanmod )
#AIC==1636.7 P(infected)==0.107
#Null Model without any temperature or humidity variables.
nullmodel<- glm.nb(egg_total~infected, data=FFdataPC, offset(log(lifespan)))
summary(nullmodel) #Theta is 1.13
summary(nullmodel)  #AIC==26710   P=<2e-16 *** Theta is 1.13
#Check if poisson would be better
poissonmod<-glm(egg_total~infected, offset(log(lifespan)), data=FFdataPC, family="poisson")
#test from http://www.ats.ucla.edu/stat/r/dae/nbreg.htm
X2 <- 2*(logLik(nullmodel)-logLik(poissonmod))
pchisq(X2, df=1, lower.tail=FALSE)  #is the df=1 because they are the same, except for theta?
lrtest(poissonmod, nullmodel) #this does the same thing, again shows that nb is better
#This rules out poisson
#check for 0 inflation
nullzmod<- zeroinfl(egg_total~infected+offset(log(lifespan)), data=FFdataPC)
vuong(nullmodel, nullzmod) #null model is better, so no zero inflation
#skip to to line 587 to show colinearity.
# ###Now just do a univariate analysis
# maxtempmodel<- glm.nb(egg_total~avmaxtemp, data=FFdata, offset(log(lifespan)))
# mintempmodel<- glm.nb(egg_total~avmintemp, data=FFdata, offset(log(lifespan)))
# maxhummodel<- glm.nb(egg_total~avmaxhum, data=FFdata, offset(log(lifespan)))
# minhummodel<- glm.nb(egg_total~avminhum, data=FFdata, (log(lifespan)))
#
# #look at summary to check AIC and P value
# summary(maxtempmodel)  #AIC==
# summary(mintempmodel) #AIC==
# summary(maxhummodel) #AIC==
# summary(minhummodel) #AIC==
#remember Null Model had an AIC of 4326.5  (a difference of 6 is significant, but must be nested)
#full models
fullmodel<-glm.nb(egg_total~infected+avmaxtemp+avminhum+avmaxhum+avmintemp, data=FFdataPC, offset(log(lifespan)))
summary(fullmodel) #AIC==4215.4
#However Colinearity in variables.
plot(FFdataPC$avmaxhum, FFdataPC$avminhum)
#Alternative models (2 variables)  #all of which the full model has a better AIC
AltModelA<-glm.nb(egg_total~infected+avmintemp+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelA) #AIC==4271.2
AltModelB<-glm.nb(egg_total~infected+avmaxtemp+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelB) #AIC==4257.2
AltModelC<-glm.nb(egg_total~infected+avmintemp+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelC) #AIC==4268.5
AltModelD<-glm.nb(egg_total~infected+avminhum+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelD) #AIC==4269.9
summary(AltModelA) #AIC==
AltModelB<-glm.nb(egg_total~infected+avmaxtemp+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelB) #AIC==
AltModelC<-glm.nb(egg_total~infected+avmintemp+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelC) #AIC==
AltModelD<-glm.nb(egg_total~infected+avminhum+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelD) #AIC==
AltModelE<-glm.nb(egg_total~infected+avmintemp+avmaxtemp, data=FFdataPC, offset(log(lifespan)))
summary(AltModelE) #AIC==4235.5
AltModelF<-glm.nb(egg_total~infected+avmaxtemp+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelF)  #AIC=4258.8
#Alternative Models with 3 Variables
AltModelG<-glm.nb(egg_total~infected+avmintemp+avmaxtemp+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelG) #AIC==
AltModelH<-glm.nb(egg_total~infected+avmintemp+avmaxtemp+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelH) #AIC==
AltModelI<-glm.nb(egg_total~infected+avmintemp+avmaxhum+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelI) #AIC==
AltModelJ<-glm.nb(egg_total~infected+avmaxhum+avmaxtemp+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelJ) #AIC==
#it is likely that colinearity is inflating the significance of eachy variable.
#thus try principle components and not each varriable by itself
plot(FFdataPC$avmaxtemp, FFdataPC$avmintemp)
plot(FFdataPC$avmaxtemp, FFdataPC$avmaxhum)
plot(FFdataPC$avmaxtemp, FFdataPC$avminhum)
plot(FFdataPC$avmintemp, FFdataPC$avmaxhum)
plot(FFdataPC$avmintemp, FFdataPC$avminhum)
plot(FFdataPC$avmaxhum, FFdataPC$avminhum)
#Egg Model PCA
#Egg models
#==============================================================================
#Null model with no principle components
pceggmod0 <- glm.nb(egg_total~infected, data=FFdataPC, offset(log(lifespan)))
#Model with 1 PC
pceggmod1 <- glm.nb(egg_total~infected+PC1, data=FFdataPC,
offset(log(lifespan)))
#Model with 2 PC
pceggmod2 <- glm.nb(egg_total~infected+PC1+PC2, data=FFdataPC,
offset(log(lifespan)))
#Model with 2PC and trial
pceggmod2b <- glm.nb(egg_total~infected+PC1+PC2+factor(trial), data=FFdataPC,
offset(log(lifespan)))
#Model with trial and PC2 interaction
pceggmod2c <- glm.nb(egg_total~infected+PC1+PC2*factor(trial), data=FFdataPC,
offset(log(lifespan)))
#Model with trial and PC1 Interaction
pceggmod2d <- glm.nb(egg_total~infected+PC2+PC1*factor(trial), data=FFdataPC,
offset(log(lifespan)))
pceggmod2dwi <- glm.nb(egg_total~infected+PC2+PC1*factor(trial)-1, data=FFdataPC,
offset(log(lifespan)))
#Model with trial interacting with both PC2 and PC1
pceggmod2e <- glm.nb(egg_total~infected+PC1*factor(trial)+PC2*factor(trial),
data=FFdataPC, offset(log(lifespan)))
pceggmod2epoi <- glm(egg_total~infected+PC1*factor(trial)+PC2*factor(trial),
data=FFdataPC, offset(log(lifespan)), family="poisson")
pceggmod2ewi <- glm.nb(egg_total~infected+PC1*factor(trial)+PC2*factor(trial)-1,
data=FFdataPC, offset(log(lifespan)))
pceggmod2gp<-glm.nb(egg_total~GP+PC1+PC2-1,
data=FFdataPC, offset(log(lifespan)))
pceggmod2gpi<-glm.nb(egg_total~GP*PC1+PC2-1,
data=FFdataPC, offset(log(lifespan)))
pceggmod2gpii<-glm.nb(egg_total~infected+GP*PC1+PC2-1,
data=FFdataPC, offset(log(lifespan)))
pceggmod2gpii2<-glm.nb(egg_total~infected+GP*PC1+PC2,
data=FFdataPC, offset(log(lifespan)))
summary(pceggmod2ewi)
pceggmod3c <- glm.nb(egg_total~infected+PC1+PC2+PC3+factor(trial)-1,
data=FFdataPC, offset(log(lifespan)))
summary(pceggmod3c)
