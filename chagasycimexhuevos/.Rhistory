summary(AltModelF)  #AIC=4258.8
#Alternative Models with 3 Variables
AltModelG<-glm.nb(egg_total~infected+avmintemp+avmaxtemp+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelG) #AIC==
AltModelH<-glm.nb(egg_total~infected+avmintemp+avmaxtemp+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelH) #AIC==
AltModelI<-glm.nb(egg_total~infected+avmintemp+avmaxhum+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelI) #AIC==
AltModelJ<-glm.nb(egg_total~infected+avmaxhum+avmaxtemp+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelJ) #AIC==
#it is likely that colinearity is inflating the significance of eachy variable.
#thus try principle components and not each varriable by itself
plot(FFdataPC$avmaxtemp, FFdataPC$avmintemp)
plot(FFdataPC$avmaxtemp, FFdataPC$avmaxhum)
plot(FFdataPC$avmaxtemp, FFdataPC$avminhum)
plot(FFdataPC$avmintemp, FFdataPC$avmaxhum)
plot(FFdataPC$avmintemp, FFdataPC$avminhum)
plot(FFdataPC$avmaxhum, FFdataPC$avminhum)
#Egg Model PCA
#Egg models
#==============================================================================
#Null model with no principle components
pceggmod0 <- glm.nb(egg_total~infected, data=FFdataPC, offset(log(lifespan)))
#Model with 1 PC
pceggmod1 <- glm.nb(egg_total~infected+PC1, data=FFdataPC,
offset(log(lifespan)))
#Model with 2 PC
pceggmod2 <- glm.nb(egg_total~infected+PC1+PC2, data=FFdataPC,
offset(log(lifespan)))
#Model with 2PC and trial
pceggmod2b <- glm.nb(egg_total~infected+PC1+PC2+factor(trial), data=FFdataPC,
offset(log(lifespan)))
#Model with trial and PC2 interaction
pceggmod2c <- glm.nb(egg_total~infected+PC1+PC2*factor(trial), data=FFdataPC,
offset(log(lifespan)))
#Model with trial and PC1 Interaction
pceggmod2d <- glm.nb(egg_total~infected+PC2+PC1*factor(trial), data=FFdataPC,
offset(log(lifespan)))
pceggmod2dwi <- glm.nb(egg_total~infected+PC2+PC1*factor(trial)-1, data=FFdataPC,
offset(log(lifespan)))
#Model with trial interacting with both PC2 and PC1
pceggmod2e <- glm.nb(egg_total~infected+PC1*factor(trial)+PC2*factor(trial),
data=FFdataPC, offset(log(lifespan)))
pceggmod2epoi <- glm(egg_total~infected+PC1*factor(trial)+PC2*factor(trial),
data=FFdataPC, offset(log(lifespan)), family="poisson")
pceggmod2ewi <- glm.nb(egg_total~infected+PC1*factor(trial)+PC2*factor(trial)-1,
data=FFdataPC, offset(log(lifespan)))
pceggmod2gp<-glm.nb(egg_total~GP+PC1+PC2-1,
data=FFdataPC, offset(log(lifespan)))
pceggmod2gpi<-glm.nb(egg_total~GP*PC1+PC2-1,
data=FFdataPC, offset(log(lifespan)))
pceggmod2gpii<-glm.nb(egg_total~infected+GP*PC1+PC2-1,
data=FFdataPC, offset(log(lifespan)))
pceggmod2gpii2<-glm.nb(egg_total~infected+GP*PC1+PC2,
data=FFdataPC, offset(log(lifespan)))
summary(pceggmod2ewi)
#Model with 3 PC
pceggmod3 <- glm.nb(egg_total~infected+PC1+PC2+PC3, data=FFdataPC,
offset(log(lifespan)))
#Model without PC2 (more significant that 1,2, and 3 if no trial interactions)
pceggmod3b <- glm.nb(egg_total~infected+PC1+PC3, data=FFdataPC,
offset(log(lifespan)))
pceggmod3c <- glm.nb(egg_total~infected+PC1+PC2+PC3+factor(trial)-1,
data=FFdataPC, offset(log(lifespan)))
pceggmod3d <- glm.nb(egg_total~infected+PC1+PC3+factor(trial), data=FFdataPC,
offset(log(lifespan)))
#Full Model with all Principle Components #do not use, may overfit
pceggmod4 <- glm.nb(egg_total~infected+PC1+PC2+PC3+PC4, data=FFdataPC,
offset(log(lifespan)))
FFdataPC$trial<-as.factor(FFdataPC$trial)
FFdataPC$trial<-relevel(FFdataPC$trial, 1)
pceggmod2ewi <- glm.nb(egg_total~infected+PC1*factor(trial)+PC2*factor(trial)-1,
data=FFdataPC, offset(log(lifespan)))
#Place Trial Facotor in side Princi
tpceggmod2 <- glm.nb(egg_total~infected+TPC1+TPC2, data=FFdataPC,
offset(log(lifespan)))
#look at AIC's
pceggmod0#4327
pceggmod1#4263
pceggmod2#4264
pceggmod2b#4199
pceggmod2c#4132
pceggmod2d#4129**This may be good choice
pceggmod2e#4127***We will use this model
pceggmod3#4250
pceggmod3b#4248
pceggmod3c#4197.7 #If we decide
pceggmod3d#4239
pceggmod4#4215
#Put PC Model Outputs into Table.
estpc <- cbind(Estimate = coef(pceggmod2d), confint(pceggmod2d),
summary(pceggmod2d)$coef[,2], summary(pceggmod2d)$coef[,4])
colnames(estpc)[4]<-"Std. Error"
colnames(estpc)[5]<-"P-Value"
PCOutput<-data.frame(estpc)
names(PCOutput) <- c("Estimate", "Lower CI", "Upper CI", "Std. Error","P-Value")
PCOutput$Exp_Estimate<- exp(PCOutput$Estimate)
PCOutput$Exp_Lower_CI <- exp(PCOutput$lCI)
PCOutput$Exp_Upper_CI <- exp(PCOutput$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
nTheta<-as.vector(c(pceggmod2d$theta, "-", "-", pceggmod2d$SE.theta, "-","-", "-", "-" ))
nTwologlik<-c(pceggmod2d$twologlik, "-", "-", "-", "-", "-", "-", "-")
nAIC<-c(pceggmod2d$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutput<-rbind(PCOutput, nTheta, nTwologlik, nAIC)
rownames(PCOutput)[5:11]<- c("Repetition 1 (Rep1)", "Repetition 2 (Rep2),","PC1 Rep1 Interaction","PC1 Rep2 Interaction"
"Theta", "2xLog Likelihood", "AIC")
#   stargazer(tpceggmod2, type="html",
#             dep.var.labels=c("Eggs Laid Per Week"),
#             covariate.labels=c("Infection Status","Principal Component 1",
#                                "Principal Component 2"), out="models.htm")
#write.csv(PCOutput, "pcout.csv")
###Model with Both PC Interactions
estpcb <- cbind(Estimate = coef(pceggmod2e), confint(pceggmod2e),
summary(pceggmod2e)$coef[,2], summary(pceggmod2e)$coef[,4])
colnames(estpcb)[4]<-"Std. Error"
colnames(estpcb)[5]<-"P-Value"
PCOutputB<-data.frame(estpcb)
names(PCOutputB) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutputB$Exp_Est <- exp(PCOutputB$Estimate)
PCOutputB$Exp_lCI <- exp(PCOutputB$lCI)
PCOutputB$Exp_uCI <- exp(PCOutputB$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
bnTheta<-as.vector(c(pceggmod2e$theta, "-", "-", pceggmod2e$SE.theta, "-","-", "-", "-" ))
bnTwologlik<-c(pceggmod2e$twologlik, "-", "-", "-", "-", "-", "-", "-")
bnAIC<-c(pceggmod2e$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutputB<-rbind(PCOutputB, bnTheta, bnTwologlik, bnAIC)
rownames(PCOutputB)[5:13]<- c("Rep1", "Rep2","PC1_Rep1_Int","PC1_Rep2_Int",
"PC2_Rep1_Int","PC2_Rep2_Int", "Theta",
"2xLog Likelihood", "AIC")
lrtest(pceggmod4,pceggmod2)
#both test show pceggmod4 are significantly better than any other
lrtest(pceggmod4,pceggmod1)
lrtest(pceggmod3,pceggmod0)
lrtest(pceggmod3,pceggmod1)
lrtest(pceggmod3b,pceggmod3)
lrtest(pceggmod2d,pceggmod2e)#(almost significant 0.065)
lrtest(pceggmod2,pceggmod1)
###Egg Models with Trial Included in Principle Components
#should I put -1 to remove intercept?
est <- cbind(Estimate = coef(tpceggmod2), confint(tpceggmod2),
summary(tpceggmod2)$coef[,2], summary(tpceggmod2)$coef[,4])
colnames(est)[4]<-"Std. Error"
colnames(est)[5]<-"P-Value"
tPCOutput<-data.frame(est)
names(tPCOutput) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
tPCOutput$Exp_Est <- exp(tPCOutput$Estimate)
tPCOutput$Exp_lCI <- exp( tPCOutput$lCI)
tPCOutput$Exp_uCI <- exp(tPCOutput$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
Theta<-as.vector(c(tpceggmod2$theta, "-", "-", tpceggmod2$SE.theta, "-","-", "-", "-" ))
Twologlik<-c(tpceggmod2$twologlik, "-", "-", "-", "-", "-", "-", "-")
AIC<-c(tpceggmod2$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
tPCOutput<-rbind(tPCOutput, Theta, Twologlik, AIC)
rownames(tPCOutput)[5:7]<- c("Theta", "2xLog Likelihood", "AIC")
#   stargazer(tpceggmod2, type="html",
#             dep.var.labels=c("Eggs Laid Per Week"),
#             covariate.labels=c("Infection Status","Principal Component 1",
#                                "Principal Component 2"), out="models.htm")
#write.csv(tPCOutput, "trialpcout.csv")
##Model with 3 PC s and Trial (No Interaction)
##Make an output table
estpcc <- cbind(Estimate = coef(pceggmod3c), confint(pceggmod3c),
round(summary(pceggmod3c)$coef[,2], digits=3),
signif(summary(pceggmod3c)$coef[,4], digits=3))
colnames(estpcc)[4]<-"Std. Error"
colnames(estpcc)[5]<-"P-Value"
PCOutputC<-data.frame(estpcc)
names(PCOutputC) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutputC$Exp_Est <- round(exp(PCOutputC$Estimate), digits=3)
PCOutputC$Exp_lCI <- round(exp(PCOutputC$lCI), digits=3)
PCOutputC$Exp_uCI <- round(exp(PCOutputC$uCI), digits=3)
#Combine Estimates and Confidence Intervals
PCOutputC$IRR<-paste(PCOutputC$Exp_Est,"(",PCOutputC$Exp_lCI, "-", PCOutputC$Exp_uCI,
")" )
#Delete Extra Columns
PCOutputC$Estimate <- NULL
PCOutputC$lCI <- NULL
PCOutputC$uCI <- NULL
PCOutputC$Exp_Est <- NULL
PCOutputC$Exp_lCI <- NULL
PCOutputC$Exp_uCI <- NULL
PCOutputC<- PCOutputC[,c(3,1,2)]
names(PCOutputC) <- c("Ratio of Eggs Laid Per Week (95% CI)", "Std. Error","P-Value")
#also add AIC's, Theta, and AIC and log Likelihoods
cTheta<-as.vector(c(round(pceggmod3c$theta, digits=3),
round(pceggmod3c$SE.theta, digits=3), "-" ))
cTwologlik<-c(ceiling(pceggmod3c$twologlik), "-", "-")
cAIC<-c(ceiling(pceggmod3c$aic), "-", "-", "-")
#Paste
PCOutputC<-rbind(PCOutputC, cTheta, cTwologlik, cAIC)
rownames(PCOutputC)<- c("Infected", "Temperature and Humidity Principal Component 1 (PC1)","PC2","PC3","Pilot ", "Repetition 1", "Repetition 2",
"Theta", "2xLog Likelihood", "AIC")
#write.csv(PCOutputC, "pcoutc.csv")
#To make output   #need ci.custom to get correct exp
#  stargazer(pceggmod3c, type="html",
#            dep.var.labels=c("Eggs Laid Per Week"),
#            covariate.labels=c("Infection Status","PC1",
#                               "PC2", "PC3",  "Pilot", "Repetition 1","Repetition 2"),
#            out="PC3NIMoD.htm",
#            notes=c("PC 1-3 are principal components of temperature and humidity values."),
#            ci = TRUE, ci.level = 0.95, ci.separator = "-",
#            apply.coef =exp, apply.se= exp, apply.ci =exp
#              )
#random effect models: has a very small variance.
FFdataPC$idnum <- as.factor(FFdataPC$idnum)
#Only 3 trials: Pilot, Rep 1, Rep 2.
meeggmodt1_2 <- glmer.nb(egg_total~infected+PC1+PC2+(1|trial)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
meeggmodt1 <- glmer.nb(egg_total~infected+PC1+(1|trial)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
meeggmodt2 <- glmer.nb(egg_total~infected+PC2+(1|trial)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
meeggmodt <- glmer.nb(egg_total~infected+PC2+(1|trial)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
#With Random Effect on Mouse
#This is not to say directly the mouse, but the insects are inheritantly subgrouped in this way
#such as feeding times, future GP meals, and so forth that may create dependence.
meeggmodm1_2 <- glmer.nb(egg_total~infected+PC1+PC2+(1|mouseidnum)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
meeggmodm1 <- glmer.nb(egg_total~infected+PC1+(1|mouseidnum)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
meeggmodm2 <- glmer.nb(egg_total~infected+PC2+(1|mouseidnum)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
meeggmodt1_2
summary(meeggmodt1_2)
estpcm <- cbind(Estimate = coef(meeggmodt1_2), confint(meeggmodt1_2),
summary(meeggmodt1_2)$coef[,2], summary(meeggmodt1_2)$coef[,4])
summary(meeggmodm1_2)
summary(meeggmodm1_2)
summary(meeggmodt1_2)
coef(meeggmodt1_2)
coef(meeggmodt1_2$trial)
coef(meeggmodt1_2)$trial
coef(meeggmodt1_2)$trial[0,]
coef(meeggmodt1_2)$trial[0,]
coef(meeggmodt1_2)$trial[,0]
coef(meeggmodt1_2)$trial[,1]
coef(meeggmodt1_2)$trial[1,]
coef(meeggmodt1_2)$trial[1,]
confint(coef(meeggmodt1_2)$trial[1,])
summary(meeggmodt1_2)
names(summary(meeggmodt1_2))
confint(summary(meeggmodt1_2)
)
summary(meeggmodt1_2)$coefficients
summary(meeggmodt1_2)$coefficients[1,]
summary(meeggmodt1_2)$coefficients[,1]
?glm.nb
confint(meeggmodt1_2)
confint(meeggmodt1_2, method=Wald)
confint(meeggmodt1_2, method="Wald)
""
""
confint(meeggmodt1_2, method="Wald")
summary(meeggmodt1_2)$coefficients[1,]
summary(meeggmodt1_2)$coefficients[,1]
coef(meeggmodt1_2)[,1]
coef(meeggmodt1_2)
coef(meeggmodt1_2)$trial[,1]
coef(meeggmodt1_2)$trial[1,]
coef(meeggmodt1_2)$trial[1,2:4]
coef(meeggmodt1_2)$trial[1,]
estpcm <- cbind(Estimate = coef(meeggmodt1_2)$trial[1,], confint(meeggmodt1_2, method="Wald")
)
confint(meeggmodt1_2, method="Wald")
coef(pceggmod3c)
confint(pceggmod3c)
CIS<-confint(meeggmodt1_2, method="Wald")
CIS
CIS[1,]
CIS<-CIS[-1,]
CIS[1,]
CIS
CIS<-confint(meeggmodt1_2, method="Wald")
CIS<-CIS[-1,]
estpcm <- cbind(Estimate = coef(meeggmodt1_2)$trial[1,], CIS,
summary(meeggmodt1_2)$coefficients[,2], summary(meeggmodt1_2)$coefficients[,4])
CIS<-confint(meeggmodt1_2, method="Wald")
CIS<-CIS[-1,]
estpcm <- cbind(Estimate = coef(meeggmodt1_2)$trial[1,], CIS)
estpcm
coef(meeggmodt1_2)$trial[1,]
CIS
?cbind
CIS<-confint(meeggmodt1_2, method="Wald")
CIS<-CIS[-1,]
estpcm <- rbind(Estimate = coef(meeggmodt1_2)$trial[1,], CIS,
summary(meeggmodt1_2)$coefficients[,2], summary(meeggmodt1_2)$coefficients[,4])
estpcm
?merge
estpcm <- merge(coef(meeggmodt1_2)$trial[1,], CIS,)
estpcm
coef(meeggmodt1_2)$trial[1,]
estpcm
CIS
CIS[1]
CIS[18]
CIS<-data.frame(CIS)
CIS
CIS[1]
row.names(CIS)
coef(meeggmodt1_2)$trial[1,]
names(coef(meeggmodt1_2)$trial[1,])
estpcm <- merge(coef(meeggmodt1_2)$trial[1,], CIS, by.x=names(coef(meeggmodt1_2)$trial[1,])), by.y(rownames(CIS))
confint(pceggmod3c)
coef(pceggmod3c)
coef(meeggmodt1_2)
estpcm <- merge(coef(meeggmodt1_2), CIS)
estpcm <- cbind(coef(meeggmodt1_2), CIS)
?coef.mer
?coef.merMod
CIS <- confint(meeggmodt1_2, method="Wald")
CIS
estpcm <- cbind(summary(meeggmodt1_2)$coefficients[,1]), CIS))
estpcm <- cbind(summary(meeggmodt1_2)$coefficients[,1]), CIS)
estpcm <- cbind(summary(meeggmodt1_2)$coefficients[,1], CIS)
estpcm
summary(meeggmodt1_2)$coefficients[,1]
CIS <- confint(meeggmodt1_2, method="Wald")
CIS <- CIS[-1,]
#CIS <- data.frame(CIS)
estpcm <- cbind(summary(meeggmodt1_2)$coefficients[,1], CIS))
estpcm <- cbind(summary(meeggmodt1_2)$coefficients[,1], CIS)
estpcm
estpcm <- cbind(summary(meeggmodt1_2)$coefficients[,1], CIS,
summary(meeggmodt1_2)$coefficients[,2], summary(meeggmodt1_2)$coefficients[,4])
estpcm
summary(meeggmodt1_2)$coefficients[,2]
estpcm <- cbind(Estimate = summary(meeggmodt1_2)$coefficients[,1], CIS,
summary(meeggmodt1_2)$coefficients[,2], summary(meeggmodt1_2)$coefficients[,4])
estpcm
?signif
estpcm <- cbind(Estimate = summary(meeggmodt1_2)$coefficients[,1], CIS,
summary(meeggmodt1_2)$coefficients[,2],
summary(meeggmodt1_2)$coefficients[,4])
PCOutputB<-data.frame(estpcm)
names(PCOutputM) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
estpcm <- cbind(Estimate = summary(meeggmodt1_2)$coefficients[,1], CIS,
summary(meeggmodt1_2)$coefficients[,2],
summary(meeggmodt1_2)$coefficients[,4])
PCOutputM<-data.frame(estpcm)
names(PCOutputM) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutputM
PCOutputM$Exp_Est <- round(exp(PCOutputM$Estimate), digits=3)
PCOutputM$Exp_Est <- round(exp(PCOutputM$Estimate), digits=3)
PCOutputM$Exp_lCI <- round(exp(PCOutputM$lCI, digits=3)
PCOutputM$Exp_uCI <- round(exp(PCOutputM$uCI, digits=3)
estpcm <- cbind(Estimate = summary(meeggmodt1_2)$coefficients[,1], CIS,
summary(meeggmodt1_2)$coefficients[,2],
signif(summary(meeggmodt1_2)$coefficients[,4], digits=3))
PCOutputM<-data.frame(estpcm)
names(PCOutputM) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutputM$Exp_Est <- round(exp(PCOutputM$Estimate), digits=3)
PCOutputM$Exp_lCI <- round(exp(PCOutputM$lCI, digits=3)
PCOutputM$Exp_uCI <- round(exp(PCOutputM$uCI, digits=3)
PCOutputM<-data.frame(estpcm)
names(PCOutputM) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutputM$Exp_Est <- round(exp(PCOutputM$Estimate), digits=3)
PCOutputM$Exp_lCI <- round(exp(PCOutputM$lCI), digits=3)
PCOutputM$Exp_uCI <- round(exp(PCOutputM$uCI), digits=3)
View(PCOutputM)
#also add AIC's, Theta, and AIC and log Likelihoods
MnTheta<-as.vector(c(pceggmod2e$theta, "-", "-", pceggmod2e$SE.theta, "-","-", "-", "-" ))
MnTwologlik<-c(pceggmod2e$twologlik, "-", "-", "-", "-", "-", "-", "-")
MnAIC<-c(pceggmod2e$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutputM<-rbind(PCOutputM, MnTheta, MnTwologlik, MnAIC)
rownames(PCOutputM)[5:13]<- c("Rep1", "Rep2","PC1_Rep1_Int","PC1_Rep2_Int",
"PC2_Rep1_Int","PC2_Rep2_Int", "Theta",
"2xLog Likelihood", "AIC")
MnTheta<-as.vector(c(meeggmodt1_2$theta, "-", "-", meeggmodt1_2$SE.theta, "-","-", "-", "-" ))
MnTwologlik<-c(meeggmodt1_2$twologlik, "-", "-", "-", "-", "-", "-", "-")
MnAIC<-c(meeggmodt1_2$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
names(meeggmodt1_2)
meeggmodt1_2
meeggmodt1_2$AIC
extractAIC(meeggmodt1_2)
?extractAIC
extractAIC(meeggmodt1_2)[,1]
extractAIC(meeggmodt1_2)[1]
extractAIC(meeggmodt1_2)[2]
logLik(meeggmodt1_2)
logLik(meeggmodt1_2)[2]
logLik(meeggmodt1_2)[1]
family(meeggmodt1_2)[1]
print.summary(meeggmodt1_2)
summary(meeggmodt1_2)
anova(meeggmodt1_2)
meeggmodt1_2[1]
meeggmodt1_2[1,]
meeggmodt1_2$family
getME(meeggmodt1_2, "glmer.nb.theta")
MnTheta<-as.vector(c(getME(meeggmodt1_2, "glmer.nb.theta"), "-", "-", "-", "-","-", "-", "-" ))
MnTheta<-as.vector(c(getME(meeggmodt1_2, "glmer.nb.theta"), "-", "-", "-", "-","-", "-", "-" ))
MnTwologlik<-c(meeggmodt1_2$loglik[1], "-", "-", "-", "-", "-", "-", "-")
MnAIC<-c(extractAIC(meeggmodt1_2)[2], "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutputM<-rbind(PCOutputM, MnTheta, MnTwologlik, MnAIC)
meeggmodt1_2$loglik[1]
logLik(meeggmodt1_2)[1]
MnTheta<-as.vector(c(round(getME(meeggmodt1_2), digits=3), "glmer.nb.theta"), "-", "-", "-", "-","-", "-", "-" ))
MnTheta<-as.vector(c(round(getME(meeggmodt1_2)), digits=3), "glmer.nb.theta"), "-", "-", "-", "-","-", "-", "-" ))
MnTheta<-as.vector(c(round(getME(meeggmodt1_2), digits=3), "glmer.nb.theta"), "-", "-", "-", "-","-", "-", "-" ))
MnTheta<-as.vector(c(round(getME(meeggmodt1_2), digits=3), "glmer.nb.theta", "-", "-", "-", "-","-", "-", "-" ))
round(getME(meeggmodt1_2), digits=3)
getME(meeggmodt1_2)
getME(meeggmodt1_2,"glmer.nb.theta")
round(getME(meeggmodt1_2,"glmer.nb.theta"), digits=3
)
MnTheta<-as.vector(c(round(getME(meeggmodt1_2,"glmer.nb.theta"), digits=3), "glmer.nb.theta", "-", "-", "-", "-","-", "-", "-" ))
Mnloglik<-c(round(logLik(meeggmodt1_2)[1], digits=3), "-", "-", "-", "-", "-", "-", "-")
MnAIC<-c(round(extractAIC(meeggmodt1_2)[2], digits=3), "-", "-", "-", "-", "-", "-", "-")
PCOutputM<-rbind(PCOutputM, MnTheta, MnTwologlik, MnAIC)
rownames(PCOutputM)[5:7]<- c("Theta", "Log Likelihood", "AIC")
View(PCOutputM)
PCOutputM<-data.frame(estpcm)
names(PCOutputM) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutputM$Exp_Est <- round(exp(PCOutputM$Estimate), digits=3)
PCOutputM$Exp_lCI <- round(exp(PCOutputM$lCI), digits=3)
PCOutputM$Exp_uCI <- round(exp(PCOutputM$uCI), digits=3)
#also add AIC's, Theta, and AIC and log Likelihoods
MnTheta<-as.vector(c(round(getME(meeggmodt1_2,"glmer.nb.theta"), digits=3), "-", "-", "-", "-","-", "-", "-" ))
Mnloglik<-c(round(logLik(meeggmodt1_2)[1], digits=3), "-", "-", "-", "-", "-", "-", "-")
MnAIC<-c(round(extractAIC(meeggmodt1_2)[2], digits=3), "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutputM<-rbind(PCOutputM, MnTheta, MnTwologlik, MnAIC)
rownames(PCOutputM)[5:7]<- c("Theta", "Log Likelihood", "AIC")
View(PCOutputM)
round(logLik(meeggmodt1_2)[1]
)
round(logLik(meeggmodt1_2)[1], digits=3)
signif(logLik(meeggmodt1_2)[1], digits=3)
extractAIC(meeggmodt1_2)[2]
Mnloglik<-c(signif(logLik(meeggmodt1_2)[1], digits=3), "-", "-", "-", "-", "-", "-", "-")
Mnloglik
PCOutputM<-data.frame(estpcm)
names(PCOutputM) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutputM$Exp_Est <- round(exp(PCOutputM$Estimate), digits=3)
PCOutputM$Exp_lCI <- round(exp(PCOutputM$lCI), digits=3)
PCOutputM$Exp_uCI <- round(exp(PCOutputM$uCI), digits=3)
#also add AIC's, Theta, and AIC and log Likelihoods
MnTheta<-as.vector(c(round(getME(meeggmodt1_2,"glmer.nb.theta"), digits=3), "-", "-", "-", "-","-", "-", "-" ))
Mnloglik<-c(round(logLik(meeggmodt1_2)[1], digits=3), "-", "-", "-", "-", "-", "-", "-")
MnAIC<-c(round(extractAIC(meeggmodt1_2)[2], digits=3), "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutputM<-rbind(PCOutputM, MnTheta, Mnloglik, MnAIC)
rownames(PCOutputM)[5:7]<- c("Theta", "Log Likelihood", "AIC")
View(PCOutputM)
CIS <- confint(meeggmodt1_2, method="Wald")
CIS <- CIS[-1,]
#CIS <- data.frame(CIS)
estpcm <- cbind(Estimate = summary(meeggmodt1_2)$coefficients[,1], CIS,
summary(meeggmodt1_2)$coefficients[,2],
signif(summary(meeggmodt1_2)$coefficients[,4], digits=3))
PCOutputM<-data.frame(estpcm)
names(PCOutputM) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutputM$Exp_Est <- round(exp(PCOutputM$Estimate), digits=3)
PCOutputM$Exp_lCI <- round(exp(PCOutputM$lCI), digits=3)
PCOutputM$Exp_uCI <- round(exp(PCOutputM$uCI), digits=3)
#Combine Estimates and Confidence Intervals
PCOutputM$IRR<-paste(PCOutputM$Exp_Est,"(",PCOutputM$Exp_lCI, "-", PCOutputM$Exp_uCI,
")" )
#Delete Extra Columns
PCOutputM$Estimate <- NULL
PCOutputM$lCI <- NULL
PCOutputM$uCI <- NULL
PCOutputM$Exp_Est <- NULL
PCOutputM$Exp_lCI <- NULL
PCOutputM$Exp_uCI <- NULL
#also add AIC's, Theta, and AIC and log Likelihoods
MnTheta<-as.vector(c(round(getME(meeggmodt1_2,"glmer.nb.theta"), digits=3), "-", "-", "-", "-","-", "-", "-" ))
Mnloglik<-c(round(logLik(meeggmodt1_2)[1], digits=3), "-", "-", "-", "-", "-", "-", "-")
MnAIC<-c(round(extractAIC(meeggmodt1_2)[2], digits=3), "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutputM<-rbind(PCOutputM, MnTheta, Mnloglik, MnAIC)
rownames(PCOutputM)[5:7]<- c("Theta", "Log Likelihood", "AIC")
View(PCOutputM)
CIS <- confint(meeggmodt1_2, method="Wald")
CIS <- CIS[-1,]
#CIS <- data.frame(CIS)
estpcm <- cbind(Estimate = summary(meeggmodt1_2)$coefficients[,1], CIS,
summary(meeggmodt1_2)$coefficients[,2],
signif(summary(meeggmodt1_2)$coefficients[,4], digits=3))
PCOutputM<-data.frame(estpcm)
names(PCOutputM) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutputM$Exp_Est <- round(exp(PCOutputM$Estimate), digits=3)
PCOutputM$Exp_lCI <- round(exp(PCOutputM$lCI), digits=3)
PCOutputM$Exp_uCI <- round(exp(PCOutputM$uCI), digits=3)
#Combine Estimates and Confidence Intervals
PCOutputM$IRR<-paste(PCOutputM$Exp_Est,"(",PCOutputM$Exp_lCI, "-", PCOutputM$Exp_uCI,
")" )
#Delete Extra Columns
PCOutputM$Estimate <- NULL
PCOutputM$lCI <- NULL
PCOutputM$uCI <- NULL
PCOutputM$Exp_Est <- NULL
PCOutputM$Exp_lCI <- NULL
PCOutputM$Exp_uCI <- NULL
#also add AIC's, Theta, and AIC and log Likelihoods
MnTheta<-as.vector(c(round(getME(meeggmodt1_2,"glmer.nb.theta"), digits=3), "-", "-"))
Mnloglik<-c(ceiling(logLik(meeggmodt1_2)[1]), "-", "-")
MnAIC<-c(ceiling(extractAIC(meeggmodt1_2)[2]), "-", "-")
#Paste
PCOutputM<-rbind(PCOutputM, MnTheta, Mnloglik, MnAIC)
rownames(PCOutputM)[5:7]<- c("Theta", "Log Likelihood", "AIC")
View(PCOutputM)
write.csv(PCOutputM, "MixedEffectOutputTable)
""
""
write.csv(PCOutputM, "MixedEffectOutputTable")
write.csv(PCOutputM, "MixedEffectOutputTable.csv")
?glmer.nb
?confint
summary(PCOutputM)
summary(meeggmodt1_2)
