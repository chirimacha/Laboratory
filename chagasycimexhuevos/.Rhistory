a <- available.packages()
head(rownames(a), 3)
install.packages("slidify")
install.packages(c("ggplot2", "devtools"))
install.packages("slidify")
source("http://bioconductor.org/bioLite.R")
biocLite()
library(ggplot2)
search()
"2015-03-23"+30
a<-as.Date("2015-03-23")
a+40
+90
a+90
a+100
-7
a+93
x<-c(0,1,2,NA, FALSE)
x
is.na(x[3])
requiredPackages <- c("XML"
,"doParallel", "lubridate","PBSmapping","plyr","inline","Rcpp"
)
packages <- requiredPackages[!(requiredPackages %in% rownames(installed.packages()))]
if(length(packages) > 0) {
install.packages(packages)
}
fa<-1100+200+26150+2000+2865
fa
2*32315
fees<-((1958+370+168+250)*2)+150
fees
fees+health+rent
fees<-((1958+370+168+250)*2)+150
health<-1570*2
rent<-4326*2
fees+health+rent
tuition(21088*2)
fa<-(1100+200+26150+2000+2865)*2
fa
*
tuition<-(21088*2)
fees<-((1958+370+168+250)*2)+150
health<-1570*2
rent<-4326*2
expense<-fees+health+rent
expenses
expense
expense+tuition
y<-expense+tuition
fa-y
tuition
health+fees
fees
?binom.test
bisampsize<-function(m){
((1.96/m)^2)*0.25
}
bisampsize(0.5)
bisampsize<-function(m){
((1.96/m)^2)*0.25
}
bisampsize(0.25)
bisampsize<-function(m){
((1.96/m)^2)*0.25
}
bisampsize(0.20)
1/12
3/12
binom.power
library(binom)
install.packages(binom)
install.packages("binom")
#packages needed
library(lubridate) #para extracting dates
library(reshape2) #para make the wide data into long data
library(vioplot)
library(matrixStats)
library(ggplot2)
library(plyr)  #para rbind.fill function
setwd("c:\\Users\\tradylan\\Documents\\Laboratory\\chagasycimexhuevos")
cimfertpilot <- read.csv("Cimex_FertP.csv")
#https://docs.google.com/spreadsheets/d/1E-GRO1_Ybrgqj0wjgz5s9YHY1KwJUVPov0I2PwgC2CQ/edit
cimfert1 <- read.csv("Cimex_FertR1.csv")
##https://docs.google.com/spreadsheets/d/1iDBITasgMrbmwGJJSwsPkcal1b7b3kdfmviRtw8wbqA/edit#gid=709304485
cimfert2 <- read.csv("Cimex_FertR2.csv")
tempRH <- read.csv("TEMP_Y_RH.csv")
cimfertpilot$trial <- 0
cimfert1$trial <- 1
cimfert2$trial <- 2
#bring the tables together.".fill" allows different table lengths fill w/ NA
cimfert<-rbind.fill(cimfertpilot, cimfert1, cimfert2)
#create unicode for insect pair
cimfert$ID <- paste(cimfert$Nro_.pareja, cimfert$trial, sep="-")
#create column that specifies specific mouse
cimfert$raton <-paste(cimfert$Procedencia, cimfert$trial, sep="-")
#first use Procedencia to get certain groups
ControlP <- which(cimfert$Procedencia=="CO")
InfectPA <- which(cimfert$Procedencia=="I-R1")
InfectPB <- which(cimfert$Procedencia=="I-R2")
ControlA <- which(cimfert$Procedencia=="CO-A")
ControlB <- which(cimfert$Procedencia=="CO-B")
InfectA <- which(cimfert$Procedencia=="I-A")
InfectB <- which(cimfert$Procedencia=="I-B")
##Now create some indexes using the mouse.
#the R stands for which Rep it was in. RA is rep 1 and RB is rep2.
#r doesn't like numbers in the names
InfectARA <-which(cimfert$raton=="I-A-1")
InfectARB <-which(cimfert$raton=="I-A-2")
InfectBRA <-which(cimfert$raton=="I-B-1")
InfectBRB <-which(cimfert$raton=="I-B-2")
ControlARA <- which(cimfert$raton=="CO-A-1")
ControlARB <- which(cimfert$raton=="CO-A-2")
ControlBRA <- which(cimfert$raton=="CO-B-1")
ControlBRB <- which(cimfert$raton=="CO-B-2")
#group the appropriate ones for later usage
controls <- c(ControlP, ControlA, ControlB)
infect <- c(InfectPA, InfectPB, InfectA, InfectB)
InfectP <- c(InfectPA, InfectPB)
InfectRA <- c(InfectARA, InfectBRA)
InfectRB <- c(InfectARB, InfectBRB)
ControlRA <- c(ControlARA, ControlBRA)
ControlRB <- c(ControlARB, ControlBRB)
#make column designating infected/control
cimfert$infected[infect]<-1
cimfert$infected[controls]<-0
postura<-which(substr(names(cimfert), nchar(names(cimfert)), nchar(names(cimfert)))=="p")
viabilidad <-which(substr(names(cimfert), nchar(names(cimfert)), nchar(names(cimfert)))=="v")
blank <- (1:(length(postura)*length(cimfert$Procedencia))*0)
Compile <- data.frame(blank,0,0,0,0,0,0, 0, 0, 0, 0, 0)
Compile <- rename(Compile, replace = c("blank"="id", "X0"="parents","X0.1"="infected","X0.2"="start",
"X0.3"="week", "X0.4"="date", "X0.5"="eggs", "X0.6"="hatch", "X0.7"="death",
"X0.8"="mouse", "X0.9"="procedencia", "X0.10"="trial"))
cimfert$Nro_.pareja <- as.character(cimfert$Nro_.pareja)
cimfert$Procedencia <- as.character(cimfert$Procedencia)
cimfert$Fecha_Inicio_.Pareja <-as.character(cimfert$Fecha_Inicio_.Pareja)
for (d in 1:(length(postura))){
for (i in 1:(length(cimfert$s1_p))){ #i for each insect
Compile$week[i+((d-1)*length(cimfert$ID))] <- d
Compile$trial[i+((d-1)*length(cimfert$ID))] <- cimfert$trial[i]
Compile$mouse[i+((d-1)*length(cimfert$ID))] <- cimfert$raton[i]
Compile$death[i+((d-1)*length(cimfert$ID))] <- cimfert$Longevidad[i]
Compile$id[i+((d-1)*length(cimfert$ID))] <- cimfert$ID[i]
Compile$parents[i+((d-1)*length(cimfert$ID))] <- cimfert$Nro_.pareja[i]
Compile$procedencia[i+((d-1)*length(cimfert$ID))] <- cimfert$Procedencia[i]
Compile$infected[i+((d-1)*length(cimfert$ID))] <- cimfert$infected[i]
Compile$start[i+((d-1)*length(cimfert$ID))] <- cimfert$Fecha_Inicio_.Pareja[i]
Compile$start[i+((d-1)*length(cimfert$ID))] <- cimfert$Fecha_Inicio_.Pareja[i]
Compile$hatch[i+((d-1)*length(cimfert$ID))] <-cimfert[i,(2*d+3)]
Compile$eggs[i+((d-1)*length(cimfert$ID))]<-cimfert[i,(2*d+2)]
}
}
Compile$start <- parse_date_time(Compile$start, "dmy", tz="EST")
Compile$start <- as.Date(Compile$start)
Compile$date <- (Compile$start+(Compile$week*7))
tempRH$FECHA <- parse_date_time(tempRH$FECHA, "dmy", tz="EST")
tempRH$FECHA <- as.Date(tempRH$FECHA)
View(Cimfert)
View(Compile)
is.na(Compile$hatch)
tempRH$FECHA <- parse_date_time(tempRH$FECHA, "dmy", tz="EST")
tempRH$FECHA <- as.Date(tempRH$FECHA)
#Once we have full data, we justneed to comment out the following line.
pilot<-which(Compile$trial==0)
tempRH
View(tempRH)
which(is.na(Compile$FECHA)==FALSE)
which(is.na(Compile$FECHA)==TRUE)
tempRH <- read.csv("TEMP_Y_RH.csv")
names(tempRH)
head(tempRH)
tempRH$FECHA <- parse_date_time(tempRH$FECHA, "dmy", tz="EST")
tempRH$FECHA <- as.Date(tempRH$FECHA)
pilot<-which(Compile$trial==0)
PCompile<-Compile[pilot,]
is.na(PCompile$eggs)
which(is.na(PCompile$eggs)==TRUE)
View(PCompile)
names(Compile)
Compile$alive
for (i in 1:length(Compile$week))
if(Compile$week[i] >= Compile$death[i]){
Compile$alive[i]<-0
} else(Compile$alive[i]<-1)
Compile$alive
which(Compile$alive==1)
VIDA<-hich(Compile$alive==1)
VIDA<-which(Compile$alive==1)
which(is.na(Compile[VIDA]$eggs)==TRUE)
which(is.na(Compile$eggs[VIDA])==TRUE)
dim(Compile)
