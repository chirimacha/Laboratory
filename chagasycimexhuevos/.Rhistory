#hatch by hum diff
hchhumdiff<-ggplot(aes( y= hatch, x= humdiff, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchhumdiff<-hchhumdiff+ggtitle("Number of Eggs Hatced by Largest Humidity Difference and Infection Status")
hchhumdiff<-hchhumdiff+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchhumdiff
############################
#hatch by temp
temphatch<-lm(Compile$hatch ~Compile$avtemp)
plot(Compile$avtemp, Compile$hatch,
main="Hatching by Temperature", ylab="Number of Eggs",
xlab="Temperature(C)")
#hatch by average temp
hchtemp<-ggplot(aes( y= hatch, x= avtemp, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtemp<-hchtemp+ggtitle("Number of Eggs Hatched by Temp and Infection Status")
hchtemp<-hchtemp+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtemp
#hatch average high temp
hchtempavhigh<-ggplot(aes( y= hatch, x= avtemphigh, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtempavhigh<-hchtempavhigh+ggtitle("Number of Eggs Hatched by Max Temp and Infection Status")
hchtempavhigh<-hchtempavhigh+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtempavhigh
#hatch by average low temp
hchtempavlow<-ggplot(aes( y= hatch, x= avtemplow, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtempavlow<-hchtempavlow+ggtitle("Number of Eggs Hatched by Average Low Temp and Infection Status")
hchtempavlow<-hchtempavlow+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtempavlow
#hatch by week max high
hchtemphigh<-ggplot(aes( y= hatch, x= tempmax, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtemphigh<-hchtemphigh+ggtitle("Number of Eggs Hatched by Max Temp and Infection Status")
hchtemphigh<-hchtemphigh+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtemphigh
#hatch by week min low
hchtemplow<-ggplot(aes( y= hatch, x= tempmin, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtemplow<-hchtemplow+ggtitle("Number of Eggs Hatched by Low Temp and Infection Status")
hchtemplow<-hchtemplow+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtemplow
#hatch by hum diff
hchtempdiff<-ggplot(aes( y= hatch, x= tempdiff, na.rm=TRUE),
data=Compile[hnona,])+geom_point(data=Compile[hnona,])
hchtempdiff<-hchtempdiff+ggtitle("Number of Eggs Hatced by Largest Temp Difference and Infection Status")
hchtempdiff<-hchtempdiff+facet_grid(. ~infected)+geom_smooth(method= "lm")
hchtempdiff
################################
# ##For each time line
# glm(cases~rhs(data$year,2003)+lhs(data$year,2003)+ offset(log(population)), data=data,
#subset=28:36, family=poisson())
#Now lets make a graph of Eggs by week
infected<-which(Compile$infected==1)
controled<-which(Compile$infected==0)
uniquebugs<-unique(Compile$id)
plot(Compile$week[infected], Compile$eggs[infected]+rnorm(length(Compile$eggs[infected]), 0.5, 1), col="red")
#Now lets make a graphs o week and date by eggs of infected insects
infected<-which(Compile$infected==1)
controled<-which(Compile$infected==0)
uniquebugs<-unique(Compile$id)
plot(Compile$week[infected], Compile$eggs[infected], col="red")
plot(Compile$date[infected], Compile$eggs[infected], col="red")
#Compare infected hatch and by week.
par(mfrow=c(2,4))
#infected
#pdf(file="graphs/EggsandHatchvsWeekboxanddotplots.pdf")
plot(Compile$week[infected], Compile$eggs[infected], main="Infected Eggs Laid by Week",
ylab="Weeks", xlab="Eggs")
boxplot(Compile$eggs[infected] ~c(Compile$week[infected]), main="Infected Eggs Laid by Week",
ylab="Weeks", xlab="Eggs")
plot(Compile$week[infected], Compile$hatch[infected], main="Infected Eggs Hatched by Week",
ylab="Weeks", xlab="Eggs")
boxplot(Compile$hatch[infected] ~Compile$week[infected], main="Infected Eggs Hatched by Week",
ylab="Weeks", xlab="Eggs")
#not infected
plot(Compile$week[controled], Compile$eggs[controled], main="Control Eggs Laid by Week",
ylab="Weeks", xlab="Eggs")
boxplot(Compile$eggs[controled] ~Compile$week[controled], main="Control Eggs Laid by Week",
ylab="Weeks", xlab="Eggs")
plot(Compile$week[controled], Compile$hatch[controled], main="Control Eggs Hatched by Week",
ylab="Weeks", xlab="Eggs")
boxplot(Compile$hatch[controled] ~Compile$week[controled], main="Control Eggs Hatched by Week",
ylab="Weeks", xlab="Eggs")
#dev.off()
#write.csv(Compile,"CompiledFertilityData.csv")
###############################################################################
#==============================================================================
#ahora tenomos muchas graficas, podemos empezar haciendo el modelo
#########################################################
#el ejemplo de Ricardo
#glm(cases~rhs(data$year,2003)+lhs(data$year,2003)+ offset(log(population)), data=data, subset=28:36, family=poisson())
#fake code template
#Bring in Compiled data exported from code above.
Compile<-read.csv("CompiledFertilityData.csv")
#for box plots week was categorical.  This makes a numeric column.
Compile$weeknum<-as.numeric(Compile$week)
#I am also going to make a table with all egg and hatch are no longer NA but 0
Compile$hatchdiff<-Compile$eggs-Compile$hatch
Compile$infectedf<-as.factor(Compile$infected)
Compile$hatchdiff<-as.numeric(Compile$hatchdiff)
hatchbox<-ggplot(aes( x= hatchdiff, fill = infectedf, na.rm=TRUE),
data= Compile[enona,]) +geom_density(alpha=0.5, na.rm=TRUE)#geom_histogram(aes(y="..density.."),position="dodge")
hatchbox<-hatchbox+ggtitle("Relative denisty of differences between hatched and laid eggs by infection status")
hatchbox<-hatchbox+scale_fill_manual(values=c("blue", "red"))
ggsave(g, file="HatchDiffDensity.jpeg", units= "cm", width = 26.4, height= 15.875)
#g<-g+scale_x_continuous(breaks=seq(0, 38, 2))
#g<-g+scale_x_discrete(labels=c("", seq())
hatchbox
#Eggsave(hatchbox, file="HatchDiffDensityByInf.jpeg", units= "cm", width = 26.4, height= 15.875)
CompileNoNA<-Compile
eggna <- which(is.na(CompileNoNA$eggs)==TRUE)
hatchna <- which(is.na(CompileNoNA$hatch)==TRUE)
CompileNoNA$eggs[eggna]<-0
CompileNoNA$hatch[hatchna]<-0
#Make Compile where NA's eggs are removed.
CompileRD<-Compile[-eggna,]
#One final change to the data frames, I would like to make a julian day vector.
#provides numeric value for possible seasonaility analysis from the initial observation.
#careful this is not necessesary
dateRD<-julian.Date(CompileRD$date)
startDate<-julian.Date(CompileRD$start)
mindate<-min(startDate)
CompileRD$juliandate<-dateRD-startDate
#we found that we need to conduct a cox proportional hazaard test for time until first egg
#thus we need to first reverse the binary of egg event.
Compile$reveggevent<-1-Compile$eggevent
#http://socserv.socsci.mcmaster.ca/jfox/Books/Companion/appendix/Appendix-Cox-Regression.pdf
sevent<-Surv(time=CompileRD$weeknum, event=CompileRD$eggevent)
#need to get rid of the "+"
CoxEggLaid<-coxph(sevent~infected+cluster(idnum), data=CompileRD)
#summary(survfit(CoxEggLaid, newdata =))
#because events occur more than once its a mess because "+" are added.
hist(CoxEggLaid)
#The models remove the NA's so lets use CompileRD to make two simple graphs
hist(CompileRD$eggs, breaks=21)
mean(CompileRD$eggs)#3.94
var(CompileRD$eggs) #17.5
#This shows that poisson assumptions are not met.
#earlier(under the poisson models) I took the variance of a mean by week...which gave me a smaller value of course.
#But yes, poisson values are not the same.
#create a factor for mice so that
mice<-unique(Compile$mouse)
mouseidnum<-c(1:length(mice))
mousetable<-data.frame(mice,mouseidnum)
mousetable$mouseidnum<-as.factor(mousetable$mouseidnum)
CompileRD$mouseidnum<-CompileRD$trial*0
for(i in 1:length(mice)){
micenumi<-which(mousetable$mouseidnum==i)
micematch<-which(CompileRD$mouse==mousetable$mice[micenumi])
CompileRD$mouseidnum[micematch]<-i
}
#lets combine the data to remove 0 inflation
#Use the Collapse to break into smaller groups
#function that takes in the desired number of weeks per periood
SummaryCompileRD<-function(segl){
#Create an emty output vector
CompileRD$period<-CompileRD$week*0
#Calculate the appropriate variables: total number of weeks and the number of segments
maxw<-max(Compile$week)
nseg<-maxw/segl
nseg<-ceiling(nseg)
#assign each week into one of the segments. This starts with all the sets and
#adds 1 to the period vector
#then it removes the first segment( or period) and adds another 1 to the remaining segments until
#each week has the corresponding period designation.
for(i in 1:nseg){
adding<-which(CompileRD$week>((segl*i)-segl))
CompileRD$period[adding]<-CompileRD$period[adding]+1
}
#   #this is a test
#   CompileRD$periods<-CompileRD$week*0
#   addingq<-which(CompileRD$week>(0))
#   CompileRD$periods[addingq]<-CompileRD$periods[addingq]+1
#   d<-c(rep(1:3, each=10))
#   tree<-which(d>1)
#   d[tree]<-d[tree]+1
#   d
#create unicode to merge tables later.
CompileRD$periodid<-paste(CompileRD$idnum, CompileRD$period, sep="-")
#redefine functions so na.rm is fed into the function
#be aware that this can introduce 0's, but it is on CompileRD so that
#should only happen for hatch when egg is already 0.
sums<-function(row){
sum(row, na.rm=TRUE)
}
maxs<-function(row){
max(row, na.rm=TRUE)
}
mins<-function(row){
min(row, na.rm=TRUE)
}
means<-function(row){
mean(row, na.rm=TRUE)
}
#These functions perform a function on the desired outputs as it reduces the data from weeks to the desired period.
CompileRDsum<-summaryBy(eggs+hatch+alive~idnum+period+infected+mouse+trial+periodid, FUN=c(sums), data=CompileRD, keep.names = TRUE)
CompileRDmax<-summaryBy(tempmax+tempdiff+hummax+humdiff~periodid, FUN=c(maxs), data=CompileRD, keep.names = TRUE)
CompileRDmin<-summaryBy(tempmin+hummin~periodid, FUN=c(mins), data=CompileRD, keep.names = TRUE)
CompileRDmean<-summaryBy(avtemphigh+avtemplow+avtemp+avhumhigh+avhumlow+avhum
~periodid, FUN=c(means), data=CompileRD, keep.names = TRUE)
a<-merge(CompileRDmax, CompileRDmean, by="periodid")
b<-merge(a, CompileRDmin, by="periodid")
final<-merge(b, CompileRDsum, by="periodid")
final
}
#lets look at 2 and 3
C2week<-SummaryCompileRD(2)
C3week<-SummaryCompileRD(3)
C5week<-SummaryCompileRD(5)
C8week<-SummaryCompileRD(8)
#
fivedead<-which(C5week$alive<5)
#checking code
zeroeight<-which(C8week$eggs==0)
zerotable<-C8week[zeroeight,]
zeroids<-unique(zerotable$idnum)
removedeathday<-function(weektab){
deads<-which(weektab$alive<max(weektab$alive))
tablerd<-weektab[,-deads]
tablerd
}
C2weekRd<-removedeathday(C2week)
#10-2 is one with 0's
tens<-which(Compile$idnum==10)
tentable<-Compile[tens,]
#plot the 0's
plot(1:37,1:37,col=0)
for (i in 1:20){
zer<-which(Compile$idnum==zeroids[i])
lines(Compile$week[zer], Compile$eggs[zer], col=i)
}
plot(1:37,1:37,col=0)
for (i in 21:40){
zer<-which(Compile$idnum==zeroids[i])
lines(Compile$week[zer], Compile$eggs[zer], col=i)
}
plot(1:37,1:37,col=0)
for (i in 41:60){
zer<-which(Compile$idnum==zeroids[i])
lines(Compile$week[zer], Compile$eggs[zer], col=i)
}
plot(1:37,1:37,col=0)
for (i in 61:80){
zer<-which(Compile$idnum==zeroids[i])
lines(Compile$week[zer], Compile$eggs[zer], col=i)
}
plot()
# pdf("compacted_egg_hist.pdf")
# par(mfrow=c(3,1))
# hist(CompileRD$eggs, breaks=compmax)
# hist(C2weeklive$eggs, breaks=twomax)
# hist(C3weeklive$eggs, breaks=threemax)
# dev.off()
#write.csv(CompileRD,"ReducedCompiledFertility Data")
#write.csv( C2weeklive, "2weekGroupedFertilityData_simple.csv")
#write.csv(C3weeklive, "3weekGroupedFertilityData_simple.csv")
plot(CompileRD$week, CompileRD$eggs)
plot(log(CompileRD$week+1+rnorm(length(CompileRD$eggs), 0, 0.5)), CompileRD$eggs+rnorm(length(CompileRD$eggs), 0, 0.5))
#for box plots week was categorical.  This makes a numeric column.
Compile$weeknum<-as.numeric(Compile$week)
gmod1<-geem(eggs ~infected, id=idnum, data=Compile, family=poisson, corstr="exchangeable", Mv=1)
pmod1a<-glm(eggs ~ +(1|idnum), offset=log(visits+1), data = Compile, family ="poisson")
pmod1b<-glm(eggs ~ infected, data = Compile, family = poisson) #17383
pmod1c<-glm(eggs ~ weeknum, data = Compile, family = poisson) #17187
pmod1d<-glm(eggs ~ mouse, data = Compile, family = poisson) #17113
pmod1e<-glm(eggs ~ trial, data = Compile, family = poisson) #17695
pmod1f<-glm(eggs ~ avtemphigh, data = Compile, family = poisson) #17695
pmod1g<-glm(eggs ~ avtemplow, data = Compile, family = poisson) #17322
pmod1h<-glm(eggs ~ avtemp, data = Compile, family = poisson) #17417
pmod1i<-glm(eggs ~ tempmax, data = Compile, family = poisson) #17356
pmod1j<-glm(eggs ~ tempmin, data = Compile, family = poisson) #17284
pmod1k<-glm(eggs ~ tempdiff, data = Compile, family = poisson) #17413
pmod1l<-glm(eggs ~ avhumhigh, data = Compile, family = poisson) #17419
pmod1m<-glm(eggs ~ avhumlow, data = Compile, family = poisson) #17440
pmod1n<-glm(eggs ~ avhum, data = Compile, family = poisson) #17450
pmod1o<-glm(eggs ~ hummax, data = Compile, family = poisson) #17442
pmod1p<-glm(eggs ~ hummin, data = Compile, family = poisson) #17482
pmod1q<-glm(eggs ~ humdiff, data = Compile, family = poisson) #17452
pmod2a2 <- glm(eggs ~ week + (1|idnum), data = Compile, family = poisson) #17383
pmod2a <- glm(eggs ~ infected + (1|idnum), data = Compile, family = poisson) #17383
pmod2al <- glm(eggs ~ infected+weeknum, data = Compile, family = poisson)
pmod2am <- glm(eggs ~ mouse + (1|idnum), data = Compile, family = poisson) #17113
pmod2both <- glm(eggs ~ mouse + infected+ (1|idnum), data = Compile, family = poisson) #17113
pmod2b <- glm(eggs ~ infected+weeknum + (1|idnum), data = Compile, family = poisson) #16713
pmod2c <- glm(eggs ~ infected+weeknum+ avtemp + (1|idnum), data = Compile, family = poisson)#16545
pmod2d<- glm(eggs ~ infected+weeknum+ avtemp + avhum+ (1|idnum), data = Compile, family = poisson)#1647416
pmod2e<- glm(eggs ~ infected+weeknum+ avtemp + avhum+alive+ (1|idnum), data = Compile, family = poisson)#
#mod2f<- glm(eggs ~ infected+weeknum+ avtemp + avhum+alive+ (1|idnum), data = Compile, family = neg.bin())
pmod2fboth<- glm(eggs ~ infected+mouse+weeknum+ avtemp + avhum+alive+ (1|idnum), data = Compile, family =poisson)#16075
#plotting models onto the original data. use model$fitted on the NA removed dataframe
plot(CompileRD$week, CompileRD$eggs)
lines(CompileRD$week, pmod2a2$fitted)
#check assumptions for poisson.  This uses values from above so disregard.
#aveggweek<-mean(totegg$xbar, na.rm=T)  #2.61
#var(totegg$xbar, na.rm=T)   #3.48
#upperlimmean<-aveggweek+(1.96*(sd(totegg$xbar, na.rm=T)/sqrt(length(totegg$xbar)))) #3.21
#lowlimvar<-(length(totegg$xbar)-1)*(var(totegg$xbar, na.rm=T))/41.923 #2.98
#does not survive hypothesis test that they are
#using MASS package, use the glm.nb for a negative binomial model
#run model and look at AICs, below there is a formula to interpret. But basically if AIC is >3
#############Negative Binomial###################
#at the end of the day we want to know if infection is responsible for change eggs
#when other envir. factors excluded and the change in lifespan.
#how I understand, not having interaction will only change intercept, not slope
nbmod1a<-glm.nb(eggs ~ weeknum+ (1|idnum), data=Compile) #AIC= 11999 (much better than any poisson)
nbmod1b<-glm.nb(eggs ~ infected+weeknum+ (1|idnum), data=Compile) #AIC 11917
nbmod1c<-glm.nb(eggs ~ infected*weeknum+ (1|idnum), data=Compile) #AIC 11911 (AIC of >=6 is sign.)
#now we have a base model, lets look at how humidity and temperature affect
nbmod2a<-glm.nb(eggs ~ infected*weeknum+avhum+ (1|idnum), data=Compile) #AIC=11858
nbmod2b<-glm.nb(eggs ~ infected*weeknum+avhum+avhum*infected+(1|idnum), data=Compile)# 11816
nbmod2c<-glm.nb(eggs ~ infected*weeknum+avhumhigh+(1|idnum), data=Compile)#11858
nbmod2d<-glm.nb(eggs ~ infected*weeknum+avhumhigh+avhumhigh*infected+(1|idnum), data=Compile)#11821
nbmod2e<-glm.nb(eggs ~ infected*weeknum+avhumlow+ (1|idnum), data=Compile)#11851
nbmod2f<-glm.nb(eggs ~ infected*weeknum+avhumlow+avhumlow*infected+(1|idnum), data=Compile)#11813
nbmod2g<-glm.nb(eggs ~ infected*weeknum+avtemp+(1|idnum), data=Compile)#11850
nbmod2h<-glm.nb(eggs ~ infected*weeknum+avtemp+avtemp*infected+(1|idnum), data=Compile)# 11846
nbmod2i<-glm.nb(eggs ~ infected*weeknum+avtemphigh+(1|idnum), data=Compile)# 11853
nbmod2j<-glm.nb(eggs ~ infected*weeknum+avtemphigh+avtemphigh*infected+(1|idnum), data=Compile)#11848
nbmod2k<-glm.nb(eggs ~ infected*weeknum+avtemplow+(1|idnum), data=Compile)#11850
nbmod2l<-glm.nb(eggs ~ infected*weeknum+avtemplow+avtemplow*infected+(1|idnum), data=Compile)#11848
nbmod2m<-glm.nb(eggs ~ infected*weeknum+hummax+(1|idnum), data=Compile)#11857
nbmod2n<-glm.nb(eggs ~ infected*weeknum+hummax+hummax*infected+(1|idnum), data=Compile)#11830
nbmod2o<-glm.nb(eggs ~ infected*weeknum+hummin+ (1|idnum), data=Compile) #11858
nbmod2p<-glm.nb(eggs ~ infected*weeknum+hummin+hummin*infected+(1|idnum), data=Compile) #11810
nbmod2q<-glm.nb(eggs ~ infected*weeknum+humdiff+(1|idnum), data=Compile)# 11859
nbmod2r<-glm.nb(eggs ~ infected*weeknum+humdiff+humdiff*infected+(1|idnum), data=Compile)#11860
nbmod2s<-glm.nb(eggs ~ infected*weeknum+tempmax+ (1|idnum), data=Compile)#11853
nbmod2t<-glm.nb(eggs ~ infected*weeknum+tempmax+tempmax*infected+(1|idnum), data=Compile)#11854
nbmod2u<-glm.nb(eggs ~ infected*weeknum+tempmin+(1|idnum), data=Compile)#11847
nbmod2v<-glm.nb(eggs ~ infected*weeknum+avhum+tempmin*infected+(1|idnum), data=Compile)#11841
nbmod2w<-glm.nb(eggs ~ infected*weeknum+avhum+(1|idnum), data=Compile)#11858
nbmod2z<-glm.nb(eggs ~ infected*weeknum+avhum+avhum*infected+(1|idnum), data=Compile)#11816
#Now we have strongest hum temp.  Lets add the missing pieces.
###OLD stuf
nbmod1<-glm.nb(eggs ~ infected+weeknum+avhum+ (1|idnum), data=Compile) #AIC 11867
nbmod2<-glm.nb(eggs ~ infected+weeknum+avtemp+ (1|idnum), data=Compile) #AIC 11858
nbmod3<-glm.nb(eggs ~ infected+weeknum+avhum+avtemp + (1|idnum), data=Compile) #AIC 11852
nbmod3a<-glm.nb(eggs ~ infected+weeknum+avhum*avtemp + (1|idnum) , data=Compile) #AIC 11852
nbmod4<-glm.nb(eggs ~ infected+weeknum+avhum+avtemphigh+(1|idnum), data=Compile)#11855
nbmod5<-glm.nb(eggs ~ infected+weeknum+avhum+mouse+ (1|idnum), data=Compile) #11824
nbmod6<-glm.nb(eggs ~ infected+weeknum+avhum+mouse+infected*mouse+ (1|idnum), data=Compile) #11824
#6 was the same as 5 because there interactions are themselves linearly related adding no new information.
nbmod7<-glm.nb(eggs ~ infected+weeknum+avhum+mouse+alive+ (1|idnum), data=Compile)#11824
nbmod8<-glm.nb(eggs ~ infected+weeknum+avhum+mouse+avtemp+(1|idnum), data=Compile) #11789
#now letsa add the difference.
nbmod9<-glm.nb(eggs ~ infected+weeknum+avhum+mouse+avtemp+humdiff+(1|idnum), data=Compile) #11791
nbmod10<-glm.nb(eggs ~ infected+weeknum+avhum+mouse+avtemp+tempdiff+(1|idnum), data=Compile) #11791
#adding temp/hum diff does not add significantly to the model
nbmod11<-glm.nb(eggs ~ infected+weeknum+avhum+mouse+avtemp+hummax+(1|idnum), data=Compile) #11791
nbmod12<-glm.nb(eggs ~ infected+weeknum+avhum+mouse+avtemp+tempmax+(1|idnum), data=Compile) #11791
#as seen in graphs above an infected insect may be affected differently by temp/hum affects.
#thus lets add an interaction term.
nbmod13<-glm.nb(eggs ~ infected+weeknum+avhum+mouse+avtemp+tempmax+infected*avhum+(1|idnum), data=Compile)#11741
nbmod14<-glm.nb(eggs ~ infected+weeknum+avhum+mouse+avtemp+tempmax+infected*avtemp+(1|idnum), data=Compile)#11777
nbmod15<-glm.nb(eggs ~ infected+weeknum+avhum+mouse+avtemp+tempmax+infected*avhum+infected*avtemp+(1|idnum), data=Compile)#11750
#hence an interaction with humidity plays a bigger role than temperature or both interactions.
nbmod16<-glm.nb(eggs ~ infected+weeknum+avhum+avtemp+infected*avhum+(1|idnum), data=Compile)
#lets look at humidity variations keeping all else constant.  ()
#lets see if they are some better predictor for hum other than avhum
nbmod13<-glm.nb(eggs ~ infected+weeknum+mouse+hummax+avtemp+(1|idnum), data=Compile)#11794
#lets look at the plot for the negative binomial version of the simplest model.
plot(CompileRD$week, CompileRD$eggs)
lines(CompileRD$week, nbmod0$fitted)
mean(nbmod0$fitted)
mean(CompileRD$eggs)
#Plotting Residuals and predicted values.
par(mfrow=c(2,4))
#pdf(file="Poisson vs Negative Binomial Model of eggs by infected+weeknum+ (1 idnum).pdf")
plot(nbmod0, ylim=4)
title(main="Negative Binomial")
plot(mod2b)
title(main="Poisson")
#dev.off()
#http://www.ats.ucla.edu/stat/r/dae/zinbreg.htm Describes a 0 inflated negative binomial
zinbmod1 <- zeroinfl(eggs ~ weeknum + infected | persons,
data = zinb, dist = "negbin", EM = TRUE)
summary(m1)
#alive is not helpful because NA's are already removed.
#lets plot to get a sense of where we're at
par(mfrow=c(1,1))
plot(nbmod13)
testplot<-testplot+ggtitle("Number of Eggs Laid by Week and Infection Status")
testplot<-testplot+facet_grid(. ~infected)+geom_smooth(method= "lm")
testplot
plot(residuals(nbmod13))
#####MODEL FOR HATCH
#exp((AICmin-AICi)/2)=Probablity that i minimalizes information loss just as well as min.
#ln(prob)=AICmin-AICi/2
#2e^prob=difference between AICs.
#if sign prob is 0.05 then
2*(log(0.05))
# thus a difference in AIC of 6 o greater is a significant similar probablity for now.
test1<-exp((11824-11852)/2)
plot(Compile$weeknum, Compile$eggs)
View(Compile)\
View(Compile)
View(cimfert)
?summaryBy
names(Compile)
for (i in 1:max(Compile$idnum)){
is<-which(Compile$idnum==i)
toteggs<-sum(Compile$Eggs[is])
tothatches<-sum(Compile$hatch[is])
Compile$egg_total[is]<-toteggs
Compile$hatch_total[is]<-tothatches
}
sum(Compile$eggs)
sum(Compile$eggs,na.rm=T)
for (i in 1:max(Compile$idnum)){
is<-which(Compile$idnum==i)
toteggs<-sum(Compile$Eggs[is], na.rm=TRUE)
tothatches<-sum(Compile$hatch[is], na.rm=TRUE)
Compile$egg_total[is]<-toteggs
Compile$hatch_total[is]<-tothatches
}
which(COmpile$idnum==1)
which(Compile$idnum==1)
something<-which(COmpile$idnum==1)
something<-which(Compile$idnum==1)
sum(Compile$eggs[something], na.rm=T)
Compile$egg_total<-Compile$egg*0
Compile$egg_total<-Compile$egg*0
View(Compil$egg
)
View(Compile$egg)
View(Compile$eggs)
names(Compile)
Compile$eggs<-as.numeric(Compile$eggs)
Compile$egg_total<-Compile$egg*0
Compile$eggs<-as.numeric(Compile$eggs)
Compile$egg_total<-Compile$eggs*0
#make two rows to fil(l
Compile$eggs<-as.numeric(Compile$eggs)
Compile$egg_total<-Compile$eggs*0
Compile$hatch_total_total<-Compile$egg*0
#create loop that does calculation
for (i in 1:max(Compile$idnum)){
is<-which(Compile$idnum==i)
toteggs<-sum(Compile$Eggs[is], na.rm=TRUE)
tothatches<-sum(Compile$hatch[is], na.rm=TRUE)
Compile$egg_total[is]<-toteggs
Compile$hatch_total[is]<-tothatches
}
#make two rows to fil(l
Compile$eggs<-as.numeric(Compile$eggs)
Compile$egg_total<-Compile$eggs*0
Compile$hatch_total_total<-Compile$eggs*0
#create loop that does calculation
for (i in 1:max(Compile$idnum)){
is<-which(Compile$idnum==i)
toteggs<-sum(Compile$Eggs[is], na.rm=TRUE)
tothatches<-sum(Compile$hatch[is], na.rm=TRUE)
Compile$egg_total[is]<-toteggs
Compile$hatch_total[is]<-tothatches
}
View(Compile)
hist(Compile$egg_total)
hist(Compile$egg_total)
Compile$egg_total
#create loop that does calculation
for (i in 1:max(Compile$idnum)){
is<-which(Compile$idnum==i)
toteggs<-sum(Compile$Eggs[is], na.rm=TRUE)
tothatches<-sum(Compile$hatch[is], na.rm=TRUE)
Compile$egg_total[is]<-toteggs
Compile$hatch_total[is]<-tothatches
}
Compile$egg_total
View(Compile)
Compile$eggs<-as.numeric(Compile$eggs)
Compile$egg_total<-Compile$eggs*NA
Compile$hatch_total<-Compile$eggs*NA
#create loop that does calculation
for (i in 1:max(Compile$idnum)){
is<-which(Compile$idnum==i)
toteggs<-sum(Compile$Eggs[is], na.rm=TRUE)
tothatches<-sum(Compile$hatch[is], na.rm=TRUE)
Compile$egg_total[is]<-toteggs
Compile$hatch_total[is]<-tothatches
}
View
View(Compile)
Compile$eggs<-as.numeric(Compile$eggs)
Compile$egg_total<-Compile$eggs*NA
Compile$hatch_total<-Compile$eggs*NA
View(Compile)
for (i in 1:max(Compile$idnum)){
is<-which(Compile$idnum==i)
toteggs<-sum(Compile$eggs[is], na.rm=TRUE)
tothatches<-sum(Compile$hatch[is], na.rm=TRUE)
Compile$egg_total[is]<-toteggs
Compile$hatch_total[is]<-tothatches
}
View(Compile)
which(Compile$egg_total==0)
which(Compile$egg_total=="NA")
which(Compile$egg_total==NA)
is.na(Compile$egg_total)
which(Compile$egg_total==NA)==TRUE
which(Compile$egg_total==NA)==FALSE
which(Compile$egg_total==NA)=="TRUE"
which(is.na(Compile$egg_total)==TRUE)
which(is.na(Compile$egg_total)==FALSE)
hist(Compile$egg_total)
hist(Compile$egg_total, breaks=max(Compile$egg_total))
pdf(egg_total_hist.pdf)
hist(Compile$egg_total, breaks=max(Compile$egg_total))
dev.off()
pdf("egg_total_hist.pdf")
hist(Compile$egg_total, breaks=max(Compile$egg_total))
dev.off()
