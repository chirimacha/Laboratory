tray1<-
sample(1:4,4)
tray2<-sample(1:4,4)
tray3<-sample(1:4,4)
tray4<-sample(1:4,4)
tray1
tray2
tray3
tray4
quiz<-81.5*15
mid<-84*30
quiz+mid
quiz<-81.5*.15
mid<-84*.30
quiz+mid
100-37.4
quiz<-81.5*.15
mid<-84*.25
hw1<-6*.1
quiz+mid+hw1
.8*50
rnorm(4,4)
sample(1:4,4)
sample(1:4,4)
sample(1:4,4)
sample(1:4,4)
library(lubridate) #para extracting dates
library(reshape2) #para make the wide data into long data
library(matrixStats)
library(ggplot2)
library(plyr)  #para rbind.fill function
library(geeM)
library(MASS)
library(lmtest)
library(pscl)
library(survival)
library(doBy)
library(missMDA)
library(Rmisc) #summarySE command
library(lme4)#linear mixed effects
library(nlme)
library(stargazer)
setwd("c:\\Users\\tradylan\\Documents\\Laboratory\\chagasycimexhuevos")
FFdataPC <- read.csv("FertilityFecundityDataPC.csv")
lifespanmod<-glm.nb(egg_total~infected+lifespan, data=FFdataPC )
summary(lifespanmod )
#AIC==1636.7 P(infected)==0.107
#Null Model without any temperature or humidity variables.
nullmodel<- glm.nb(egg_total~infected, data=FFdataPC, offset(log(lifespan)))
summary(nullmodel) #Theta is 1.13
summary(nullmodel)  #AIC==26710   P=<2e-16 *** Theta is 1.13
#Check if poisson would be better
poissonmod<-glm(egg_total~infected, offset(log(lifespan)), data=FFdataPC, family="poisson")
#test from http://www.ats.ucla.edu/stat/r/dae/nbreg.htm
X2 <- 2*(logLik(nullmodel)-logLik(poissonmod))
pchisq(X2, df=1, lower.tail=FALSE)  #is the df=1 because they are the same, except for theta?
lrtest(poissonmod, nullmodel) #this does the same thing, again shows that nb is better
#This rules out poisson
#check for 0 inflation
nullzmod<- zeroinfl(egg_total~infected+offset(log(lifespan)), data=FFdataPC)
vuong(nullmodel, nullzmod) #null model is better, so no zero inflation
#skip to to line 587 to show colinearity.
# ###Now just do a univariate analysis
# maxtempmodel<- glm.nb(egg_total~avmaxtemp, data=FFdata, offset(log(lifespan)))
# mintempmodel<- glm.nb(egg_total~avmintemp, data=FFdata, offset(log(lifespan)))
# maxhummodel<- glm.nb(egg_total~avmaxhum, data=FFdata, offset(log(lifespan)))
# minhummodel<- glm.nb(egg_total~avminhum, data=FFdata, (log(lifespan)))
#
# #look at summary to check AIC and P value
# summary(maxtempmodel)  #AIC==
# summary(mintempmodel) #AIC==
# summary(maxhummodel) #AIC==
# summary(minhummodel) #AIC==
#remember Null Model had an AIC of 4326.5  (a difference of 6 is significant, but must be nested)
#full models
fullmodel<-glm.nb(egg_total~infected+avmaxtemp+avminhum+avmaxhum+avmintemp, data=FFdataPC, offset(log(lifespan)))
summary(fullmodel) #AIC==4215.4
#However Colinearity in variables.
plot(FFdataPC$avmaxhum, FFdataPC$avminhum)
#Alternative models (2 variables)  #all of which the full model has a better AIC
AltModelA<-glm.nb(egg_total~infected+avmintemp+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelA) #AIC==4271.2
AltModelB<-glm.nb(egg_total~infected+avmaxtemp+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelB) #AIC==4257.2
AltModelC<-glm.nb(egg_total~infected+avmintemp+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelC) #AIC==4268.5
AltModelD<-glm.nb(egg_total~infected+avminhum+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelD) #AIC==4269.9
summary(AltModelA) #AIC==
AltModelB<-glm.nb(egg_total~infected+avmaxtemp+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelB) #AIC==
AltModelC<-glm.nb(egg_total~infected+avmintemp+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelC) #AIC==
AltModelD<-glm.nb(egg_total~infected+avminhum+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelD) #AIC==
AltModelE<-glm.nb(egg_total~infected+avmintemp+avmaxtemp, data=FFdataPC, offset(log(lifespan)))
summary(AltModelE) #AIC==4235.5
AltModelF<-glm.nb(egg_total~infected+avmaxtemp+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelF)  #AIC=4258.8
#Alternative Models with 3 Variables
AltModelG<-glm.nb(egg_total~infected+avmintemp+avmaxtemp+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelG) #AIC==
AltModelH<-glm.nb(egg_total~infected+avmintemp+avmaxtemp+avmaxhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelH) #AIC==
AltModelI<-glm.nb(egg_total~infected+avmintemp+avmaxhum+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelI) #AIC==
AltModelJ<-glm.nb(egg_total~infected+avmaxhum+avmaxtemp+avminhum, data=FFdataPC, offset(log(lifespan)))
summary(AltModelJ) #AIC==
#it is likely that colinearity is inflating the significance of eachy variable.
#thus try principle components and not each varriable by itself
plot(FFdataPC$avmaxtemp, FFdataPC$avmintemp)
plot(FFdataPC$avmaxtemp, FFdataPC$avmaxhum)
plot(FFdataPC$avmaxtemp, FFdataPC$avminhum)
plot(FFdataPC$avmintemp, FFdataPC$avmaxhum)
plot(FFdataPC$avmintemp, FFdataPC$avminhum)
plot(FFdataPC$avmaxhum, FFdataPC$avminhum)
#Egg Model PCA
#Egg models
#==============================================================================
#Null model with no principle components
pceggmod0 <- glm.nb(egg_total~infected, data=FFdataPC, offset(log(lifespan)))
#Model with 1 PC
pceggmod1 <- glm.nb(egg_total~infected+PC1, data=FFdataPC,
offset(log(lifespan)))
#Model with 2 PC
pceggmod2 <- glm.nb(egg_total~infected+PC1+PC2, data=FFdataPC,
offset(log(lifespan)))
#Model with 2PC and trial
pceggmod2b <- glm.nb(egg_total~infected+PC1+PC2+factor(trial), data=FFdataPC,
offset(log(lifespan)))
#Model with trial and PC2 interaction
pceggmod2c <- glm.nb(egg_total~infected+PC1+PC2*factor(trial), data=FFdataPC,
offset(log(lifespan)))
#Model with trial and PC1 Interaction
pceggmod2d <- glm.nb(egg_total~infected+PC2+PC1*factor(trial), data=FFdataPC,
offset(log(lifespan)))
#Model with trial interacting with both PC2 and PC1
pceggmod2e <- glm.nb(egg_total~infected+PC1*factor(trial)+PC2*factor(trial),
data=FFdataPC, offset(log(lifespan)))
pceggmod2epoi <- glm(egg_total~infected+PC1*factor(trial)+PC2*factor(trial),
data=FFdataPC, offset(log(lifespan)), family="poisson")
#Model with 3 PC
pceggmod3 <- glm.nb(egg_total~infected+PC1+PC2+PC3, data=FFdataPC,
offset(log(lifespan)))
#Model without PC2 (more significant that 1,2, and 3 if no trial interactions)
pceggmod3b <- glm.nb(egg_total~infected+PC1+PC3, data=FFdataPC,
offset(log(lifespan)))
pceggmod3c <- glm.nb(egg_total~infected+PC1+PC2+PC3+factor(trial),
data=FFdataPC, offset(log(lifespan)))
pceggmod3d <- glm.nb(egg_total~infected+PC1+PC3+factor(trial), data=FFdataPC,
offset(log(lifespan)))
#Full Model with all Principle Components #do not use, may overfit
pceggmod4 <- glm.nb(egg_total~infected+PC1+PC2+PC3+PC4, data=FFdataPC,
offset(log(lifespan)))
#look at AIC's
pceggmod0#4327
pceggmod1#4263
pceggmod2#4264
pceggmod2b#4199
pceggmod2c#4132
pceggmod2d#4129**This may be good choice
pceggmod2e#4127***We will use this model
pceggmod3#4250
pceggmod3b#4248
pceggmod3c#4197.7
pceggmod3d#4239
pceggmod4#4215
#perform likelihood ratio test
lrtest(pceggmod4,pceggmod2)
#both test show pceggmod4 are significantly better than any other
lrtest(pceggmod4,pceggmod1)
lrtest(pceggmod3,pceggmod0)
lrtest(pceggmod3,pceggmod1)
lrtest(pceggmod3b,pceggmod3)
lrtest(pceggmod2d,pceggmod2e)#(almost significant 0.065)
lrtest(pceggmod2,pceggmod1)
###Egg Models with Trial Included in Principle Components
#should I put -1 to remove intercept?
tpceggmod2 <- glm.nb(egg_total~infected+PC1+PC2, data=FFdataPC,
offset(log(lifespan)))
est <- cbind(Estimate = coef(tpceggmod2), confint(tpceggmod2), summary(tpceggmod2)$coef[,4])
colnames(est)[4]<-"P-Value"
?"stargazer"
summary(tpceggmod2)
summary(pceggmod2e)
tpceggmod2 <- glm.nb(egg_total~infected+TPC1+TPC2, data=FFdataPC,
offset(log(lifespan)))
summary(tpceggmod2)
stargazer(tpceggmod2, type="html",
dep.var.labels=c("Eggs Laid Per Week"),
covariate.labels=c("Infection Status","Principal Component 1",
"Principal Component 2"), out="models.htm")
tPCOutput
tpceggmod2 <- glm.nb(egg_total~infected+TPC1+TPC2, data=FFdataPC,
offset(log(lifespan)))
est <- cbind(Estimate = coef(tpceggmod2), confint(tpceggmod2), summary(tpceggmod2)$coef[,4])
colnames(est)[4]<-"P-Value"
tPCOutput<-data.frame(est)
names(tPCOutput) <- c("Estimate", "lCI", "uCI", "P.Value")
tPCOutput$Exp_Est <- exp(tPCOutput$Estimate)
tPCOutput$Exp_lCI <- exp( tPCOutput$lCI)
tPCOutput$Exp_uCI <- exp(tPCOutput$uCI)
write.csv(tPCOutput, "TrialPrincompModOutput.xlsx")
tPCOutput
tPCOutput[,1]
row.names(tPCOutput)
summary(tpceggmod2)
est <- cbind(Estimate = coef(tpceggmod2), confint(tpceggmod2),
summary(tpceggmod2)$coef[,2], summary(tpceggmod2)$coef[,4])
colnames(est)[5]<-"Std. Error"
colnames(est)[4]<-"P-Value"
est
est <- cbind(Estimate = coef(tpceggmod2), confint(tpceggmod2),
summary(tpceggmod2)$coef[,2], summary(tpceggmod2)$coef[,4])
colnames(est)[4]<-"Std. Error"
colnames(est)[5]<-"P-Value"
tPCOutput<-data.frame(est)
names(tPCOutput) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
tPCOutput$Exp_Est <- exp(tPCOutput$Estimate)
tPCOutput$Exp_lCI <- exp( tPCOutput$lCI)
tPCOutput$Exp_uCI <- exp(tPCOutput$uCI)
tPCOutput
tpceggmod2
tpceggmod2$AIC
tpceggmod2$aic
rownames(tPCOutput)
AIC<-c(1:length(tPCOutput[1,])*0)
AIC
tpceggmod1$Theta
tpceggmod2$Theta
tpceggmod2$theta
tpceggmod2
names(tpceggmod2)
summary(tpceggmod2)
2xLog Likelihood<-c(1:length(tPCOutput[1,])*0)
AIC<-c(1:length(tPCOutput[1,])*0)
Theta<-c(tpceggmod2$theta, "-", "-", tpceggmod2$SE.theta, "-")
Twologlik<-c(1:length(tPCOutput[1,])*0)
Theta<-c(tpceggmod2$theta, "-", "-", tpceggmod2$SE.theta, "-")
Twologlik<-c(1:length(tPCOutput[1,])*0)
AIC<-c(1:length(tPCOutput[1,])*0)
names(tpceggmod2)
Theta<-c(tpceggmod2$theta, "-", "-", tpceggmod2$SE.theta, "-")
Twologlik<-c(tpceggmod2$twologlik, "-", "-", "-", "-")
AIC<-c(tpceggmod2$aic, "-", "-", "-", "-")
paste(tPCOutput, Theta)
exam1<-paste(tPCOutput, Theta)
exam1
View(exam1)
Theta
names(Theta)
?paste
?cbind
rbind(tpceggmod2, Theta)
dim(Theta)
Theta
class(Theta)
Theta<-as.vector(c(tpceggmod2$theta, "-", "-", tpceggmod2$SE.theta, "-"))
class(Theta)
Theta<-as.vector(c(tpceggmod2$theta, "-", "-", tpceggmod2$SE.theta, "-"))
dim(Theta)
length(Theta)
dim(tPCOutput)
tPCOutput<-data.frame(est)
names(tPCOutput) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
tPCOutput$Exp_Est <- exp(tPCOutput$Estimate)
tPCOutput$Exp_lCI <- exp( tPCOutput$lCI)
tPCOutput$Exp_uCI <- exp(tPCOutput$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
Theta<-as.vector(c(tpceggmod2$theta, "-", "-", tpceggmod2$SE.theta, "-"))
Twologlik<-c(tpceggmod2$twologlik, "-", "-", "-", "-")
AIC<-c(tpceggmod2$aic, "-", "-", "-", "-")
dim(tPCOutput)
tPCOutput
Theta<-as.vector(c(tpceggmod2$theta, "-", "-", tpceggmod2$SE.theta, "-","-", "-", "-" ))
rbind(tpceggmod2, Theta)
cbind(tpceggmod2, Theta)
dim(tPCOutput)
dim(Theta)
Theta<-as.vector(c(tpceggmod2$theta, "-", "-", tpceggmod2$SE.theta, "-","-", "-", "-" ))
length(Theta)
dim(tPCOutput)
rind(tPCOutput, Theta)
rbind(tPCOutput, Theta)
View(rbind(tPCOutput, Theta))
rbind(tPCOutput, Theta, Twologlik, AIC)
View(rbind(tPCOutput, Theta, Twologlik, AIC))
Twologlik<-c(tpceggmod2$twologlik, "-", "-", "-", "-", "-", "-", "-")
Twologlik
AIC<-c(tpceggmod2$aic, "-", "-", "-", "-", "-", "-", "-")
rbind(tPCOutput, Theta, Twologlik, AIC)
View(rbind(tPCOutput, Theta, Twologlik, AIC))
rownames(tPCOutput)
tPCOutput<-rbind(tPCOutput, Theta, Twologlik, AIC)
rownames(tPCOutput)
rownames(tPCOutput)[5:7]<- c("Theta", "2xLog Likelihood, AIC")
rownames(tPCOutput)
rownames(tPCOutput)[1]
rownames(tPCOutput)[5]
rownames(tPCOutput)[5:7]<- c("Theta", "2xLog Likelihood", "AIC")
rownames(tPCOutput)
tPCOutput
View(tPCOutput)
3.72+.12
3.73+.14
meeggmodm1_2 <- glmer.nb(egg_total~infected+PC1+PC2+(1|mouseidnum)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
meeggmodm1_2 <- glmer.nb(egg_total~infected+PC1+PC2+(1|mouseidnum)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
meeggmodm1 <- glmer.nb(egg_total~infected+PC1+(1|mouseidnum)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
meeggmodm2 <- glmer.nb(egg_total~infected+PC2+(1|mouseidnum)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
summary(meeggmodm1)
summary(meeggmodm2)
summary(meeggmodm1_2)
names(summary(meeggmodm1_2))
names((meeggmodm1_2))
names(meeggmodm1_2)
meggmodm1_2
meggmod1_2
meeggmodm1_2
names(meeggmodm1_2)
(meeggmodm1_2)
(meeggmodm1_2$AIC)
summary
names(summary(meeggmodm1_2))
summary(meeggmodm1_2)$loglik
summary(meeggmodm1_2)$logLik
summary(meeggmodm1_2)$logLik[1]
summary(meeggmodm1_2)$AICtab
summary(meeggmodm1_2)$AICtab[1]
summary(meeggmodm1_2
)
names(summary(meeggmodm1_2))
summary(meeggmodm1_2)$coefficients
coef(meeggmodm1_2)
coef(meeggmodm1_2)
confint(meeggmodm1_2)
names(summary(meeggmodm1_2))
summary(meeggmodm1_2)$isLmer
summary(meeggmodm1_2)$sigma
summary(meeggmodm1_2)$ngrps
summary(meeggmodm1_2)$family
summary(meeggmodm1_2)$varcor
names(summary(meeggmodm1_2))
summary(meeggmodm1_2)$varcor[3]
summary(meeggmodm1_2)$varcor
summary(meeggmodm1_2)$varcor[1]
summary(meeggmodm1_2)$varcor[2]
summary(meeggmodm1_2)$varcor[1]$correlation
pceggmod2d#4129**This may be good choice
pceggmod2e#4127***We will use this model
estpc <- cbind(Estimate = coef(pceggmod2d), confint(pceggmod2d),
summary(pceggmod2d)$coef[,2], summary(pceggmod2d)$coef[,4])
colnames(estpc)[4]<-"Std. Error"
colnames(estpc)[5]<-"P-Value"
tPCOutput<-data.frame(estpc)
names(PCOutput) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutput$Exp_Est <- exp(PCOutput$Estimate)
PCOutput$Exp_lCI <- exp(PCOutput$lCI)
PCOutput$Exp_uCI <- exp(PCOutput$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
Theta<-as.vector(c(pceggmod2d$theta, "-", "-", pceggmod2d$SE.theta, "-","-", "-", "-" ))
Twologlik<-c(pceggmod2d$twologlik, "-", "-", "-", "-", "-", "-", "-")
AIC<-c(pceggmod2d$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutput<-rbind(PCOutput, Theta, Twologlik, AIC)
rownames(PCOutput)[5:7]<- c("Theta", "2xLog Likelihood", "AIC")
estpc <- cbind(Estimate = coef(pceggmod2d), confint(pceggmod2d),
summary(pceggmod2d)$coef[,2], summary(pceggmod2d)$coef[,4])
colnames(estpc)[4]<-"Std. Error"
colnames(estpc)[5]<-"P-Value"
PCOutput<-data.frame(estpc)
names(PCOutput) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutput$Exp_Est <- exp(PCOutput$Estimate)
PCOutput$Exp_lCI <- exp(PCOutput$lCI)
PCOutput$Exp_uCI <- exp(PCOutput$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
Theta<-as.vector(c(pceggmod2d$theta, "-", "-", pceggmod2d$SE.theta, "-","-", "-", "-" ))
Twologlik<-c(pceggmod2d$twologlik, "-", "-", "-", "-", "-", "-", "-")
AIC<-c(pceggmod2d$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutput<-rbind(PCOutput, Theta, Twologlik, AIC)
rownames(PCOutput)[5:7]<- c("Theta", "2xLog Likelihood", "AIC")
View(PCOutput)
View(TPCOutput)
View(tPCOutput)
tPCOutput<-data.frame(est)
names(tPCOutput) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
tPCOutput$Exp_Est <- exp(tPCOutput$Estimate)
tPCOutput$Exp_lCI <- exp( tPCOutput$lCI)
tPCOutput$Exp_uCI <- exp(tPCOutput$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
Theta<-as.vector(c(tpceggmod2$theta, "-", "-", tpceggmod2$SE.theta, "-","-", "-", "-" ))
Twologlik<-c(tpceggmod2$twologlik, "-", "-", "-", "-", "-", "-", "-")
AIC<-c(tpceggmod2$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
tPCOutput<-rbind(tPCOutput, Theta, Twologlik, AIC)
rownames(tPCOutput)[5:7]<- c("Theta", "2xLog Likelihood", "AIC")
View(tPCOutput)
estpc <- cbind(Estimate = coef(pceggmod2d), confint(pceggmod2d),
summary(pceggmod2d)$coef[,2], summary(pceggmod2d)$coef[,4])
colnames(estpc)[4]<-"Std. Error"
colnames(estpc)[5]<-"P-Value"
PCOutput<-data.frame(estpc)
names(PCOutput) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutput$Exp_Est <- exp(PCOutput$Estimate)
PCOutput$Exp_lCI <- exp(PCOutput$lCI)
PCOutput$Exp_uCI <- exp(PCOutput$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
Theta<-as.vector(c(pceggmod2d$theta, "-", "-", pceggmod2d$SE.theta, "-","-", "-", "-" ))
Twologlik<-c(pceggmod2d$twologlik, "-", "-", "-", "-", "-", "-", "-")
AIC<-c(pceggmod2d$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutput<-rbind(PCOutput, Theta, Twologlik, AIC)
rownames(PCOutput)[5:7]<- c("Theta", "2xLog Likelihood", "AIC")
View(PCOutput)
#Put PC Model Outputs into Table.
estpc <- cbind(Estimate = coef(pceggmod2d), confint(pceggmod2d),
summary(pceggmod2d)$coef[,2], summary(pceggmod2d)$coef[,4])
colnames(estpc)[4]<-"Std. Error"
colnames(estpc)[5]<-"P-Value"
PCOutput<-data.frame(estpc)
names(PCOutput) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutput$Exp_Est <- exp(PCOutput$Estimate)
PCOutput$Exp_lCI <- exp(PCOutput$lCI)
PCOutput$Exp_uCI <- exp(PCOutput$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
nTheta<-as.vector(c(pceggmod2d$theta, "-", "-", pceggmod2d$SE.theta, "-","-", "-", "-" ))
nTwologlik<-c(pceggmod2d$twologlik, "-", "-", "-", "-", "-", "-", "-")
nAIC<-c(pceggmod2d$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutput<-rbind(PCOutput, nTheta, nTwologlik, nAIC)
rownames(PCOutput)[5:7]<- c("Theta", "2xLog Likelihood", "AIC")
View(rownames)
meeggmodm1_2 <- glmer.nb(egg_total~infected+PC1+PC2+(1|mouseidnum)+offset(log(FFdataPC$lifespan)), data=FFdataPC)
summary(meeggmodm1_2)
exp(0.33)
estpc <- cbind(Estimate = coef(pceggmod2d), confint(pceggmod2d),
summary(pceggmod2d)$coef[,2], summary(pceggmod2d)$coef[,4])
colnames(estpc)[4]<-"Std. Error"
colnames(estpc)[5]<-"P-Value"
estpc
rownames(PCOutput)[5:12]<- c("Rep1", "Rep2","PC1_Rep1_Int","PC1_Rep2_Int",
"PC1","Theta", "2xLog Likelihood", "AIC")
dim(PCOutput)
rownames(PCOutput)[5:11]<- c("Rep1", "Rep2","PC1_Rep1_Int","PC1_Rep2_Int",
"PC1","Theta", "2xLog Likelihood", "AIC")
rownames(PCOutput)[5:11]<- c("Rep1", "Rep2","PC1_Rep1_Int","PC1_Rep2_Int",
"Theta", "2xLog Likelihood", "AIC")
View(PCOutput)
estpcb <- cbind(Estimate = coef(pceggmod2e), confint(pceggmod2e),
summary(pceggmod2e)$coef[,2], summary(pceggmod2e)$coef[,4])
colnames(estpcb)[4]<-"Std. Error"
colnames(estpcb)[5]<-"P-Value"
PCOutputB<-data.frame(estpcb)
estpcb <- cbind(Estimate = coef(pceggmod2e), confint(pceggmod2e),
summary(pceggmod2e)$coef[,2], summary(pceggmod2e)$coef[,4])
estpc <- cbind(Estimate = coef(pceggmod2d), confint(pceggmod2d),
summary(pceggmod2d)$coef[,2], summary(pceggmod2d)$coef[,4])
colnames(estpc)[4]<-"Std. Error"
colnames(estpc)[5]<-"P-Value"
PCOutput<-data.frame(estpc)
names(PCOutput) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutput$Exp_Est <- exp(PCOutput$Estimate)
PCOutput$Exp_lCI <- exp(PCOutput$lCI)
PCOutput$Exp_uCI <- exp(PCOutput$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
nTheta<-as.vector(c(pceggmod2d$theta, "-", "-", pceggmod2d$SE.theta, "-","-", "-", "-" ))
nTwologlik<-c(pceggmod2d$twologlik, "-", "-", "-", "-", "-", "-", "-")
nAIC<-c(pceggmod2d$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutput<-rbind(PCOutput, nTheta, nTwologlik, nAIC)
rownames(PCOutput)[5:11]<- c("Rep1", "Rep2","PC1_Rep1_Int","PC1_Rep2_Int",
"Theta", "2xLog Likelihood", "AIC")
View(PCOutput)
estpcb <- cbind(Estimate = coef(pceggmod2e), confint(pceggmod2e),
summary(pceggmod2e)$coef[,2], summary(pceggmod2e)$coef[,4])
colnames(estpcb)[4]<-"Std. Error"
colnames(estpcb)[5]<-"P-Value"
PCOutputB<-data.frame(estpcb)
names(PCOutputB) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutputB$Exp_Est <- exp(PCOutputB$Estimate)
PCOutputB$Exp_lCI <- exp(PCOutputB$lCI)
PCOutputB$Exp_uCI <- exp(PCOutputB$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
bnTheta<-as.vector(c(pceggmod2e$theta, "-", "-", pceggmod2e$SE.theta, "-","-", "-", "-" ))
bnTwologlik<-c(pceggmod2e$twologlik, "-", "-", "-", "-", "-", "-", "-")
bnAIC<-c(pceggmod2e$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutputB<-rbind(PCOutputB, bnTheta, bnTwologlik, bnAIC)
rownames(PCOutputB)[5:13]<- c("Rep1", "Rep2","PC1_Rep1_Int","PC1_Rep2_Int","", "",
"Theta", "2xLog Likelihood", "AIC")
write.csv(PCOutputB, "pcoutb.csv")
PCOutputB
View(PCOutputB)
estpcb <- cbind(Estimate = coef(pceggmod2e), confint(pceggmod2e),
summary(pceggmod2e)$coef[,2], summary(pceggmod2e)$coef[,4])
colnames(estpcb)[4]<-"Std. Error"
colnames(estpcb)[5]<-"P-Value"
PCOutputB<-data.frame(estpcb)
names(PCOutputB) <- c("Estimate", "lCI", "uCI", "Std. Error","P-Value")
PCOutputB$Exp_Est <- exp(PCOutputB$Estimate)
PCOutputB$Exp_lCI <- exp(PCOutputB$lCI)
PCOutputB$Exp_uCI <- exp(PCOutputB$uCI)
#also add AIC's, Theta, and AIC and log Likelihoods
bnTheta<-as.vector(c(pceggmod2e$theta, "-", "-", pceggmod2e$SE.theta, "-","-", "-", "-" ))
bnTwologlik<-c(pceggmod2e$twologlik, "-", "-", "-", "-", "-", "-", "-")
bnAIC<-c(pceggmod2e$aic, "-", "-", "-", "-", "-", "-", "-")
#Paste
PCOutputB<-rbind(PCOutputB, bnTheta, bnTwologlik, bnAIC)
rownames(PCOutputB)[5:13]<- c("Rep1", "Rep2","PC1_Rep1_Int","PC1_Rep2_Int",
"PC2_Rep1_Int","PC2_Rep2_Int", "Theta",
"2xLog Likelihood", "AIC")
write.csv(PCOutputB, "pcoutb.csv")
