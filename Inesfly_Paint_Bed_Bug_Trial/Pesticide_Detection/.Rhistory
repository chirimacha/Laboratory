?install.R
library(installR)
library(install.R)
library(updateR)
library(update.R)
version()
a<-1
b<-2
a+b
install.packages("videoplayR")
??videoplayR
install.packages("OpenCV")
if (!require(devtools)) {
install.packages("devtools")
}
devtools::install_github("swarm-lab/videoplayR")
library(videoplayR)
library(devtools)
devtools::install_github("swarm-lab/videoplayR")
devtools::install_github("swarm-lab/videoplayR")
devtools::install_github("swarm-lab/videoplayR")
install.packages("lippicv")
install.packages("-lippicv")
install.packages("videoplayR")
if (!require(devtools)) {
install.packages("devtools")
}
devtools::install_github("swarm-lab/videoplayR")
library(videoplayR)
devtools::install_github("swarm-lab/videoplayR")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("swarm-lab/videoplayR")
stream1
stream0
# Open Libraries
library(videoplayR)
library(dplyr)
library(clue)
library(shiny)
library(splancs)
library(grid)
library(tictoc)
library(reshape2)
library(vioplot)
library(scales)
library(tictoc)
install.packages("vioplot")
install.packages("reshape2")
install.packages("scales
")
# Open Libraries
library(videoplayR)
library(dplyr)
library(clue)
library(shiny)
library(splancs)
library(grid)
library(tictoc)
library(reshape2)
library(vioplot)
library(scales)
library(tictoc)
packages("scales")
install.packages("scales")
library(scales)
library(videoplayR)
library(dplyr)
library(clue)
library(shiny)
library(splancs)
library(grid)
library(tictoc)
library(reshape2)
library(vioplot)
library(scales)
library(tictoc)
setwd("/Users/mzlevy/Laboratory/Inesfly_Paint_Bed_Bug_Trial/Pesticide_Detection")
repetition <- 2
trial <- 6
camera <- 2
TrayPlace<- read.csv("TraysRep1y2y3y4.csv") # times, dates, humidity quadrant
repetition <- 4
trial <- 6
camera <- 2
TrayPlace<- read.csv("TraysRep1y2y3y4.csv") # times, dates, humidity quadrant
getpoint<-function(frame){
rto <- frame$dim[1]/frame$dim[2]
print(rto)
ht<-rto*6
quartz(width=6, height=ht)
imshow(frame)
a<-grid.locator(unit = "npc")
gcx<-as.numeric(a$x)
gcy<-as.numeric(a$y)
X <- ceiling(gcx*frame$dim[2])
Y <- ceiling(gcy*frame$dim[1])
imshow(frame)
points(x=c(X), y=c(Y), col="red", pch=19, cex = 0.1 )
coord<-c(X,Y)
output=coord
}
assignments as TrayPlace
for (i in 3) {
for (j in 1:6) {
for (k in 1:2) {
temp_name1 <- paste("vidR", i, "T", j, "C", k, sep = "")
video_name <- paste("R", i, "T", j, "C", k, ".mp4", sep = "")
assign(temp_name1, readVid(video_name))
}
}
}
library(videoplayR)
getpoint<-function(frame){
rto <- frame$dim[1]/frame$dim[2]
print(rto)
ht<-rto*6
quartz(width=6, height=ht)
imshow(frame)
a<-grid.locator(unit = "npc")
gcx<-as.numeric(a$x)
gcy<-as.numeric(a$y)
X <- ceiling(gcx*frame$dim[2])
Y <- ceiling(gcy*frame$dim[1])
imshow(frame)
points(x=c(X), y=c(Y), col="red", pch=19, cex = 0.1 )
coord<-c(X,Y)
output=coord
}
for (i in 3) {
for (j in 1:6) {
for (k in 1:2) {
temp_name1 <- paste("vidR", i, "T", j, "C", k, sep = "")
video_name <- paste("R", i, "T", j, "C", k, ".mp4", sep = "")
assign(temp_name1, readVid(video_name))
}
}
}
for (i in 3) {
for (j in 1:6) {
for (k in 1:2) {
temp_name1 <- paste("vidR", i, "T", j, "C", k, sep = "")
video_name <- paste("Videos/R", i, "T", j, "C", k, ".mp4", sep = "")
assign(temp_name1, readVid(video_name))
}
}
}
FR3T1C1 <- getFrame(R3T1C1, 5)
FR3T1C2 <- getFrame(R3T1C2, 5)
FR3T2C1 <- getFrame(R3T2C1, 5)
FR3T2C2 <- getFrame(R3T2C2, 5)
FR3T3C1 <- getFrame(R3T3C1, 5)
FR3T3C2 <- getFrame(R3T3C2, 5)
FR3T4C1 <- getFrame(R3T4C1, 5)
FR3T4C2 <- getFrame(R3T4C2, 5)
FR3T5C1 <- getFrame(R3T5C1, 5)
FR3T5C2 <- getFrame(R3T5C2, 5)
FR3T6C1 <- getFrame(R3T6C1, 5)
FR3T6C2 <- getFrame(R3T6C2, 5)
for (i in 3) {
for (j in 1:6) {
for (k in 1:2) {
temp_name1 <- paste("vidR", i, "T", j, "C", k, sep = "")
video_name <- paste("Videos/R", i, "T", j, "C", k, ".mp4", sep = "")
assign(temp_name1, readVid(video_name))
}
}
}
vidR3T1C1
#FRAMES
#Repetition 2 Frame 5
FR3T1C1 <- getFrame(vidR3T1C1, 5)
FR3T1C2 <- getFrame(vidR3T1C2, 5)
FR3T2C1 <- getFrame(vidR3T2C1, 5)
FR3T2C2 <- getFrame(vidR3T2C2, 5)
FR3T3C1 <- getFrame(vidR3T3C1, 5)
FR3T3C2 <- getFrame(vidR3T3C2, 5)
FR3T4C1 <- getFrame(vidR3T4C1, 5)
FR3T4C2 <- getFrame(vidR3T4C2, 5)
FR3T5C1 <- getFrame(vidR3T5C1, 5)
FR3T5C2 <- getFrame(vidR3T5C2, 5)
FR3T6C1 <- getFrame(vidR3T6C1, 5)
FR3T6C2 <- getFrame(vidR3T6C2, 5)
library(videoplayR)
getpoint<-function(frame){
rto <- frame$dim[1]/frame$dim[2]
print(rto)
ht<-rto*6
quartz(width=6, height=ht)
imshow(frame)
a<-grid.locator(unit = "npc")
gcx<-as.numeric(a$x)
gcy<-as.numeric(a$y)
X <- ceiling(gcx*frame$dim[2])
Y <- ceiling(gcy*frame$dim[1])
imshow(frame)
points(x=c(X), y=c(Y), col="red", pch=19, cex = 0.1 )
coord<-c(X,Y)
output=coord
}
#Bring in Videos
for (i in 3) {
for (j in 1:6) {
for (k in 1:2) {
temp_name1 <- paste("vidR", i, "T", j, "C", k, sep = "")
video_name <- paste("Videos/R", i, "T", j, "C", k, ".mp4", sep = "")
assign(temp_name1, readVid(video_name))
}
}
}
#FRAMES
#Repetition 2 Frame 5
FR3T1C1 <- getFrame(vidR3T1C1, 5)
FR3T1C2 <- getFrame(vidR3T1C2, 5)
FR3T2C1 <- getFrame(vidR3T2C1, 5)
FR3T2C2 <- getFrame(vidR3T2C2, 5)
FR3T3C1 <- getFrame(vidR3T3C1, 5)
FR3T3C2 <- getFrame(vidR3T3C2, 5)
FR3T4C1 <- getFrame(vidR3T4C1, 5)
FR3T4C2 <- getFrame(vidR3T4C2, 5)
FR3T5C1 <- getFrame(vidR3T5C1, 5)
FR3T5C2 <- getFrame(vidR3T5C2, 5)
FR3T6C1 <- getFrame(vidR3T6C1, 5)
FR3T6C2 <- getFrame(vidR3T6C2, 5)
tester<-getpoint(FR3T1C1)
tester
tester<-getpoint(FR3T1C1)
tester
tester<-getpoint(FR3T1C1)
tester
tester<-getpoint(FR3T1C1)
tester
tester<-getpoint(FR3T1C1)
tester
tester<-getpoint(FR3T1C1)
tester
tester<-getpoint(FR3T1C1)
tester
tester<-getpoint(FR3T1C1)
tester
tester<-getpoint(FR3T1C1)
tester
tester<-getpoint(FR3T1C1)
tester
###Trial 1 Cam 1
Tray <- c(1,2,3,4,5,6)
Camera <- c(1,1,1,1,1,1)
Trial <- c(1,1,1,1,1,1)
Rep <- c(3,3,3,3,3,3)
cMXL <- c(150,316,482,150,330,)
cMXR <- c(316,482,662,330,494,662)
cMYT <- c(393,393,393,288,288,288)
cMYB <- c(228,228,288,65,65,65)
cTPX <- c(0,0,0,0,0,0)
cTPY <- c(0,0,0,0,0,0)
cBPX <- c(0,0,0,0,0,0)
cBPY <- c(0,0,0,0,0,0)
cLPX <- c(0,0,0,0,0,0)
cLPY <- c(0,0,0,0,0,0)
cRPX <- c(0,0,0,0,0,0)
cRPY <- c(0,0,0,0,0,0)
#c(,,,,,)
#c(0,0,0,0,0,0)
#create a coordinate table
CoTbR3T1C1<-data.frame(Tray, cMXL, cMXR, cMYT, cMYB, cBPX, cBPY, cTPX, cTPY,
cRPX, cRPY, cLPX, cLPY)
#rename so that colums can be found in function
names(CoTbR3T1C1)<-c("Tray", "MXL", "MXR", "MYT", "MYB", "BPX", "BPY", "TPX", "TPY",
"RPX", "RPY", "LPX", "LPY")
#write.csv(CoTbR3T1C1, "Coordinate_Tables/CoTbR3T1C1.csv")
visualize(frame = FR3T1C1, CD=CoTbR3T1C1)
Tray <- c(1,2,3,4,5,6)
Camera <- c(1,1,1,1,1,1)
Trial <- c(1,1,1,1,1,1)
Rep <- c(3,3,3,3,3,3)
cMXL <- c(150,316,482,150,330,)
cMXR <- c(316,482,662,330,494,662)
cMYT <- c(393,393,393,288,288,288)
cMYB <- c(228,228,288,65,65,65)
cTPX <- c(0,0,0,0,0,0)
cTPY <- c(0,0,0,0,0,0)
cBPX <- c(0,0,0,0,0,0)
cBPY <- c(0,0,0,0,0,0)
cLPX <- c(0,0,0,0,0,0)
cLPY <- c(0,0,0,0,0,0)
cRPX <- c(0,0,0,0,0,0)
cRPY <- c(0,0,0,0,0,0)
#c(,,,,,)
#c(0,0,0,0,0,0)
#create a coordinate table
CoTbR3T1C1<-data.frame(Tray, cMXL, cMXR, cMYT, cMYB, cBPX, cBPY, cTPX, cTPY,
cRPX, cRPY, cLPX, cLPY)
#rename so that colums can be found in function
names(CoTbR3T1C1)<-c("Tray", "MXL", "MXR", "MYT", "MYB", "BPX", "BPY", "TPX", "TPY",
"RPX", "RPY", "LPX", "LPY")
#write.csv(CoTbR3T1C1, "Coordinate_Tables/CoTbR3T1C1.csv")
visualize(frame = FR3T1C1, CD=CoTbR3T1C1)
visualize<-function(CD, frame){
imshow(frame)
for(i in 1:6){
lines(x = c(CD$MXR[i], CD$MXL[i]), y = c(CD$MYT[i], CD$MYT[i]), col=i)
lines(x = c(CD$MXR[i], CD$MXL[i]), y = c(CD$MYB[i], CD$MYB[i]),col=i)
lines(x = c(CD$MXR[i], CD$MXR[i]), y = c(CD$MYT[i], CD$MYB[i]),col=i)
lines(x = c(CD$MXL[i], CD$MXL[i]), y = c(CD$MYT[i], CD$MYB[i]),col=i)
lines(x = c(CD$TPX[i], CD$BPX[i]), y = c(CD$TPY[i], CD$BPY[i]),col=i)
lines(x = c(CD$LPX[i], CD$RPX[i]), y = c(CD$LPY[i], CD$RPY[i]),col=i)
}
}
Tray <- c(1,2,3,4,5,6)
Camera <- c(1,1,1,1,1,1)
Trial <- c(1,1,1,1,1,1)
Rep <- c(3,3,3,3,3,3)
cMXL <- c(150,316,482,150,330,)
cMXR <- c(316,482,662,330,494,662)
cMYT <- c(393,393,393,288,288,288)
cMYB <- c(228,228,288,65,65,65)
cTPX <- c(0,0,0,0,0,0)
cTPY <- c(0,0,0,0,0,0)
cBPX <- c(0,0,0,0,0,0)
cBPY <- c(0,0,0,0,0,0)
cLPX <- c(0,0,0,0,0,0)
cLPY <- c(0,0,0,0,0,0)
cRPX <- c(0,0,0,0,0,0)
cRPY <- c(0,0,0,0,0,0)
#c(,,,,,)
#c(0,0,0,0,0,0)
#create a coordinate table
CoTbR3T1C1<-data.frame(Tray, cMXL, cMXR, cMYT, cMYB, cBPX, cBPY, cTPX, cTPY,
cRPX, cRPY, cLPX, cLPY)
#rename so that colums can be found in function
names(CoTbR3T1C1)<-c("Tray", "MXL", "MXR", "MYT", "MYB", "BPX", "BPY", "TPX", "TPY",
"RPX", "RPY", "LPX", "LPY")
#write.csv(CoTbR3T1C1, "Coordinate_Tables/CoTbR3T1C1.csv")
visualize(frame = FR3T1C1, CD=CoTbR3T1C1)
Tray <- c(1,2,3,4,5,6)
Camera <- c(1,1,1,1,1,1)
Trial <- c(1,1,1,1,1,1)
Rep <- c(3,3,3,3,3,3)
cMXL <- c(150,316,482,150,330,494)
cMXR <- c(316,482,662,330,494,662)
cMYT <- c(393,393,393,288,288,288)
cMYB <- c(228,228,288,65,65,65)
cTPX <- c(0,0,0,0,0,0)
cTPY <- c(0,0,0,0,0,0)
cBPX <- c(0,0,0,0,0,0)
cBPY <- c(0,0,0,0,0,0)
cLPX <- c(0,0,0,0,0,0)
cLPY <- c(0,0,0,0,0,0)
cRPX <- c(0,0,0,0,0,0)
cRPY <- c(0,0,0,0,0,0)
#c(,,,,,)
CoTbR3T1C1<-data.frame(Tray, cMXL, cMXR, cMYT, cMYB, cBPX, cBPY, cTPX, cTPY,
cRPX, cRPY, cLPX, cLPY)
names(CoTbR3T1C1)<-c("Tray", "MXL", "MXR", "MYT", "MYB", "BPX", "BPY", "TPX", "TPY",
"RPX", "RPY", "LPX", "LPY")
visualize(frame = FR3T1C1, CD=CoTbR3T1C1)
tester<-getpoint(FR3T1C1)
tester
Tray <- c(1,2,3,4,5,6)
Camera <- c(1,1,1,1,1,1)
Trial <- c(1,1,1,1,1,1)
Rep <- c(3,3,3,3,3,3)
cMXL <- c(150,316,482,150,330,494)
cMXR <- c(316,482,662,330,494,662)
cMYT <- c(393,393,393,228,228,228)
cMYB <- c(228,228,288,65,65,65)
cTPX <- c(0,0,0,0,0,0)
cTPY <- c(0,0,0,0,0,0)
cBPX <- c(0,0,0,0,0,0)
cBPY <- c(0,0,0,0,0,0)
cLPX <- c(0,0,0,0,0,0)
cLPY <- c(0,0,0,0,0,0)
cRPX <- c(0,0,0,0,0,0)
cRPY <- c(0,0,0,0,0,0)
#c(,,,,,)
#c(0,0,0,0,0,0)
#create a coordinate table
CoTbR3T1C1<-data.frame(Tray, cMXL, cMXR, cMYT, cMYB, cBPX, cBPY, cTPX, cTPY,
cRPX, cRPY, cLPX, cLPY)
#rename so that colums can be found in function
names(CoTbR3T1C1)<-c("Tray", "MXL", "MXR", "MYT", "MYB", "BPX", "BPY", "TPX", "TPY",
"RPX", "RPY", "LPX", "LPY")
#write.csv(CoTbR3T1C1, "Coordinate_Tables/CoTbR3T1C1.csv")
visualize(frame = FR3T1C1, CD=CoTbR3T1C1)
###Trial 1 Cam 1
Tray <- c(1,2,3,4,5,6)
Camera <- c(1,1,1,1,1,1)
Trial <- c(1,1,1,1,1,1)
Rep <- c(3,3,3,3,3,3)
cMXL <- c(150,316,482,150,330,494)
cMXR <- c(316,482,662,330,494,662)
cMYT <- c(393,393,393,228,228,228)
cMYB <- c(228,228,228,65,65,65)
cTPX <- c(0,0,0,0,0,0)
cTPY <- c(0,0,0,0,0,0)
cBPX <- c(0,0,0,0,0,0)
cBPY <- c(0,0,0,0,0,0)
cLPX <- c(0,0,0,0,0,0)
cLPY <- c(0,0,0,0,0,0)
cRPX <- c(0,0,0,0,0,0)
cRPY <- c(0,0,0,0,0,0)
#c(,,,,,)
#c(0,0,0,0,0,0)
#create a coordinate table
CoTbR3T1C1<-data.frame(Tray, cMXL, cMXR, cMYT, cMYB, cBPX, cBPY, cTPX, cTPY,
cRPX, cRPY, cLPX, cLPY)
#rename so that colums can be found in function
names(CoTbR3T1C1)<-c("Tray", "MXL", "MXR", "MYT", "MYB", "BPX", "BPY", "TPX", "TPY",
"RPX", "RPY", "LPX", "LPY")
#write.csv(CoTbR3T1C1, "Coordinate_Tables/CoTbR3T1C1.csv")
visualize(frame = FR3T1C1, CD=CoTbR3T1C1)
