?install.R
library(installR)
library(install.R)
library(updateR)
library(update.R)
version()
a<-1
b<-2
a+b
install.packages("videoplayR")
??videoplayR
install.packages("OpenCV")
if (!require(devtools)) {
install.packages("devtools")
}
devtools::install_github("swarm-lab/videoplayR")
library(videoplayR)
library(devtools)
devtools::install_github("swarm-lab/videoplayR")
devtools::install_github("swarm-lab/videoplayR")
devtools::install_github("swarm-lab/videoplayR")
install.packages("lippicv")
install.packages("-lippicv")
install.packages("videoplayR")
if (!require(devtools)) {
install.packages("devtools")
}
devtools::install_github("swarm-lab/videoplayR")
library(videoplayR)
devtools::install_github("swarm-lab/videoplayR")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("swarm-lab/videoplayR")
stream1
stream0
library(videoplayR)
library(dplyr)
library(clue)
library(shiny)
library(splancs)
setwd("/Users/mzlevy/Laboratory/Inesfly_Paint_Bed_Bug_Trial/Pesticide_Detection")
library(videoplayR)
library(dplyr)
library(clue)
library(shiny)
library(splancs)
R1T1C1<- readVid("Trial1Cam1.mp4")
R1T1C2<- readVid("Trial2Cam2.mp4")
#Trial Two
R1T2C1<- readVid("Trial2Cam1.mp4")
R1T2C2<- readVid("Trial2Cam2.mp4")
#Trial Three
R1T3C1<- readVid("Trial3Cam1.mp4")
R1T3C2<- readVid("Trial3Cam2.mp4")
#Trial Four
R1T4C1<- readVid("Trial4Cam1.mp4")
R1T4C2<- readVid("Trial4Cam2.mp4")
#Trial Five
R1T5C1<- readVid("Trial5Cam1.mp4")
R1T5C2<- readVid("Trial5Cam2.mp4")
#Trial Six
R1T6C1<- readVid("Trial6Cam1.mp4")
R1T6C2<- readVid("Trial2Cam2.mp4")
R1T6C2<- readVid("Trial6Cam2.mp4")
R1T1C2<- readVid("Trial1Cam2.mp4")
R1T1C2
names(R1T1C2)
R1T1C2$length
1*60*30
mbg <- backgrounder(marchpilot, n = 100, method = "mean", color = FALSE)
#create a blank data frame for loop output
marbugpos <- data.frame()
###Each quadrant will have to build upon
#Quadrant 2
mmat <- matrix(0, nrow = mbg$dim[1], ncol = mbg$dim[2])
#sadly, for each dish we need to define the area by hand.
mmat[150:268, 370:480] <- 1
marchpilot <- readVid("MarchPilot.mp4")
mbg <- backgrounder(marchpilot, n = 100, method = "mean", color = FALSE)
#create a blank data frame for loop output
marbugpos <- data.frame()
###Each quadrant will have to build upon
#Quadrant 2
mmat <- matrix(0, nrow = mbg$dim[1], ncol = mbg$dim[2])
#sadly, for each dish we need to define the area by hand.
mmat[150:268, 370:480] <- 1
pmaskm <- (r2img(mmat))
imshow(pmaskm)
mbg <- backgrounder(marchpilot, n = 100, method = "mean", color = FALSE)
mbg
mmat[1:268, 370:480] <- 1
#go through matrix and ask if it is in or out of the polygon
pmaskm <- (r2img(mmat))
#now bring the mask and the background together
nbgm<-blend(mbg, pmaskm, "*")
imshow(nbgm)
mmat[1:268, 0:480] <- 1
#go through matrix and ask if it is in or out of the polygon
pmaskm <- (r2img(mmat))
#now bring the mask and the background together
nbgm<-blend(mbg, pmaskm, "*")
imshow(nbgm)
