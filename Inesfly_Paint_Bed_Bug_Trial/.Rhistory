sqrt(((1-7)2+(1-7)2+(2-7)2+(5-7)2+(6-7)2+(8-7)2+(8-7)2+(9-7)2+(9-7)2+(9-7)2+(12-7)2+(15-7)2)/(11-1)
sqrt(((1-7)^2+(1-7)^2+(2-7)^2+(5-7)^2+(6-7)^2+(8-7)^2+(8-7)^2+(9-7)^2+(9-7)^2+(9-7)^2+(12-7)^2+(15-7)^2)/(11-1))
sqrt(((1-7)2+(1-7)2+(2-7)2+(5-7)2+(6-7)2+(8-7)2+(8-7)2+(9-7)2+(9-7)2+(9-7)2+(12-7)2+(15-7)2)/(11-1)
sqrt(((1-7)^2+(1-7)^2+(2-7)^2+(5-7)^2+(6-7)^2+(8-7)^2+(8-7)^2+(9-7)^2+(9-7)^2+(9-7)^2+(12-7)^2+(15-7)^2)/(11-1))
4.53/sqrt(11)
sqrt(((1-7)^2+(1-7)^2+(2-7)^2+(5-7)^2+(6-7)^2+(8-7)^2+(8-7)^2+(9-7)^2+(9-7)^2+(9-7)^2+(12-7)^2+(15-7)^2)/(11-1))
std<-qrt(((1-7)^2+(1-7)^2+(2-7)^2+(5-7)^2+(6-7)^2+(8-7)^2+(8-7)^2+(9-7)^2+(9-7)^2+(9-7)^2+(12-7)^2+(15-7)^2)/(11-1))
std<-sqrt(((1-7)^2+(1-7)^2+(2-7)^2+(5-7)^2+(6-7)^2+(8-7)^2+(8-7)^2+(9-7)^2+(9-7)^2+(9-7)^2+(12-7)^2+(15-7)^2)/(11-1))
std/sqrt(11)
0.841-0.159
a<-129-150
a/15
1-.919
(132-150)/15
(162-150)/15
.885-.212
(175-300)/50
(425-300)/50
.997-.4211
.997-.421
mean(1+2+3+4+5+6+7+8+9)
mean(c(1,2,3,4,5,6,7,8,9)
)
=(4.25-3.80)/ sqrt((0.4^2+0.5^2)/16))
(4.25-3.80)/ sqrt((0.4^2+0.5^2)/16))
(4.25-3.80)/sqrt((0.4^2+0.5^2)/16))
(4.25-3.80)/sqrt((0.4^2+0.5^2)/16)
sqrt((0.4^2+0.5^2)/16))
sqrt((0.4^2+0.5^2)/16)
e
exp(1)
e<-exp(1)
e^-.69
e^2.48
0.8-3.6
e^2.8
e^-2.8
(0.8*5)-3.6
e^0.4
0.06/(1.06)
e^2.8
e^-2.8
0.061/1.061
1.15/2.15
1.5/2.5
e
log(1)
log(0)
log(2)
ln(1)
exp(1)
1<-exp(1)
e<-exp(1)
e
e^1.2
4*1.2
4.8-7
exp(-2.2)
exp(2.6)
exp(0.9)
e^1.1
e^(0.9 + 0.45)
e^(0.9 - 0.45)
e^2.6
odd<-e^2.6
odd(odd+1)
odd
odd/(odd+1)
e^(0.9+(1.96*.45))
e^(0.9-(1.96*.45))
469/500
capture.output(utils:::print.bibentry(citation("sample"), style = "Bibtex"),
file = "samplefunction.bib")
sample(12:1)
?sample
11*4*9
12*4*9
library(survival)
###Create citations in r for mendeley
capture.output(utils:::print.bibentry(citation("survival"), style = "Bibtex"),
file = "endnote_import_survival.bib")
getwd()
library(videoplayR)
library(dplyr)
library(clue)
library(shiny)
library(splancs)
library(grid)
library(tictoc)
library(reshape2)
library(vioplot)
library(scales)
library(tictoc)
library(survival)
setwd("C:/Users/dtracy198/Documents/GitHub/Laboratory/Inesfly_Paint_Bed_Bug_Trial")
view(treatmentsum)
#load packages
library(reshape) #Used to change data between short and long formats.
library(survival) #for cox proportional hazaard
library(tables)
library(doBy) #use summaryBy function
library(ggplot2)
library(plyr)
library(stargazer)
##set up the working directory
#PC for Dylan
setwd("C:/Users/dtracy198/Documents/GitHub/Laboratory/Inesfly_Paint_Bed_Bug_Trial")
#MAC for office
install.packages( c("reshape","survival","tables", "doBy", "ggplot2", "plyr",
"stargazer", "interval" ))
#source("https://bioconductor.org/biocLite.R")
#biocLite("Icens")
#http://www.bioconductor.org/packages/release/bioc/html/Icens.html
#load packages
library(reshape) #Used to change data between short and long formats.
library(survival) #for cox proportional hazaard
library(tables)
library(doBy) #use summaryBy function
library(ggplot2)
library(plyr)
library(stargazer)
install.packages( c("reshape","survival","tables", "doBy", "ggplot2", "plyr",
"stargazer", "interval" ))
#source("https://bioconductor.org/biocLite.R")
#biocLite("Icens")
#http://www.bioconductor.org/packages/release/bioc/html/Icens.html
#load packages
library(reshape) #Used to change data between short and long formats.
library(survival) #for cox proportional hazaard
library(tables)
library(doBy) #use summaryBy function
library(ggplot2)
library(plyr)
library(stargazer)
install.packages(c("reshape", "survival", "tables", "doBy", "ggplot2", "plyr", "stargazer", "interval"))
setwd("C:/Users/dtracy198/Documents/GitHub/Laboratory/Inesfly_Paint_Bed_Bug_Trial")
#Data For Full Study: Individual Data for 1 Month
DataMelt <- read.csv("DATA/DataMelt.csv")
#bring in paint data
PAINTDIST<- read.csv("DATA/InesflyPaintDistribution.csv")
#bring in temperature data
TEMPHUM<- read.csv("DATA/InesflyTempHum.csv")
###=============================================
ummaryBy to see the proportion of bugs at each and each treatment
#First make treatment a factor variable.
DataMelt$treatment <- as.factor(DataMelt$treatment)
#The use sammary by function to reshape the data so there is one row per
#observation (1 insect per day observed)
treatmentsum<-summaryBy(alive+dead+knockdown+unviable+living ~ treatment + day
+ paint + days.after.paint + exp.time,
data = DataMelt, FUN=sum, na.rm=TRUE,
keep.names=TRUE)
#Then create total colum that should be one if any observation is recorded.
treatmentsum$total <- (treatmentsum$alive + treatmentsum$dead
+ treatmentsum$knockdown)
###Remove rows with 0 in total (no recorded observation)
###All bugs were alive when exposed to pesticide.
#add/replace a column that shows everything at alive at day 0, before treatment
treatments <- unique(treatmentsum$treatment)
zeros <- which(treatmentsum$day == 0)
treatmentsum<- treatmentsum[-zeros,]
DataMelt$treatment <- as.factor(DataMelt$treatment)
#The use sammary by function to reshape the data so there is one row per
#observation (1 insect per day observed)
treatmentsum<-summaryBy(alive+dead+knockdown+unviable+living ~ treatment + day
+ paint + days.after.paint + exp.time,
data = DataMelt, FUN=sum, na.rm=TRUE,
keep.names=TRUE)
#Then create total colum that should be one if any observation is recorded.
treatmentsum$total <- (treatmentsum$alive + treatmentsum$dead
+ treatmentsum$knockdown)
library(doBy) #use summaryBy function
DataMelt$treatment <- as.factor(DataMelt$treatment)
#The use sammary by function to reshape the data so there is one row per
#observation (1 insect per day observed)
treatmentsum<-summaryBy(alive+dead+knockdown+unviable+living ~ treatment + day
+ paint + days.after.paint + exp.time,
data = DataMelt, FUN=sum, na.rm=TRUE,
keep.names=TRUE)
#Then create total colum that should be one if any observation is recorded.
treatmentsum$total <- (treatmentsum$alive + treatmentsum$dead
+ treatmentsum$knockdown)
library(reshape) #Used to change data between short and long formats.
library(survival) #for cox proportional hazaard
library(tables)
library(doBy) #use summaryBy function
library(ggplot2)
library(plyr)
library(stargazer)
install.packages( c("reshape","survival","tables", "doBy", "ggplot2", "plyr",
"stargazer", "interval" ))
install.packages(c("reshape", "survival", "tables", "doBy", "ggplot2", "plyr", "stargazer", "interval"))
library(reshape) #Used to change data between short and long formats.
library(survival) #for cox proportional hazaard
library(tables)
library(doBy) #use summaryBy function
library(ggplot2)
library(plyr)
library(stargazer)
setwd("C:/Users/dtracy198/Documents/GitHub/Laboratory/Inesfly_Paint_Bed_Bug_Trial")
#Data For Full Study: Individual Data for 1 Month
DataMelt <- read.csv("DATA/DataMelt.csv")
#bring in paint data
PAINTDIST<- read.csv("DATA/InesflyPaintDistribution.csv")
#bring in temperature data
TEMPHUM<- read.csv("DATA/InesflyTempHum.csv")
DataMelt$treatment <- as.factor(DataMelt$treatment)
#The use sammary by function to reshape the data so there is one row per
#observation (1 insect per day observed)
treatmentsum<-summaryBy(alive+dead+knockdown+unviable+living ~ treatment + day
+ paint + days.after.paint + exp.time,
data = DataMelt, FUN=sum, na.rm=TRUE,
keep.names=TRUE)
#Then create total colum that should be one if any observation is recorded.
treatmentsum$total <- (treatmentsum$alive + treatmentsum$dead
+ treatmentsum$knockdown)
View(reatmentsum)
View(treatmentsum)
?survdiff
