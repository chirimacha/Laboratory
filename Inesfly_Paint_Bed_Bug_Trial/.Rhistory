for(i in 3:1801){
MeanSpeedPest[i] <- mean(csTest[filter, i], na.rm = T)
MeanSpeedCont[i] <- mean(csTest[ConFilt, i], na.rm = T)
}
if(num == 1){
d <- "day"
} else {d <- "days"}
mn.tile.t <- paste("Exposed insects", num, d, "after initial painting")
mn.tile.c <- paste("Control insects", num, d, " after initial painting")
#pdf("InstSpeed_3weeks")
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.t, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600))))
for(i in 1:length(filter)){
lines(x = 2:1800, y = csTest[ filter[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedPest[3:1801],
col = 1, lty = 1)
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.c, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600))))
for(i in 1:length(ConFilt)){
lines(x = 2:1800, y = csTest[ ConFilt[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedCont[3:1801],
col = 1, lty = 1)
}
PlotSpeed <- function(csTest, num){
filter <- which(csTest[,2] == 1)
ConFilt <- which(csTest[,2] == 0)
MeanSpeedPest <- csTest[1,]
MeanSpeedCont <- csTest[1,]
MeanSpeedPest[1] <- "MeanSpeedPest"
MeanSpeedCont[1] <- "MeanSpeedCont"
MeanSpeedPest[2] <- 1
MeanSpeedCont[2] <- 0
for(i in 3:1801){
MeanSpeedPest[i] <- mean(csTest[filter, i], na.rm = T)
MeanSpeedCont[i] <- mean(csTest[ConFilt, i], na.rm = T)
}
if(num == 1){
d <- "day"
} else {d <- "days"}
mn.tile.t <- paste("Exposed insects", num, d, "after initial painting")
mn.tile.c <- paste("Control insects", num, d, " after initial painting")
#pdf("InstSpeed_3weeks")
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.t, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
for(i in 1:length(filter)){
lines(x = 2:1800, y = csTest[ filter[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedPest[3:1801],
col = 1, lty = 1)
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.c, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
for(i in 1:length(ConFilt)){
lines(x = 2:1800, y = csTest[ ConFilt[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedCont[3:1801],
col = 1, lty = 1)
}
par(mfrow = c(3,2))
> PlotSpeed(csCVR4, 1)
> PlotSpeed(csCVR2, 90)
> PlotSpeed(csCVR3, 180)
> mtext(paste("Speed of Insects Between Each Frame", sep=" "), side = 3, line = -1.5,
+       outer = TRUE, cex = 1.2)
PlotSpeed <- function(csTest, num){
filter <- which(csTest[,2] == 1)
ConFilt <- which(csTest[,2] == 0)
MeanSpeedPest <- csTest[1,]
MeanSpeedCont <- csTest[1,]
MeanSpeedPest[1] <- "MeanSpeedPest"
MeanSpeedCont[1] <- "MeanSpeedCont"
MeanSpeedPest[2] <- 1
MeanSpeedCont[2] <- 0
for(i in 3:1801){
MeanSpeedPest[i] <- mean(csTest[filter, i], na.rm = T)
MeanSpeedCont[i] <- mean(csTest[ConFilt, i], na.rm = T)
}
if(num == 1){
d <- "day"
} else {d <- "days"}
mn.tile.t <- paste("Exposed insects", num, d, "after initial painting")
mn.tile.c <- paste("Control insects", num, d, " after initial painting")
#pdf("InstSpeed_3weeks")
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.t, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
for(i in 1:length(filter)){
lines(x = 2:1800, y = csTest[ filter[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedPest[3:1801],
col = 1, lty = 1)
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.c, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
for(i in 1:length(ConFilt)){
lines(x = 2:1800, y = csTest[ ConFilt[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedCont[3:1801],
col = 1, lty = 1)
}
#pdf(file = "SpeedPlots.pdf")
par(mfrow = c(3,2))
PlotSpeed(csCVR4, 1)
PlotSpeed(csCVR2, 90)
PlotSpeed(csCVR3, 180)
mtext(paste("Speed of Insects Between Each Frame", sep=" "), side = 3, line = -1.5,
+       outer = TRUE, cex = 1.2)
#dev.off()
par(mfrow = c(3,2))
PlotSpeed(csCVR4, 1)
PlotSpeed(csCVR2, 90)
PlotSpeed(csCVR3, 180)
mtext(paste("Speed of Insects Between Each Frame", sep = " "), side = 3, line = -1.5,
outer = TRUE, cex = 1.2)
par(mfrow = c(3,2))
PlotSpeed(csCVR4, 1)
PlotSpeed(csCVR2, 3)
PlotSpeed(csCVR3, 12)
mtext(paste("Speed of Insects Between Each Frame", sep = " "), side = 3, line = -1.5,
outer = TRUE, cex = 1.2)
par(mfrow = c(3,2))
PlotSpeed(csCVR4, 1)
PlotSpeed(csCVR2, 3)
PlotSpeed(csCVR3, 12)
mtext(paste("Speed of Insects Between Each Frame", sep = " "), side = 3, line = -1.5,
outer = TRUE, cex = 1.2)
PlotSpeed <- function(csTest, num){
filter <- which(csTest[,2] == 1)
ConFilt <- which(csTest[,2] == 0)
MeanSpeedPest <- csTest[1,]
MeanSpeedCont <- csTest[1,]
MeanSpeedPest[1] <- "MeanSpeedPest"
MeanSpeedCont[1] <- "MeanSpeedCont"
MeanSpeedPest[2] <- 1
MeanSpeedCont[2] <- 0
for(i in 3:1801){
MeanSpeedPest[i] <- mean(csTest[filter, i], na.rm = T)
MeanSpeedCont[i] <- mean(csTest[ConFilt, i], na.rm = T)
}
if(num == 1){
d <- "day"
} else {d <- "weeks"}
mn.tile.t <- paste("Exposed insects", num, d, "after initial painting")
mn.tile.c <- paste("Control insects", num, d, " after initial painting")
#pdf("InstSpeed_3weeks")
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.t, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
for(i in 1:length(filter)){
lines(x = 2:1800, y = csTest[ filter[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedPest[3:1801],
col = 1, lty = 1)
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.c, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
for(i in 1:length(ConFilt)){
lines(x = 2:1800, y = csTest[ ConFilt[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedCont[3:1801],
col = 1, lty = 1)
}
jpeg("TABLES_GRAPHS/SpeedPlots.pdf", height = 9, width = 6, res = 300,
units = "in")
par(mfrow = c(3,2))
PlotSpeed(csCVR4, 1)
PlotSpeed(csCVR2, 3)
PlotSpeed(csCVR3, 12)
mtext(paste("Speed of Insects Between Each Observation", sep = " "), side = 3, line = -1.5,
outer = TRUE, cex = 1.2)
dev.off()
jpeg("TABLES_GRAPHS/SpeedPlots.jpeg", height = 9, width = 6, res = 300,
units = "in")
par(mfrow = c(3,2))
PlotSpeed(csCVR4, 1)
PlotSpeed(csCVR2, 3)
PlotSpeed(csCVR3, 12)
mtext(paste("Speed of Insects Between Each Observation", sep = " "), side = 3, line = -1.5,
outer = TRUE, cex = 1.2)
dev.off()
jpeg("TABLES_GRAPHS/SpeedPlots.jpeg", height = 9, width = 6, res = 300,
units = "in")
par(mfrow = c(3,2), oma = c(1,1,2,1))
PlotSpeed(csCVR4, 1)
PlotSpeed(csCVR2, 3)
PlotSpeed(csCVR3, 12)
mtext(paste("Speed of Insects Between Each Observation", sep = " "), side = 3, line = 0,
outer = TRUE, cex = 1.2)
dev.off()
par()
PlotSpeed <- function(csTest, num){
filter <- which(csTest[,2] == 1)
ConFilt <- which(csTest[,2] == 0)
MeanSpeedPest <- csTest[1,]
MeanSpeedCont <- csTest[1,]
MeanSpeedPest[1] <- "MeanSpeedPest"
MeanSpeedCont[1] <- "MeanSpeedCont"
MeanSpeedPest[2] <- 1
MeanSpeedCont[2] <- 0
for(i in 3:1801){
MeanSpeedPest[i] <- mean(csTest[filter, i], na.rm = T)
MeanSpeedCont[i] <- mean(csTest[ConFilt, i], na.rm = T)
}
if(num == 1){
d <- "day"
} else {d <- "weeks"}
mn.tile.t <- paste("Exposed insects", num, d, "after painting")
mn.tile.c <- paste("Control insects", num, d, "after painting")
#pdf("InstSpeed_3weeks")
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.t, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
for(i in 1:length(filter)){
lines(x = 2:1800, y = csTest[ filter[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedPest[3:1801],
col = 1, lty = 1)
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.c, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
for(i in 1:length(ConFilt)){
lines(x = 2:1800, y = csTest[ ConFilt[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedCont[3:1801],
col = 1, lty = 1)
}
#pdf(file = "SpeedPlots.pdf")
#pdf("TABLES_GRAPHS/SpeedPlots.pdf", height = 9, width = 6)
jpeg("TABLES_GRAPHS/SpeedPlots.jpeg", height = 9, width = 6, res = 300,
units = "in")
par(mfrow = c(3,2), oma = c(1,1,2,1), mar =)
PlotSpeed(csCVR4, 1)
PlotSpeed(csCVR2, 3)
PlotSpeed(csCVR3, 12)
mtext(paste("Speed of Insects Between Each Observation", sep = " "), side = 3, line = 0,
outer = TRUE, cex = 1.2)
dev.off()
jpeg("TABLES_GRAPHS/SpeedPlots.jpeg", height = 9, width = 6, res = 300,
units = "in")
par(mfrow = c(3,2), oma = c(1,1,2,1))
PlotSpeed(csCVR4, 1)
PlotSpeed(csCVR2, 3)
PlotSpeed(csCVR3, 12)
mtext(paste("Speed of Insects Between Each Observation", sep = " "), side = 3, line = 0,
outer = TRUE, cex = 1.2)
dev.off()
PlotSpeed <- function(csTest, num){
filter <- which(csTest[,2] == 1)
ConFilt <- which(csTest[,2] == 0)
MeanSpeedPest <- csTest[1,]
MeanSpeedCont <- csTest[1,]
MeanSpeedPest[1] <- "MeanSpeedPest"
MeanSpeedCont[1] <- "MeanSpeedCont"
MeanSpeedPest[2] <- 1
MeanSpeedCont[2] <- 0
for(i in 3:1801){
MeanSpeedPest[i] <- mean(csTest[filter, i], na.rm = T)
MeanSpeedCont[i] <- mean(csTest[ConFilt, i], na.rm = T)
}
if(num == 1){
d <- "day"
} else {d <- "weeks"}
mn.tile.t <- paste(num, d, "Exposed")
mn.tile.c <- paste(num, d, "Control")
#pdf("InstSpeed_3weeks")
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.t, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
for(i in 1:length(filter)){
lines(x = 2:1800, y = csTest[ filter[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedPest[3:1801],
col = 1, lty = 1)
plot(x = c(1, 1800), y = c(0, 40), type = "n",
main = mn.tile.c, ylab = "Speed (pixels/sec)",
xlab = "Time (seconds)", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:4 * 10), las = 2,
labels = as.character(c(0:4 * 10)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
for(i in 1:length(ConFilt)){
lines(x = 2:1800, y = csTest[ ConFilt[i], 3:1801],
col = alpha(i, 0.5), lty = 3)
}
lines(x = 2:1800, y = MeanSpeedCont[3:1801],
col = 1, lty = 1)
}
#pdf(file = "SpeedPlots.pdf")
#pdf("TABLES_GRAPHS/SpeedPlots.pdf", height = 9, width = 6)
jpeg("TABLES_GRAPHS/SpeedPlots.jpeg", height = 9, width = 6, res = 300,
units = "in")
par(mfrow = c(3,2), oma = c(1,1,2,1))
PlotSpeed(csCVR4, 1)
PlotSpeed(csCVR2, 3)
PlotSpeed(csCVR3, 12)
mtext(paste("Speed of Insects Between Each Observation", sep = " "), side = 3, line = 0,
outer = TRUE, cex = 1.2)
dev.off()
jpeg("TABLES_GRAPHS/PropBugTreatmentPerSec.jpeg", height = 9, width= 3,
units = "in", res = 600)
par(mfrow = c(3, 1), oma = c(1,1,2,1))
plot(x = c(0,1800), y = c(0.15, 0.85), type ="n", col = 0, xlab = "Time (seconds)",
ylab = "Proportion of Bugs", main = "1 Day", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
points(x = 1:1800, y = af.CompVidRep4, pch = 20, col = "red")
points(x = 1:1800, y = af.control.CompVidRep4, pch = 20)
abline(h = 0.5, lty = 2)
plot(x = c(0,1800), y = c(0.15, 0.85), type ="n", col = 0, xlab = "Time (seconds)",
ylab = "Proportion of Bugs", main = "3 Weeks", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
points(x = 1:1800, y = af.CompVidRep2, pch = 20, col = "red")
points(x = 1:1800, y = af.control.CompVidRep2, pch = 20)
abline(h = 0.5, lty = 2)
#dev.off()
### CompVidRep3 (12 weeks post painting)
#Instantaneous proportion
ttl <- c("12 Weeks")
#pdf("InstPropCvT_12Weeks.pdf")
plot(x = c(0,1800), y = c(0.15, 0.85), type ="n", col = 0, xlab = "Time (seconds)",
ylab = "Proportion of Bugs", main = ttl, xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
points(x = 1:1800, y = af.CompVidRep3, pch = 20, col = "red")
points(x = 1:1800, y = af.control.CompVidRep3, pch = 20)
abline(h = 0.5, lty = 2)
mtext("Proportion of Bugs on Treatment", side = 3,
line = 0.3, outer = TRUE, cex = 1)
mtext("Quadrants Every Second", side = 3,
line = -1, outer = TRUE, cex = 1)
dev.off()
jpeg("TABLES_GRAPHS/PropBugTreatmentPerSec.jpeg", height = 9, width= 3,
units = "in", res = 1200)
par(mfrow = c(3, 1), oma = c(1,1,2,1))
plot(x = c(0,1800), y = c(0.15, 0.85), type ="n", col = 0, xlab = "Time (seconds)",
ylab = "Proportion of Bugs", main = "1 Day", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
points(x = 1:1800, y = af.CompVidRep4, pch = 20, col = "red")
points(x = 1:1800, y = af.control.CompVidRep4, pch = 20)
abline(h = 0.5, lty = 2)
plot(x = c(0,1800), y = c(0.15, 0.85), type ="n", col = 0, xlab = "Time (seconds)",
ylab = "Proportion of Bugs", main = "3 Weeks", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
points(x = 1:1800, y = af.CompVidRep2, pch = 20, col = "red")
points(x = 1:1800, y = af.control.CompVidRep2, pch = 20)
abline(h = 0.5, lty = 2)
#dev.off()
### CompVidRep3 (12 weeks post painting)
#Instantaneous proportion
ttl <- c("12 Weeks")
#pdf("InstPropCvT_12Weeks.pdf")
plot(x = c(0,1800), y = c(0.15, 0.85), type ="n", col = 0, xlab = "Time (seconds)",
ylab = "Proportion of Bugs", main = ttl, xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
points(x = 1:1800, y = af.CompVidRep3, pch = 20, col = "red")
points(x = 1:1800, y = af.control.CompVidRep3, pch = 20)
abline(h = 0.5, lty = 2)
mtext("Proportion of Bugs on Treatment", side = 3,
line = 0.3, outer = TRUE, cex = 1)
mtext("Quadrants Every Second", side = 3,
line = -1, outer = TRUE, cex = 1)
dev.off()
jpeg("TABLES_GRAPHS/PropBugTreatmentPerSec.jpeg", height = 9, width= 3,
units = "in", res = 800)
par(mfrow = c(3, 1), oma = c(1,1,2,1))
plot(x = c(0,1800), y = c(0.15, 0.85), type ="n", col = 0, xlab = "Time (seconds)",
ylab = "Proportion of Bugs", main = "1 Day", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
points(x = 1:1800, y = af.CompVidRep4, pch = 20, col = "red")
points(x = 1:1800, y = af.control.CompVidRep4, pch = 20)
abline(h = 0.5, lty = 2)
plot(x = c(0,1800), y = c(0.15, 0.85), type ="n", col = 0, xlab = "Time (seconds)",
ylab = "Proportion of Bugs", main = "3 Weeks", xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
points(x = 1:1800, y = af.CompVidRep2, pch = 20, col = "red")
points(x = 1:1800, y = af.control.CompVidRep2, pch = 20)
abline(h = 0.5, lty = 2)
#dev.off()
### CompVidRep3 (12 weeks post painting)
#Instantaneous proportion
ttl <- c("12 Weeks")
#pdf("InstPropCvT_12Weeks.pdf")
plot(x = c(0,1800), y = c(0.15, 0.85), type ="n", col = 0, xlab = "Time (seconds)",
ylab = "Proportion of Bugs", main = ttl, xaxt = 'n', yaxt = 'n')
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = c(0:3 * 600), labels = as.character(c(0:3 * 600)))
points(x = 1:1800, y = af.CompVidRep3, pch = 20, col = "red")
points(x = 1:1800, y = af.control.CompVidRep3, pch = 20)
abline(h = 0.5, lty = 2)
mtext("Proportion of Bugs on Treatment", side = 3,
line = 0.3, outer = TRUE, cex = 1)
mtext("Quadrants Every Second", side = 3,
line = -1, outer = TRUE, cex = 1)
dev.off()
par(mfrow = c(3,2), oma = c(1,1,2,1))
PlotSpeed(csCVR4, 1)
PlotSpeed(csCVR2, 3)
PlotSpeed(csCVR3, 12)
mtext(paste("Speed of Insects Between Each Observation", sep = " "), side = 3, line = 0,
outer = TRUE, cex = 1.2)
for(i in 2:2) {
ii <- which(CompiledData$rep==i)
ti <- which(TrayPlace$Repetition==i)
for(j in 1:6) {
ji <- which(CompiledData$trial==j)
ij<-intersect(ii, ji)
tj<- which(TrayPlace$Trial==j)
tij<-intersect(ti, tj)
for(k in 1:2){
ki <- which(CompiledData$camera==k)
ijk<-intersect(ij, ki)
tk <- which(TrayPlace$camera == k)
tijk<-intersect(tij, tk)
temp_name <- paste("Trackplots/trackplot", i,"-", j,"-", k, ".pdf", sep="")
#pdf(file=temp_name)
Ctname<-paste("CoTbR", i, "T", j, "C", k, sep = "")
temp_plot_name<-paste("R", i, "T", j, "C", k, sep = "")
plot(x=CompiledData$x, y=CompiledData$y, type="n", main= temp_plot_name)
points(x = ( (1:length(sf:fl)/3)+175), y = (rep(((get(Ctname)$TPY[1])+10), times = length(sf:fl))),
col = alpha(topo.colors(n=length(sf:fl)),0.2))
for(l in 1:6){
li<-which(CompiledData$trayn==l)
ijkl<-intersect(ijk, li)
tl<-which(TrayPlace$CamPos==l)
tijkl<-intersect(tijk, tl)
lines(x=c(get(Ctname)$BPX[l],get(Ctname)$TPX[l]), y=c(get(Ctname)$BPY[l],get(Ctname)$TPY[l]), col=6)
lines(x=c(get(Ctname)$RPX[l],get(Ctname)$LPX[l]), y=c(get(Ctname)$RPY[l],get(Ctname)$LPY[l]), col=6)
tpos<-0
if (TrayPlace$Orientation[tijkl] == 1) {tpos <- as.character("[1,3]")}
if (TrayPlace$Orientation[tijkl] == 2) {tpos <- as.character("[2,4]")}
if (TrayPlace$Orientation[tijkl] == 3) {tpos <- as.character("[1,3]")}
if (TrayPlace$Orientation[tijkl] == 4) {tpos <- as.character("[2,4]")}
tpossec<-tpos
tpos<-as.character(tpos)
tpossec<-as.character(tpossec)
text(x=(get(Ctname)$BPX[l]), y=(get(Ctname)$BPY[l]-15), labels= tpos)
for(f in sf:fl){
#tic()
fi <- which(CompiledData$frame==f)
fijkl<-intersect(fi, ijkl)
points(x = CompiledData$x[fijkl], y = CompiledData$y[fijkl],
col = alpha(topo.colors(n=(fl-sf))[f],0.2),
pch=pointtype[CompiledData$PTray[fijkl]+1])
}
}
#dev.off()
}
}
}
