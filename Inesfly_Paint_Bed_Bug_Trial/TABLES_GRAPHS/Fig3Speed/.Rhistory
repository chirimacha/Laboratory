labels = as.character(c(0:5 / 5)))
axis( 1, at = udays, labels = udays)
quads.tmp <- unique(quadsum$TreatQuad[tsde])
for(i in 1:length(quads.tmp)){
tr <- which(quadsum$TreatQuad == quads.tmp[i])
temp <- quadsum[tr,]
points(y = temp$prop.liv, x = temp$day, pch = temp$pch[1],
col = temp$paint[1])
lines(y = temp$prop.liv, x = temp$day, pch = temp$pch[1],
col = temp$paint[1])
}
}
}
#title
mtext("Proportion of Alive Bugs", side = 3, line = 0, outer = TRUE, cex = 1.2)
#Top Headings
mtext("1 Day After Painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.18)
mtext("90 days after painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.50)
mtext("180 days after painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.84)
#side headings
mtext("Exposed 1 Hour", side = 2, line = -0.2, outer = T, at = 0.938, adj = 1, cex = 0.8)
mtext("Exposed 3 Hours", side = 2, line = -0.2, outer =T, at = 0.69, adj = 1, cex = 0.8)
mtext("Exposed 6 Hours", side = 2, line = -0.2, outer = T, at = 0.4392, adj = 1, cex = 0.8)
mtext("Exposed 24 Hours", side = 2, line = -0.2, outer = T, at = 0.198, adj = 1, cex = 0.8)
#turn off pdf or jpeg
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n")
legend(x = "bottom", legend = c("Control","5A-IGR", "Chlorfenapyr"), col = c(1,2,3),
pch = c(20, 15, 17), lty = 1, cex = 2, horiz= TRUE)
dap <- unique(quadsum$days.after.paint)
dap <- dap[order(dap)]
ext <- unique(quadsum$exp.time)
par(mfrow = c(4,3), oma = c(1,1,2,1)) #4 across 3
for(k in 1:length(ext)){
tsdap <- which(quadsum$exp.time == ext[k])
for(j in 1:length(dap)){
tsext <- which(quadsum$days.after.paint == dap[j])
tsde <- intersect(tsdap, tsext)
#d <- "days"
#if(dap[j] == 1){d <- "day"}
plot(y = quadsum$prop.alive, x = quadsum$day,
pch = quadsum$pch, col = quadsum$paint,
type = "n", #main = as.character(paste("J =", ext[k], "hrs:", "K =", dap[j],
#            d, sep = " ")),
ylab = "Proportion Alive", xlab = "Days Since Exposure",
xaxt = 'n', yaxt = 'n')
udays <- c( 0, 7, 14, 21, 28)
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = udays, labels = udays)
quads.tmp <- unique(quadsum$TreatQuad[tsde])
for(i in 1:length(quads.tmp)){
tr <- which(quadsum$TreatQuad == quads.tmp[i])
temp <- quadsum[tr,]
points(y = temp$prop.liv, x = temp$day, pch = temp$pch[1],
col = temp$paint[1])
lines(y = temp$prop.liv, x = temp$day, pch = temp$pch[1],
col = temp$paint[1])
}
}
}
#title
mtext("Proportion of Alive Bugs", side = 3, line = 0, outer = TRUE, cex = 1.2)
#Top Headings
mtext("1 Day After Painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.18)
mtext("90 days after painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.50)
mtext("180 days after painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.84)
#side headings
mtext("Exposed 1 Hour", side = 2, line = -0.2, outer = T, at = 0.938, adj = 1, cex = 0.8)
mtext("Exposed 3 Hours", side = 2, line = -0.2, outer =T, at = 0.69, adj = 1, cex = 0.8)
mtext("Exposed 6 Hours", side = 2, line = -0.2, outer = T, at = 0.4392, adj = 1, cex = 0.8)
mtext("Exposed 24 Hours", side = 2, line = -0.2, outer = T, at = 0.198, adj = 1, cex = 0.8)
#turn off pdf or jpeg
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n")
legend(x = "bottom", legend = c("Control","5A-IGR", "Chlorfenapyr"), col = c(1,2,3),
pch = c(20, 15, 17), lty = 1, cex = 2, horiz= TRUE)
dap <- unique(quadsum$days.after.paint)
dap <- dap[order(dap)]
ext <- unique(quadsum$exp.time)
par(mfrow = c(4,3), oma = c(1,1,2,1)) #4 across 3
for(k in 1:length(ext)){
tsdap <- which(quadsum$exp.time == ext[k])
for(j in 1:length(dap)){
tsext <- which(quadsum$days.after.paint == dap[j])
tsde <- intersect(tsdap, tsext)
#d <- "days"
#if(dap[j] == 1){d <- "day"}
plot(y = quadsum$prop.alive, x = quadsum$day,
pch = quadsum$pch, col = quadsum$paint,
type = "n", #main = as.character(paste("J =", ext[k], "hrs:", "K =", dap[j],
#            d, sep = " ")),
ylab = "Proportion Alive", xlab = "Days Since Exposure",
xaxt = 'n', yaxt = 'n')
udays <- c( 0, 7, 14, 21, 28)
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = udays, labels = udays)
quads.tmp <- unique(quadsum$TreatQuad[tsde])
for(i in 1:length(quads.tmp)){
tr <- which(quadsum$TreatQuad == quads.tmp[i])
temp <- quadsum[tr,]
points(y = temp$prop.liv, x = temp$day, pch = temp$pch[1],
col = temp$paint[1])
lines(y = temp$prop.liv, x = temp$day, pch = temp$pch[1],
col = temp$paint[1])
}
}
}
#title
mtext("Proportion of Alive Bugs", side = 3, line = 0, outer = TRUE, cex = 1.2)
#Top Headings
mtext("1 Day After Painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.18)
mtext("90 days after painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.50)
mtext("180 days after painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.84)
#side headings
mtext("Exposed 1 Hour", side = 2, line = -0.2, outer = T, at = 0.938, adj = 1, cex = 0.8)
mtext("Exposed 3 Hours", side = 2, line = -0.2, outer =T, at = 0.69, adj = 1, cex = 0.8)
mtext("Exposed 6 Hours", side = 2, line = -0.2, outer = T, at = 0.4392, adj = 1, cex = 0.8)
mtext("Exposed 24 Hours", side = 2, line = -0.2, outer = T, at = 0.198, adj = 1, cex = 0.8)
#turn off pdf or jpeg
dev.off()
quadsum$exp.time <- revalue(quadsum$exp.time, c("01H" = "1",
"03H" = "3",
"06H" = "6",
"24H" = "24"))
#pdf("TABLES_GRAPHS/Bioassay_Array/Bioassay_Graphs_Array_Quads.pdf", width = 6,
#height = 9)
#jpeg("TABLES_GRAPHS/Bioassay_Array/Bioassay_Graphs_Array_Quads.jpeg", width = 6,
#     height = 9, units = "in", res = 300)
dap <- unique(quadsum$days.after.paint)
dap <- dap[order(dap)]
ext <- unique(quadsum$exp.time)
par(mfrow = c(4,3), oma = c(1,1,2,1)) #4 across 3
for(k in 1:length(ext)){
tsdap <- which(quadsum$exp.time == ext[k])
for(j in 1:length(dap)){
tsext <- which(quadsum$days.after.paint == dap[j])
tsde <- intersect(tsdap, tsext)
#d <- "days"
#if(dap[j] == 1){d <- "day"}
plot(y = quadsum$prop.alive, x = quadsum$day,
pch = quadsum$pch, col = quadsum$paint,
type = "n", #main = as.character(paste("J =", ext[k], "hrs:", "K =", dap[j],
#            d, sep = " ")),
ylab = "Proportion Alive", xlab = "Days Since Exposure",
xaxt = 'n', yaxt = 'n')
udays <- c( 0, 7, 14, 21, 28)
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = udays, labels = udays)
quads.tmp <- unique(quadsum$TreatQuad[tsde])
for(i in 1:length(quads.tmp)){
tr <- which(quadsum$TreatQuad == quads.tmp[i])
temp <- quadsum[tr,]
points(y = temp$prop.liv, x = temp$day, pch = temp$pch[1],
col = temp$paint[1])
lines(y = temp$prop.liv, x = temp$day, pch = temp$pch[1],
col = temp$paint[1])
}
}
}
#title
mtext("Proportion of Alive Bugs", side = 3, line = 0, outer = TRUE, cex = 1.2)
#Top Headings
mtext("1 Day After Painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.18)
mtext("90 days after painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.50)
mtext("180 days after painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.84)
#side headings
mtext("Exposed 1 Hour", side = 2, line = -0.2, outer = T, at = 0.938, adj = 1, cex = 0.8)
mtext("Exposed 3 Hours", side = 2, line = -0.2, outer =T, at = 0.69, adj = 1, cex = 0.8)
mtext("Exposed 6 Hours", side = 2, line = -0.2, outer = T, at = 0.4392, adj = 1, cex = 0.8)
mtext("Exposed 24 Hours", side = 2, line = -0.2, outer = T, at = 0.198, adj = 1, cex = 0.8)
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n")
legend(x = "bottom", legend = c("Control","5A-IGR", "Chlorfenapyr"), col = c(1,2,3),
pch = c(20, 15, 17), lty = 1, cex = 2, horiz= TRUE)
legend(x = "bottom", legend = c("Control","5A-IGR", "Chlorfenapyr"), col = c(1,2,3),
pch = c(20, 15, 17), lty = 1, cex = 1, horiz= TRUE)
jpeg("TABLES_GRAPHS/Bioassay_Array/Bioassay_Graphs_Array_Quads.jpeg", width = 6,
height = 9, units = "in", res = 300)
dap <- unique(quadsum$days.after.paint)
dap <- dap[order(dap)]
ext <- unique(quadsum$exp.time)
par(mfrow = c(4,3), oma = c(1,1,2,1)) #4 across 3
for(k in 1:length(ext)){
tsdap <- which(quadsum$exp.time == ext[k])
for(j in 1:length(dap)){
tsext <- which(quadsum$days.after.paint == dap[j])
tsde <- intersect(tsdap, tsext)
#d <- "days"
#if(dap[j] == 1){d <- "day"}
plot(y = quadsum$prop.alive, x = quadsum$day,
pch = quadsum$pch, col = quadsum$paint,
type = "n", #main = as.character(paste("J =", ext[k], "hrs:", "K =", dap[j],
#            d, sep = " ")),
ylab = "Proportion Alive", xlab = "Days Since Exposure",
xaxt = 'n', yaxt = 'n')
udays <- c( 0, 7, 14, 21, 28)
axis( 2, at = c(0:5 / 5), las = 2,
labels = as.character(c(0:5 / 5)))
axis( 1, at = udays, labels = udays)
quads.tmp <- unique(quadsum$TreatQuad[tsde])
for(i in 1:length(quads.tmp)){
tr <- which(quadsum$TreatQuad == quads.tmp[i])
temp <- quadsum[tr,]
points(y = temp$prop.liv, x = temp$day, pch = temp$pch[1],
col = temp$paint[1])
lines(y = temp$prop.liv, x = temp$day, pch = temp$pch[1],
col = temp$paint[1])
}
}
}
#title
mtext("Proportion of Alive Bugs", side = 3, line = 0, outer = TRUE, cex = 1.2)
#Top Headings
mtext("1 Day After Painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.18)
mtext("90 days after painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.50)
mtext("180 days after painting", side = 3, line =-2 , outer = TRUE, cex=0.8, at = 0.84)
#side headings
mtext("Exposed 1 Hour", side = 2, line = -0.2, outer = T, at = 0.938, adj = 1, cex = 0.8)
mtext("Exposed 3 Hours", side = 2, line = -0.2, outer =T, at = 0.69, adj = 1, cex = 0.8)
mtext("Exposed 6 Hours", side = 2, line = -0.2, outer = T, at = 0.4392, adj = 1, cex = 0.8)
mtext("Exposed 24 Hours", side = 2, line = -0.2, outer = T, at = 0.198, adj = 1, cex = 0.8)
#turn off pdf or jpeg
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n")
legend(x = "bottom", legend = c("Control","5A-IGR", "Chlorfenapyr"), col = c(1,2,3),
pch = c(20, 15, 17), lty = 1, cex = 1, horiz= TRUE)
dev.off()
CompVidRep2 <- read.csv("CompVidRep2.csv")
CompVidRep3 <- read.csv("CompVidRep3.csv")
CompVidRep4 <- read.csv("CompVidRep4.csv")
wd <- paste("/Users/dtracy198/Documents/GitHub/Laboratory/",
"Inesfly_Paint_Bed_Bug_Trial/Pesticide_Detection", sep = "")
setwd(wd)
CompVidRep2 <- read.csv("CompVidRep2.csv")
CompVidRep3 <- read.csv("CompVidRep3.csv")
CompVidRep4 <- read.csv("CompVidRep4.csv")
###Functions to make a running average of proportion of bugs on pesticide
#Treatment
ma <- function(d.f, length) {
my.list <- vector('list', length)
pesticide.fr.past <- 0
treatment.fr.past <- 0
for (i in 1:length) {
frame.num <- which(d.f$frame == i)
one.zero <- which(d.f$Result == "1-0")
one.one <- which(d.f$Result == "1-1")
treatment.fr <- intersect(frame.num, union(one.zero, one.one))
pesticide.fr <- intersect(frame.num, one.one)
pesticide.fr.rt <- (length(pesticide.fr) + pesticide.fr.past)
treatment.fr.rt <- (length(treatment.fr) + treatment.fr.past)
my.list[[i]] <- pesticide.fr.rt/treatment.fr.rt
pesticide.fr.past <- pesticide.fr.rt
treatment.fr.past <- treatment.fr.rt
}
final.df <- do.call('rbind', my.list)
return(final.df)
}
ma.control <- function(d.f, length) {
my.list <- vector('list', length)
pesticide.fr.past <- 0
control.fr.past <- 0
for (i in 1:length) {
frame.num <- which(d.f$frame == i)
zero.zero <- which(d.f$Result == "0-0")
zero.one <- which(d.f$Result == "0-1")
control.fr <- intersect(frame.num, union(zero.zero, zero.one))
pesticide.fr <- intersect(frame.num, zero.one)
pesticide.fr.rt <- (length(pesticide.fr) + pesticide.fr.past)
control.fr.rt <- (length(control.fr) + control.fr.past)
my.list[[i]] <- pesticide.fr.rt/control.fr.rt
pesticide.fr.past <- pesticide.fr.rt
control.fr.past <- control.fr.rt
}
final.df <- do.call('rbind', my.list)
return(final.df)
}
#Run Function over Rep 2
ma.CompVidRep2 <- ma(CompVidRep2, 1800)
ma.control.CompVidRep2 <- ma.control(CompVidRep2, 1800)
#Run Function over Rep 2
ma.CompVidRep3 <- ma(CompVidRep3, 1800)
ma.control.CompVidRep3 <- ma.control(CompVidRep3, 1800)
#Run Function over Rep 2
ma.CompVidRep4 <- ma(CompVidRep4, 1800)
ma.control.CompVidRep4 <- ma.control(CompVidRep4, 1800)
fgTwoWD <- paste("/Users/dtracy198/Documents/GitHub/Laboratory/",
"Inesfly_Paint_Bed_Bug_Trial/TABLES_GRAPHS/",
"Fig2RunningAvg", sep = "")
#setwd(fgTwoOWD)
write.csv( ma.CompVidRep2, "ma_CompVidRep2.csv")
write.csv( ma.control.CompVidRep2, "ma_control_CompVidRep2.csv")
write.csv( ma.CompVidRep3, "ma_CompVidRep3.csv")
write.csv( ma.control.CompVidRep3, "ma_control_CompVidRep3.csv")
write.csv( ma.CompVidRep4, "ma_CompVidRep4.csv")
write.csv( ma.control.CompVidRep4, "ma_control_CompVidRep4.csv")
#setwd(WD)
ima <- function(d.f, length) {
insects <- unique(d.f$insect.id)
my.df <- data.frame(matrix(nrow = length(insects), ncol = length+2))
my.df[,1] <- unique(d.f$insect.id)
zero <- which(d.f$Treat_Quad == 0)
one <- which(d.f$Treat_Quad == 1)
for(j in 1:length(unique(d.f$insect.id))){
pesticide.fr.past <- 0
treatment.fr.past <- 0
insect.fr <- which(d.f$insect.id == unique(d.f$insect.id)[j])
my.df[j,2] <- d.f$PTray[min(insect.fr)]
denom <- intersect(union(zero, one), insect.fr)
neum <- intersect(one, insect.fr)
for (i in 1:length) {
frame.num <- which(d.f$frame == i)
treatment.fr <- intersect(frame.num, denom)
pesticide.fr <- intersect(frame.num, neum)
pesticide.fr.rt <- (length(pesticide.fr) + pesticide.fr.past)
treatment.fr.rt <- (length(treatment.fr) + treatment.fr.past)
my.df[[j,i+2]] <- pesticide.fr.rt/treatment.fr.rt
pesticide.fr.past <- pesticide.fr.rt
treatment.fr.past <- treatment.fr.rt
}
}
return(my.df)
}
#Run Function over Rep 2
ima.CVR2 <- ima(CompVidRep2, 1800)
ima.CVR3 <- ima(CompVidRep3, 1800)
ima.CVR4 <- ima(CompVidRep4, 1800)
setwd("fgTwoWD")
write.csv(ima.CVR2,"ima_CVR2.csv")
write.csv(ima.CVR3,"ima_CVR3.csv")
write.csv(ima.CVR4,"ima_CVR4.csv")
setwd("WD")
###############################################################################
#### Instantaneous Speed ####
#lets look at speed (distance traveled from previous frame)
ClockSpeed <-function(df){
insects <- unique(df$insect.id)
my.df <- data.frame(matrix(nrow = length(insects), ncol = (max(df$frame)+1)))
my.df[,1] <- unique(df$insect.id)
insects <- unique(df$insect.id)
for(i in 1:length(insects)){
ins <- which(df$insect.id == insects[i])
rev_frames <- df$frame[ins]
my.df[i,2] <- df$PTray[min(ins)]
for(f in 2:length(rev_frames)){
frmn <- rev_frames[f]
pfrmn <-rev_frames[f-1]
p.cf <- which(df$frame == frmn)
p.pf <- which(df$frame == pfrmn)
cf <- intersect(p.cf, ins)
pf <- intersect(p.pf, ins)
my.df[i,f+1]<-sqrt((df$x[cf]-df$x[pf])^2+(df$y[cf]-df$y[pf])^2)/(frmn-pfrmn)
}
}
return(my.df)
}
# insects <- unique(CompVidRep3$insect.id)
# my.df <- data.frame(matrix(nrow = length(insects),
#                            ncol = (max(CompVidRep3$frame)+1)))
# my.df[,1] <- unique(CompVidRep3$insect.id)
# insects <- unique(CompVidRep3$insect.id)
# for(i in 1){
#   ins <- which(CompVidRep3$insect.id == insects[1])
#   rev_frames <- CompVidRep3$frame[ins]
#   my.df[i,2] <- CompVidRep3$PTray[min(ins)]
#   for(f in 2:length(rev_frames)){
#     frmn <- rev_frames[f]
#     pfrmn <-rev_frames[f-1]
#     p.cf <- which(CompVidRep3$frame == frmn)
#     p.pf <- which(CompVidRep3$frame == pfrmn)
#     cf <- intersect(p.cf, ins)
#     pf <- intersect(p.pf, ins)
#     my.df[i,f+1]<-sqrt((CompVidRep3$x[cf]-CompVidRep3$x[pf])^2 +
#                       (CompVidRep3$y[cf]-CompVidRep3$y[pf])^2)/(frmn-pfrmn)
#   }
# }
csCVR2<-ClockSpeed(CompVidRep2)
csCVR3<-ClockSpeed(CompVidRep3)
csCVR4<-ClockSpeed(CompVidRep4)
ima <- function(d.f, length) {
insects <- unique(d.f$insect.id)
my.df <- data.frame(matrix(nrow = length(insects), ncol = length+2))
my.df[,1] <- unique(d.f$insect.id)
zero <- which(d.f$Treat_Quad == 0)
one <- which(d.f$Treat_Quad == 1)
for(j in 1:length(unique(d.f$insect.id))){
pesticide.fr.past <- 0
treatment.fr.past <- 0
insect.fr <- which(d.f$insect.id == unique(d.f$insect.id)[j])
my.df[j,2] <- d.f$PTray[min(insect.fr)]
denom <- intersect(union(zero, one), insect.fr)
neum <- intersect(one, insect.fr)
for (i in 1:length) {
frame.num <- which(d.f$frame == i)
treatment.fr <- intersect(frame.num, denom)
pesticide.fr <- intersect(frame.num, neum)
pesticide.fr.rt <- (length(pesticide.fr) + pesticide.fr.past)
treatment.fr.rt <- (length(treatment.fr) + treatment.fr.past)
my.df[[j,i+2]] <- pesticide.fr.rt/treatment.fr.rt
pesticide.fr.past <- pesticide.fr.rt
treatment.fr.past <- treatment.fr.rt
}
}
return(my.df)
}
#Run Function over Rep 2
ima.CVR2 <- ima(CompVidRep2, 1800)
ima.CVR3 <- ima(CompVidRep3, 1800)
ima.CVR4 <- ima(CompVidRep4, 1800)
setwd("fgTwoWD")
write.csv(ima.CVR2,"ima_CVR2.csv")
write.csv(ima.CVR3,"ima_CVR3.csv")
write.csv(ima.CVR4,"ima_CVR4.csv")
setwd("WD")
###############################################################################
#### Instantaneous Speed ####
#lets look at speed (distance traveled from previous frame)
ClockSpeed <-function(df){
insects <- unique(df$insect.id)
my.df <- data.frame(matrix(nrow = length(insects), ncol = (max(df$frame)+1)))
my.df[,1] <- unique(df$insect.id)
insects <- unique(df$insect.id)
for(i in 1:length(insects)){
ins <- which(df$insect.id == insects[i])
rev_frames <- df$frame[ins]
my.df[i,2] <- df$PTray[min(ins)]
for(f in 2:length(rev_frames)){
frmn <- rev_frames[f]
pfrmn <-rev_frames[f-1]
p.cf <- which(df$frame == frmn)
p.pf <- which(df$frame == pfrmn)
cf <- intersect(p.cf, ins)
pf <- intersect(p.pf, ins)
my.df[i,f+1]<-sqrt((df$x[cf]-df$x[pf])^2+(df$y[cf]-df$y[pf])^2)/(frmn-pfrmn)
}
}
return(my.df)
}
# insects <- unique(CompVidRep3$insect.id)
# my.df <- data.frame(matrix(nrow = length(insects),
#                            ncol = (max(CompVidRep3$frame)+1)))
# my.df[,1] <- unique(CompVidRep3$insect.id)
# insects <- unique(CompVidRep3$insect.id)
# for(i in 1){
#   ins <- which(CompVidRep3$insect.id == insects[1])
#   rev_frames <- CompVidRep3$frame[ins]
#   my.df[i,2] <- CompVidRep3$PTray[min(ins)]
#   for(f in 2:length(rev_frames)){
#     frmn <- rev_frames[f]
#     pfrmn <-rev_frames[f-1]
#     p.cf <- which(CompVidRep3$frame == frmn)
#     p.pf <- which(CompVidRep3$frame == pfrmn)
#     cf <- intersect(p.cf, ins)
#     pf <- intersect(p.pf, ins)
#     my.df[i,f+1]<-sqrt((CompVidRep3$x[cf]-CompVidRep3$x[pf])^2 +
#                       (CompVidRep3$y[cf]-CompVidRep3$y[pf])^2)/(frmn-pfrmn)
#   }
# }
csCVR2<-ClockSpeed(CompVidRep2)
csCVR3<-ClockSpeed(CompVidRep3)
csCVR4<-ClockSpeed(CompVidRep4)
fgTwoWD <- paste("/Users/dtracy198/Documents/GitHub/Laboratory/",
"Inesfly_Paint_Bed_Bug_Trial/TABLES_GRAPHS/",
"Fig2RunningAvg", sep = "")
setwd(fgTwoOWD)
write.csv( ma.CompVidRep2, "ma_CompVidRep2.csv")
write.csv( ma.control.CompVidRep2, "ma_control_CompVidRep2.csv")
write.csv( ma.CompVidRep3, "ma_CompVidRep3.csv")
write.csv( ma.control.CompVidRep3, "ma_control_CompVidRep3.csv")
write.csv( ma.CompVidRep4, "ma_CompVidRep4.csv")
write.csv( ma.control.CompVidRep4, "ma_control_CompVidRep4.csv")
setwd(WD)
setwd(fgTwoWD)
write.csv(ima.CVR2,"ima_CVR2.csv")
write.csv(ima.CVR3,"ima_CVR3.csv")
write.csv(ima.CVR4,"ima_CVR4.csv")
setwd(WD)
fgTwoWD <- paste("/Users/dtracy198/Documents/GitHub/Laboratory/",
"Inesfly_Paint_Bed_Bug_Trial/TABLES_GRAPHS/",
"Fig2RunningAvg", sep = "")
setwd(fgTwoWD)
setwd(fgTwoWD)
write.csv( ma.CompVidRep2, "ma_CompVidRep2.csv")
write.csv( ma.control.CompVidRep2, "ma_control_CompVidRep2.csv")
write.csv( ma.CompVidRep3, "ma_CompVidRep3.csv")
write.csv( ma.control.CompVidRep3, "ma_control_CompVidRep3.csv")
write.csv( ma.CompVidRep4, "ma_CompVidRep4.csv")
write.csv( ma.control.CompVidRep4, "ma_control_CompVidRep4.csv")
setwd(WD)
setwd(fgTwoWD)
write.csv( ma.CompVidRep2, "ma_CompVidRep2.csv")
write.csv( ma.control.CompVidRep2, "ma_control_CompVidRep2.csv")
write.csv( ma.CompVidRep3, "ma_CompVidRep3.csv")
write.csv( ma.control.CompVidRep3, "ma_control_CompVidRep3.csv")
write.csv( ma.CompVidRep4, "ma_CompVidRep4.csv")
write.csv( ma.control.CompVidRep4, "ma_control_CompVidRep4.csv")
setwd(wd)
setwd(fgTwoWD)
write.csv(ima.CVR2,"ima_CVR2.csv")
write.csv(ima.CVR3,"ima_CVR3.csv")
write.csv(ima.CVR4,"ima_CVR4.csv")
setwd(wd)
fgThreeWD <- paste("/Users/dtracy198/Documents/GitHub/Laboratory/",
"Inesfly_Paint_Bed_Bug_Trial/TABLES_GRAPHS/",
"Fig3Speed", sep = "")
setwd(fgThreeWD)
write.csv(csCVR2, "csCVR2.csv")
write.csv(csCVR3, "csCVR3.csv")
write.csv(csCVR4, "csCVR4.csv")
setwd(WD)
